[{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://docs.ropensci.org/phylotaR/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://docs.ropensci.org/phylotaR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. recommend tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://docs.ropensci.org/phylotaR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"CONTRIBUTING","text":"Please note phylotaR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/phylotaR/CONTRIBUTING.html","id":"see-ropensci-contributing-guide","dir":"","previous_headings":"","what":"See rOpenSci contributing guide","title":"CONTRIBUTING","text":"details.","code":""},{"path":"https://docs.ropensci.org/phylotaR/CONTRIBUTING.html","id":"discussion-forum","dir":"","previous_headings":"","what":"Discussion forum","title":"CONTRIBUTING","text":"Check discussion forum think issue requires longer form discussion.","code":""},{"path":"https://docs.ropensci.org/phylotaR/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://docs.ropensci.org/phylotaR/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://docs.ropensci.org/phylotaR/articles/phylotaR.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"phylotaR Tutorial","text":"first step running phylogenetic analysis identification overlapping sequences. Often orthology determined pairing sequences whose gene names match (e.g. COI sequences COI sequences, rbcl sequences rbcl sequences). Problems can arise however gene names differ authors, different gene sections represented sequences mislabelled. issues can especially problematic large-scale analyses individual errors detected. PhyLoTa pipeline uses alignment search tool identify orthologous sequences without need gene name matching. given parental taxonomic group, pipeline search available sequences hosted GenBank identify orthologous sequence clusters. user able survey identified clusters select ones best suit phylogenetic analysis needs, e.g. selecting clusters maximise number taxonomic groups. R pacakge, phylotaR, R implementation pipeline. vignette demonstrate run PhyLoTa using small taxonomic group. pipeline composed four automated stages (taxise, download, cluster, cluster2) final user-performed stage cluster selection.","code":""},{"path":"https://docs.ropensci.org/phylotaR/articles/phylotaR.html","id":"installing-ncbi-blast-tools","dir":"Articles","previous_headings":"","what":"Installing NCBI BLAST+ Tools","title":"phylotaR Tutorial","text":"PhyLoTa pipeline uses BLAST identify orthologous sequence clusters. order run phylotaR, local copy BLAST software must installed computer. Installing phylotaR package install BLAST, must installed separately. install BLAST+, please see NCBI website’s installation instructions.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/articles/phylotaR.html","id":"setup","dir":"Articles","previous_headings":"Pipeline","what":"Setup","title":"phylotaR Tutorial","text":"demonstration purposes run pipeline small taxonomic group. charismatic relatively well-studied, select Night Monkey genus, Aotus. Now decided taxonomic group need find unique taxonomic ID. can looked navigating NCBI taxonomy webpage searching ‘Aotus’. , can see Aotus ID 9504. need number specifying parameters pipeline. (Notice, also plant genus called Aotus.) begin run, need create new folder contain output files generated phylotaR pipeline. Since running analysis Aotus genus, let’s call folder aotus/. Now working directory folder created, can now open R run following code. imports phylotaR package initiates cache contain pipeline parameters. tutorial keep parameters default. See function parameters() complete list description parameters default values. detailed information parameters please see publication, phylotaR: Automated Pipeline Retrieving Orthologous DNA Sequences GenBank R. wd must file path folder called aotus/. ncbi_dr must file path folder containing NCBI BLAST+ tools – see ‘Installing NCBI BLAST+ Tools’. Depending system installed tools, may system path case can simply supply ‘.’ ncbi_dr argument. computer provide path blastn executable located, e.g. /usr/local/ncbi/blast/bin/. Running setup() verify whether BLAST tools installed correctly.","code":"library(phylotaR) wd <- '[YOUR PATH TO AOTUS FOLDER]' ncbi_dr <- '[YOUR PATH TO NCBI BLAST TOOLS]' txid <- 9504 setup(wd = wd, txid = txid, ncbi_dr = ncbi_dr, v = TRUE) ## ----------------------------------------------------- ## phylotaR: Implementation of PhyLoTa in R [v1.2.0.999] ## ----------------------------------------------------- ## Checking for valid NCBI BLAST+ Tools ... ## Found: [/workspaces/blast/bin/makeblastdb] ## Found: [/workspaces/blast/bin/blastn] ## . . Running makeblastdb ## Setting up pipeline with the following parameters: ## . blstn          [/workspaces/blast/bin/blastn] ## . btchsz         [100] ## . date           [2022-07-12] ## . db_only        [FALSE] ## . mdlthrs        [3000] ## . mkblstdb       [/workspaces/blast/bin/makeblastdb] ## . mncvrg         [51] ## . mnsql          [250] ## . multiple_ids   [FALSE] ## . mxevl          [1e-10] ## . mxnds          [1e+05] ## . mxrtry         [100] ## . mxsql          [2000] ## . mxsqs          [50000] ## . ncps           [1] ## . outfmt         [6 qseqid sseqid pident length evalue qcovs qcovhsp] ## . outsider       [FALSE] ## . srch_trm       [NOT predicted[TI] NOT \"whole genome shotgun\"[TI] NOT unverified[TI] NOT \"synthetic construct\"[Organism] NOT refseq[filter] NOT TSA[Keyword]] ## . txid           [9504] ## . v              [TRUE] ## . wd             [/tmp/RtmpDeuk8B] ## . wt_tms         [1, 3, 6 ...] ## -----------------------------------------------------"},{"path":"https://docs.ropensci.org/phylotaR/articles/phylotaR.html","id":"running","dir":"Articles","previous_headings":"Pipeline","what":"Running","title":"phylotaR Tutorial","text":"setup() run can run pipeline following command. run automated stages pipeline: taxise, download, cluster cluster2. first stages looks taxonomic information available descendants parent ID provided, txid. second downloads representative sequences identified descendants. additional arguments required wd specifies working directory contains cache parameters set setup(). folder also find log.txt reports detailed information progression pipeline well output files generated stage. Additionally, see session info blast version text files. files, along log, can help debugging errors occur. whole pipeline can complete around 2 minutes Aotus using default parameters. Aotus, however, genus 13 taxa, larger clades take much longer particularly download stage.","code":"run(wd = wd) ## --------------------------------------------------- ## Running pipeline on [unix] at [2022-07-12 13:55:01] ## --------------------------------------------------- ## Running stages: taxise, download, cluster, cluster2 ## -------------------------------------------- ## Starting stage TAXISE: [2022-07-12 13:55:01] ## -------------------------------------------- ## Searching taxonomic IDs ... ## Downloading taxonomic records ... ## . [1-22] ## Generating taxonomic dictionary ... ## --------------------------------------------- ## Completed stage TAXISE: [2022-07-12 13:55:06] ## --------------------------------------------- ## ---------------------------------------------- ## Starting stage DOWNLOAD: [2022-07-12 13:55:06] ## ---------------------------------------------- ## Identifying suitable clades ... ## Identified [1] suitable clades. ## Downloading hierarchically ... ## Working on parent [id 9504]: [1/1] ... ## . + direct ... ## . + by child ... ## . . Working on child [id 2688256] ## . . + whole subtree ... ## . . . Downloading [34 sqs] ... ## . . . . [1-34] ## . . . Working on child [id 1263727] ## . . . + whole subtree ... ## . . . . Downloading [3 sqs] ... ## . . . . . [1-3] ## . . . . Working on child [id 361674] ## . . . . + whole subtree ... ## . . . . . Downloading [1 sqs] ... ## . . . . . . [1-1] ## . . . . . Working on child [id 292213] ## . . . . . + whole subtree ... ## . . . . . . Downloading [100 sqs] ... ## . . . . . . . [1-100] ## . . . . . . Working on child [id 57176] ## . . . . . . + whole subtree ... ## . . . . . . . Downloading [200 sqs] ... ## . . . . . . . . [1-100] ## . . . . . . . . [101-200] ## . . . . . . . Working on child [id 57175] ## . . . . . . . + whole subtree ... ## . . . . . . . . Downloading [100 sqs] ... ## . . . . . . . . . [1-100] ## . . . . . . . . Working on child [id 43147] ## . . . . . . . . + whole subtree ... ## . . . . . . . . . Downloading [900 sqs] ... ## . . . . . . . . . . [1-100] ## . . . . . . . . . . [101-200] ## . . . . . . . . . . [201-300] ## . . . . . . . . . . [301-400] ## . . . . . . . . . . [401-500] ## . . . . . . . . . . [501-600] ## . . . . . . . . . . [601-700] ## . . . . . . . . . . [701-800] ## . . . . . . . . . . [801-900] ## . . . . . . . . . Working on child [id 37293] ## . . . . . . . . . + whole subtree ... ## . . . . . . . . . . Downloading [600 sqs] ... ## . . . . . . . . . . . [1-100] ## . . . . . . . . . . . [101-200] ## . . . . . . . . . . . [201-300] ## . . . . . . . . . . . [301-400] ## . . . . . . . . . . . [401-500] ## . . . . . . . . . . . [501-600] ## . . . . . . . . . . Working on child [id 30591] ## . . . . . . . . . . + whole subtree ... ## . . . . . . . . . . . Downloading [1000 sqs] ... ## . . . . . . . . . . . . [1-100] ## . . . . . . . . . . . . [101-200] ## . . . . . . . . . . . . [201-300] ## . . . . . . . . . . . . [301-400] ## . . . . . . . . . . . . [401-500] ## . . . . . . . . . . . . [501-600] ## . . . . . . . . . . . . [601-700] ## . . . . . . . . . . . . [701-800] ## . . . . . . . . . . . . [801-900] ## . . . . . . . . . . . . [901-1000] ## . . . . . . . . . . . Working on child [id 9505] ## . . . . . . . . . . . + whole subtree ... ## . . . . . . . . . . . . Downloading [300 sqs] ... ## . . . . . . . . . . . . . [1-100] ## . . . . . . . . . . . . . [101-200] ## . . . . . . . . . . . . . [201-300] ## Successfully retrieved [3238 sqs] in total. ## ----------------------------------------------- ## Completed stage DOWNLOAD: [2022-07-12 13:57:42] ## ----------------------------------------------- ## --------------------------------------------- ## Starting stage CLUSTER: [2022-07-12 13:57:42] ## --------------------------------------------- ## Working from [id 9504] down hierarchy ## . + direct [id 9504 (genus)] ## . + subtree [id 9504 (genus)] ## . . BLASTing [3238 sqs] .... ## . . Running makeblastdb ## . . Running blastn ## . . Removed [85435/180447] hits due to insufficient coverage ## . . Identified [797] clusters ## . + parent [id 9504] ## . . + direct [id 2688256 (no rank)] ## . . + subtree [id 2688256 (no rank)] ## . . . BLASTing [34 sqs] .... ## . . . Removed [0/417] hits due to insufficient coverage ## . . . Identified [15] clusters ## . . + parent [id 2688256] ## . . . + subtree [id 1230482 (species)] ## . . + parent [id 2688256] ## . . . + subtree [id 1090913 (species)] ## . . + parent [id 2688256] ## . . . + subtree [id 1002694 (species)] ## . . + parent [id 2688256] ## . . . + subtree [id 940829 (species)] ## . . + parent [id 2688256] ## . . . + subtree [id 413234 (species)] ## . . + parent [id 2688256] ## . . . + subtree [id 261316 (species)] ## . . + parent [id 2688256] ## . . . + subtree [id 231953 (species)] ## . . + parent [id 2688256] ## . . . + subtree [id 222417 (species)] ## . + parent [id 9504] ## . . + subtree [id 1263727 (species)] ## . + parent [id 9504] ## . . + subtree [id 361674 (species)] ## . + parent [id 9504] ## . . + subtree [id 292213 (species)] ## . + parent [id 9504] ## . . + subtree [id 57176 (species)] ## . + parent [id 9504] ## . . + subtree [id 57175 (species)] ## . + parent [id 9504] ## . . + subtree [id 43147 (species)] ## . + parent [id 9504] ## . . + subtree [id 37293 (species)] ## . + parent [id 9504] ## . . + direct [id 30591 (species)] ## . . . BLASTing [565 sqs] .... ## . . . Removed [36184/51565] hits due to insufficient coverage ## . . . Identified [266] clusters ## . . + subtree [id 30591 (species)] ## . . . BLASTing [435 sqs] .... ## . . . Removed [911/7414] hits due to insufficient coverage ## . . . Identified [71] clusters ## . . + parent [id 30591] ## . . . + subtree [id 867331 (subspecies)] ## . . + parent [id 30591] ## . . . + subtree [id 280755 (subspecies)] ## . . + parent [id 30591] ## . . . + subtree [id 120088 (subspecies)] ## . + parent [id 9504] ## . . + subtree [id 9505 (species)] ## [1/1] ## ---------------------------------------------- ## Completed stage CLUSTER: [2022-07-12 13:57:58] ## ---------------------------------------------- ## ----------------------------------------------- ## Starting stage CLUSTER^2: [2022-07-12 13:57:58] ## ----------------------------------------------- ## Loading clusters ... ## Done. Only one cluster set -- skipping cluster^2 ## Dropping all clusters of < 3 sqs ... ## Renumbering clusters ... ## Saving ... ## ------------------------------------------------ ## Completed stage CLUSTER^2: [2022-07-12 13:57:59] ## ------------------------------------------------ ## ------------------------------------------- ## Completed pipeline at [2022-07-12 13:57:59] ## -------------------------------------------"},{"path":"https://docs.ropensci.org/phylotaR/articles/phylotaR.html","id":"restarting","dir":"Articles","previous_headings":"Pipeline","what":"Restarting","title":"phylotaR Tutorial","text":"pipeline can halted restarted. cache records downloaded generated data pipeline. system crash user wishes halt program, pipeline can restarted point stopped function restart(). Additionally, due potential random nature pipeline, user may wish re-run pipeline certain stages. can achived first using reset() followed restart(). example, code completed pipeline reset ‘cluster’ restarted. running commands, pipeline run just completed download stage. Note, resets restarts recorded log.","code":"reset(wd = wd, stage = 'cluster') restart(wd = wd)"},{"path":"https://docs.ropensci.org/phylotaR/articles/phylotaR.html","id":"changing-parameters","dir":"Articles","previous_headings":"Pipeline > Restarting","what":"Changing parameters","title":"phylotaR Tutorial","text":"Paramaters can always set user initiation folder setup() function. change parameter values folder already set , user can use parameters_reset(). example, download stage taking particularly long, btchsz increased. raise number sequences downloaded per request. (Note, high btchsz may cause NCBI Entrez access limited.)","code":"# use ctrl+c or Esc to halt R # increase the btchsz from the default to 300 parameters_reset(wd = wd, parameters = 'btchz', values = 300) restart(wd = wd) # ^ restart from whatever point it was halted"},{"path":"https://docs.ropensci.org/phylotaR/articles/phylotaR.html","id":"cluster-selection","dir":"Articles","previous_headings":"Pipeline","what":"Cluster selection","title":"phylotaR Tutorial","text":"pipeline completed, identified clusters can interrogated. can generate phylota object using read_phylota() code load pre-existing phylota object package data. phylota object contains cluster, sequence taxonomic information clusters. 6 data slots: cids, sids, txids, txdct, sqs, clstrs, prnt_id prnt_nm. slots can accessed @, see ?`Phylota-class` information. phylotaR package range functions probing clusters phylota object. example, want know many different taxonomic groups represented cluster can use get_ntaxa(). can drop clusters fewer 6 taxa create new phylota object using drop_cls() function. Let’s take peak now smaller object’s clusters using summary(). summary provides information cluster phylota object, median sequence length, MAD score (mean alignment density, values closer 1 indicate sequences similar length), common words sequence descriptions feature names. Let’s select second ID table investigation. can extract cluster sequences records following way. extract write sequences cluster manner. Handily, however, phylotaR comes tools make outputting sequences easier. First multiple sequences per taxon, need select single representative sequence. can drop_by_rank() function. function choose taxonomic rank like sequences represented. function chooses ‘best’ sequence representing taxon rank using range criteria. new phylota object, can extract scientific names write sequences.","code":"library(phylotaR) # pre-load already run aotus from package data data('aotus') all_clusters <- aotus print(all_clusters) ## [1] \"Phylota Table (Aotus)\\n- [193] clusters\\n- [1499] sequences\\n- [13] source taxa\\n\" # otherwise, run: # all_clusters <- read_phylota(wd) cids <- all_clusters@cids n_taxa <- get_ntaxa(phylota = all_clusters, cid = cids) keep <- cids[n_taxa > 6] selected <- drop_clstrs(phylota = all_clusters, cid = keep) smmry <- summary(selected) print(smmry) ##   ID    Type                Seed Parent N_taxa N_seqs Med_sql       MAD                      Definition ## 1  4 subtree            U36844.1   9504      9     41     549 0.8397112 gene (0.1), mitochondrial (0.1) ## 2  9 subtree          AJ489745.1   9504     10     29    1140 1.0000000   aotus (0.1), cytochrome (0.1) ## 3 29 subtree AF338374.1/177..829   9504      8     10     653 0.9658499          sry (0.2), aotus (0.1) ##                        Feature ## 1                     coii (1) ## 2 cytb (0.4), cytochrome (0.3) ## 3                      sry (1) cid <- smmry[2, 'ID'] # get the cluster record cluster_record <- selected@clstrs[[cid]] # use the seq. IDs to get the sequence records seq_records <- selected@sqs[cluster_record@sids] # extract a single record seq_record <- seq_records[[seq_records@ids[[1]]]] summary(seq_record) ## SeqRec [ID: AJ489745.1] # get the sequence seq <- rawToChar(seq_record@sq) print(substr(x = seq, start = 1, stop = 80)) ## [1] \"atgacttctccccgcaaaacacacccactaacaaagatcattaacgaatcattcattgatctacccacaccacccaacat\" # choose best sequence per species reduced <- drop_by_rank(phylota = selected, rnk = 'species', n = 1) # get txids at the species level for each sequence txids <- get_txids(phylota = reduced, cid = cid, rnk = 'species') # look up name for txids scientific_names <- get_tx_slot(phylota = reduced, txid = txids, slt_nm = 'scnm') # clean the names scientific_names <- gsub('\\\\.', '', scientific_names) scientific_names <- gsub('\\\\s+', '_', scientific_names) print(scientific_names) ##           AJ489745.1           DQ098865.1           DQ098869.1           DQ098873.1           HQ005497.1           HQ005502.1  ##    \"Aotus_nancymaae\"       \"Aotus_azarai\" \"Aotus_griseimembra\"  \"Aotus_trivirgatus\"    \"Aotus_nigriceps\"   \"Aotus_vociferans\"  ##           HQ005506.1   KR528418.1/1..1140  ##    \"Aotus_lemurinus\"           \"Aotus_sp\" # look up sequence IDs for our chosen cluster sids <- reduced@clstrs[[cid]]@sids # write out write_sqs(phylota = reduced, sid = sids, sq_nm = scientific_names,           outfile = file.path(tempdir(), 'cytb.fasta')) # ^ to avoid clutter, we're writing to a temporary folder"},{"path":"https://docs.ropensci.org/phylotaR/articles/phylotaR.html","id":"testing-output","dir":"Articles","previous_headings":"Pipeline","what":"Testing output","title":"phylotaR Tutorial","text":"can sanity check cluster sequences running quick phylogenetic analysis using mafft raxml. code use cluster generate alignment tree R. order code run, requires installation mafft raxml , additionally, may require tweaking work system. plot chunk testing","code":"library(ape) cwd <- getwd() setwd(tempdir()) # https://mafft.cbrc.jp/alignment/software/linux.html # https://github.com/stamatak/standard-RAxML system('mafft --auto cytb.fasta > alignment.fasta') system(paste0('raxmlHPC -m GTRGAMMA -f a -N 10 -p 1234 -x 1234 -n aotus -s alignment.fasta')) tree <- read.tree(file = 'RAxML_bestTree.aotus') plot(tree, no.margin = TRUE, type = 'unrooted') setwd(cwd)"},{"path":"https://docs.ropensci.org/phylotaR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shixiang Wang. Author, maintainer. Hannes Hettling. Author. Rutger Vos. Author. Alexander Zizka. Author. Dom Bennett. Author. Alexandre Antonelli. Author.","code":""},{"path":"https://docs.ropensci.org/phylotaR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang S, Hettling H, Vos R, Zizka , Bennett D, Antonelli (2024). phylotaR: Automated Phylogenetic Sequence Cluster Identification 'GenBank'. R package version 1.3.0,  https://github.com/ropensci/phylotaR#readme, https://docs.ropensci.org/phylotaR/.","code":"@Manual{,   title = {phylotaR: Automated Phylogenetic Sequence Cluster Identification from 'GenBank'},   author = {Shixiang Wang and Hannes Hettling and Rutger Vos and Alexander Zizka and Dom Bennett and Alexandre Antonelli},   year = {2024},   note = {R package version 1.3.0,  https://github.com/ropensci/phylotaR#readme},   url = {https://docs.ropensci.org/phylotaR/}, }"},{"path":"https://docs.ropensci.org/phylotaR/index.html","id":"automated-retrieval-of-orthologous-dna-sequences-from-genbank-","dir":"","previous_headings":"","what":"Automated Phylogenetic Sequence Cluster Identification from\n    GenBank","title":"Automated Phylogenetic Sequence Cluster Identification from\n    GenBank","text":"R implementation PhyLoTa sequence cluster pipeline. information see accompanying website. Tested demonstrated Unix Windows. Find visiting phylotaR website.","code":""},{"path":"https://docs.ropensci.org/phylotaR/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Automated Phylogenetic Sequence Cluster Identification from\n    GenBank","text":"Full functionality depends local copy BLAST+ (>= 2.0.0). details downloading compiling BLAST+ machine please visit NCBI website.","code":"install.packages(\"remotes\") remotes::install_github('ropensci/phylotaR')"},{"path":"https://docs.ropensci.org/phylotaR/index.html","id":"pipeline","dir":"","previous_headings":"","what":"Pipeline","title":"Automated Phylogenetic Sequence Cluster Identification from\n    GenBank","text":"phylotaR runs PhyLoTa pipeline four automated stages: identify retrieve taxonomic information descendent nodes taxonomic group interest (taxise), download sequence data every identified node (download), identify orthologous clusters using BLAST (cluster), identify sister clusters sets clusters identified previous stage (cluster^2) stages complete, phylotaR provides tools exploring, identifying exporting suitable clusters subsequent analysis. phylotaR pipeline information pipeline works see publication, phylotaR: Automated Pipeline Retrieving Orthologous DNA Sequences GenBank R.","code":""},{"path":"https://docs.ropensci.org/phylotaR/index.html","id":"running","dir":"","previous_headings":"","what":"Running","title":"Automated Phylogenetic Sequence Cluster Identification from\n    GenBank","text":"minimum user need provide taxonomic ID chosen taxonomic group interest. example, interested primates, can visit NCBI taxonomy home page search primates look ID. identifying ID, phylotaR pipeline can run following script. pipeline can stopped restarted point without loss data. details script, change parameters, check log details pipeline, please check package vignette.","code":"library(phylotaR) wd <- '[FILEPATH TO WORKING DIRECTORY]' ncbi_dr <- '[FILEPATH TO COMPILED BLAST+ TOOLS]' txid <- 9443  # primates ID setup(wd = wd, txid = txid, ncbi_dr = ncbi_dr) run(wd = wd) library(phylotaR) vignette(\"phylotaR\")"},{"path":"https://docs.ropensci.org/phylotaR/index.html","id":"timings","dir":"","previous_headings":"","what":"Timings","title":"Automated Phylogenetic Sequence Cluster Identification from\n    GenBank","text":"long take phylotaR pipeline complete? table listing runtimes minutes different demonstration, taxonomic groups. run demonstrations see demos/demo_run.R.","code":""},{"path":"https://docs.ropensci.org/phylotaR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Automated Phylogenetic Sequence Cluster Identification from\n    GenBank","text":"MIT","code":""},{"path":"https://docs.ropensci.org/phylotaR/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Automated Phylogenetic Sequence Cluster Identification from\n    GenBank","text":"Maintainer: Shixiang Wang w_shixiang@163.com package previously developed maintained : Dom Bennett, Hannes Hettling, Rutger Vos, Alexander Zizka Alexandre Antonelli","code":""},{"path":"https://docs.ropensci.org/phylotaR/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"Automated Phylogenetic Sequence Cluster Identification from\n    GenBank","text":"Bennett, D., Hettling, H., Silvestro, D., Zizka, ., Bacon, C., Faurby, S., … Antonelli, . (2018). phylotaR: Automated Pipeline Retrieving Orthologous DNA Sequences GenBank R. Life, 8(2), 20. DOI:10.3390/life8020020 Sanderson, M. J., Boss, D., Chen, D., Cranston, K. ., & Wehe, . (2008). PhyLoTA Browser: Processing GenBank molecular phylogenetics research. Systematic Biology, 57(3), 335–346. DOI:10.1080/10635150802158688","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrArc-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster record archive — ClstrArc-class","title":"Cluster record archive — ClstrArc-class","text":"Multiple cluster records.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrArc-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster record archive — ClstrArc-class","text":"","code":"# S4 method for ClstrArc as.character(x)  # S4 method for ClstrArc show(object)  # S4 method for ClstrArc print(x)  # S4 method for ClstrArc str(object, max.level = 2L, ...)  # S4 method for ClstrArc summary(object)  # S4 method for ClstrArc,character [[(x, i)  # S4 method for ClstrArc,character,missing,missing [(x, i, j, ..., drop = TRUE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrArc-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster record archive — ClstrArc-class","text":"x ClstrArc object object ClstrArc object max.level Maximum level nesting str() ... arguments str() cid(s) j Unused drop Unused","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrArc-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Cluster record archive — ClstrArc-class","text":"ids Vector cluster record IDs clstrs List ClstrArc named ID","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrArc-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster record archive — ClstrArc-class","text":"","code":"data('aotus') clstrarc <- aotus@clstrs # this is a ClstrArc object # it contains cluster records show(clstrarc) #> Archive of cluster record(s) #>  - [184] clusters # you can access its different data slots with @ clstrarc@ids     # unique cluster ID #>   [1] \"0\"   \"1\"   \"2\"   \"3\"   \"4\"   \"5\"   \"6\"   \"7\"   \"8\"   \"9\"   \"10\"  \"11\"  #>  [13] \"12\"  \"13\"  \"14\"  \"15\"  \"16\"  \"17\"  \"18\"  \"19\"  \"20\"  \"21\"  \"22\"  \"23\"  #>  [25] \"24\"  \"25\"  \"26\"  \"27\"  \"28\"  \"29\"  \"30\"  \"31\"  \"32\"  \"33\"  \"34\"  \"35\"  #>  [37] \"36\"  \"37\"  \"38\"  \"39\"  \"40\"  \"41\"  \"42\"  \"43\"  \"44\"  \"45\"  \"46\"  \"47\"  #>  [49] \"48\"  \"49\"  \"50\"  \"51\"  \"52\"  \"53\"  \"54\"  \"55\"  \"56\"  \"57\"  \"58\"  \"59\"  #>  [61] \"60\"  \"61\"  \"62\"  \"63\"  \"64\"  \"65\"  \"66\"  \"67\"  \"68\"  \"69\"  \"70\"  \"71\"  #>  [73] \"72\"  \"73\"  \"74\"  \"75\"  \"76\"  \"77\"  \"78\"  \"79\"  \"80\"  \"81\"  \"82\"  \"83\"  #>  [85] \"84\"  \"85\"  \"86\"  \"87\"  \"88\"  \"89\"  \"90\"  \"91\"  \"92\"  \"93\"  \"94\"  \"95\"  #>  [97] \"96\"  \"97\"  \"98\"  \"99\"  \"100\" \"101\" \"102\" \"103\" \"104\" \"105\" \"106\" \"107\" #> [109] \"108\" \"109\" \"110\" \"111\" \"112\" \"113\" \"114\" \"115\" \"116\" \"117\" \"118\" \"119\" #> [121] \"120\" \"121\" \"122\" \"123\" \"124\" \"125\" \"126\" \"127\" \"128\" \"129\" \"130\" \"131\" #> [133] \"132\" \"133\" \"134\" \"135\" \"136\" \"137\" \"138\" \"139\" \"140\" \"141\" \"142\" \"143\" #> [145] \"144\" \"145\" \"146\" \"147\" \"148\" \"149\" \"150\" \"151\" \"152\" \"153\" \"154\" \"155\" #> [157] \"156\" \"157\" \"158\" \"159\" \"160\" \"161\" \"162\" \"163\" \"164\" \"165\" \"166\" \"167\" #> [169] \"168\" \"169\" \"170\" \"171\" \"172\" \"173\" \"174\" \"175\" \"176\" \"177\" \"178\" \"179\" #> [181] \"180\" \"181\" \"182\" \"183\" clstrarc@clstrs  # list of cluster records #> $`0` #> Cluster Record [id 0] #>  - [subtree] type #>  - [AF129795.1] seed sequence #>  - [173] sequences #>  - [5] taxa #>  #> $`1` #> Cluster Record [id 1] #>  - [subtree] type #>  - [DQ098863.1] seed sequence #>  - [66] sequences #>  - [10] taxa #>  #> $`2` #> Cluster Record [id 2] #>  - [subtree] type #>  - [AY659849.1] seed sequence #>  - [55] sequences #>  - [5] taxa #>  #> $`3` #> Cluster Record [id 3] #>  - [subtree] type #>  - [DI178118.1] seed sequence #>  - [52] sequences #>  - [2] taxa #>  #> $`4` #> Cluster Record [id 4] #>  - [subtree] type #>  - [LC075891.1] seed sequence #>  - [50] sequences #>  - [2] taxa #>  #> $`5` #> Cluster Record [id 5] #>  - [subtree] type #>  - [HM761925.1] seed sequence #>  - [49] sequences #>  - [9] taxa #>  #> $`6` #> Cluster Record [id 6] #>  - [subtree] type #>  - [HM763429.1] seed sequence #>  - [49] sequences #>  - [9] taxa #>  #> $`7` #> Cluster Record [id 7] #>  - [subtree] type #>  - [JQ933053.1] seed sequence #>  - [48] sequences #>  - [9] taxa #>  #> $`8` #> Cluster Record [id 8] #>  - [subtree] type #>  - [HM759641.1] seed sequence #>  - [48] sequences #>  - [9] taxa #>  #> $`9` #> Cluster Record [id 9] #>  - [subtree] type #>  - [KC761951.1] seed sequence #>  - [47] sequences #>  - [9] taxa #>  #> $`10` #> Cluster Record [id 10] #>  - [subtree] type #>  - [MT489103.1] seed sequence #>  - [45] sequences #>  - [8] taxa #>  #> $`11` #> Cluster Record [id 11] #>  - [subtree] type #>  - [KC762127.1] seed sequence #>  - [45] sequences #>  - [9] taxa #>  #> $`12` #> Cluster Record [id 12] #>  - [subtree] type #>  - [KC761371.1] seed sequence #>  - [45] sequences #>  - [9] taxa #>  #> $`13` #> Cluster Record [id 13] #>  - [subtree] type #>  - [KC760228.1] seed sequence #>  - [43] sequences #>  - [9] taxa #>  #> $`14` #> Cluster Record [id 14] #>  - [subtree] type #>  - [JQ932794.1] seed sequence #>  - [43] sequences #>  - [4] taxa #>  #> $`15` #> Cluster Record [id 15] #>  - [direct] type #>  - [LC075891.1] seed sequence #>  - [43] sequences #>  - [1] taxa #>  #> $`16` #> Cluster Record [id 16] #>  - [subtree] type #>  - [EF658652.1] seed sequence #>  - [41] sequences #>  - [9] taxa #>  #> $`17` #> Cluster Record [id 17] #>  - [subtree] type #>  - [HM760775.1] seed sequence #>  - [41] sequences #>  - [8] taxa #>  #> $`18` #> Cluster Record [id 18] #>  - [subtree] type #>  - [MT488555.1] seed sequence #>  - [41] sequences #>  - [8] taxa #>  #> $`19` #> Cluster Record [id 19] #>  - [subtree] type #>  - [U38998.1] seed sequence #>  - [40] sequences #>  - [8] taxa #>  #> $`20` #> Cluster Record [id 20] #>  - [subtree] type #>  - [DQ321662.1] seed sequence #>  - [35] sequences #>  - [8] taxa #>  #> $`21` #> Cluster Record [id 21] #>  - [subtree] type #>  - [JQ932751.1] seed sequence #>  - [35] sequences #>  - [2] taxa #>  #> $`22` #> Cluster Record [id 22] #>  - [subtree] type #>  - [JN161069.1] seed sequence #>  - [30] sequences #>  - [1] taxa #>  #> $`23` #> Cluster Record [id 23] #>  - [direct] type #>  - [LC456000.1] seed sequence #>  - [30] sequences #>  - [1] taxa #>  #> $`24` #> Cluster Record [id 24] #>  - [subtree] type #>  - [JN161069.1] seed sequence #>  - [30] sequences #>  - [1] taxa #>  #> $`25` #> Cluster Record [id 25] #>  - [subtree] type #>  - [AF333711.1] seed sequence #>  - [28] sequences #>  - [1] taxa #>  #> $`26` #> Cluster Record [id 26] #>  - [subtree] type #>  - [JQ932884.1] seed sequence #>  - [24] sequences #>  - [4] taxa #>  #> $`27` #> Cluster Record [id 27] #>  - [subtree] type #>  - [LC075890.1] seed sequence #>  - [24] sequences #>  - [2] taxa #>  #> $`28` #> Cluster Record [id 28] #>  - [subtree] type #>  - [DQ098867.1] seed sequence #>  - [24] sequences #>  - [2] taxa #>  #> $`29` #> Cluster Record [id 29] #>  - [subtree] type #>  - [AY900534.1] seed sequence #>  - [21] sequences #>  - [1] taxa #>  #> $`30` #> Cluster Record [id 30] #>  - [subtree] type #>  - [AF378747.1] seed sequence #>  - [20] sequences #>  - [1] taxa #>  #> $`31` #> Cluster Record [id 31] #>  - [subtree] type #>  - [AY227055.1] seed sequence #>  - [20] sequences #>  - [1] taxa #>  #> $`32` #> Cluster Record [id 32] #>  - [subtree] type #>  - [HM763430.1] seed sequence #>  - [20] sequences #>  - [2] taxa #>  #> $`33` #> Cluster Record [id 33] #>  - [subtree] type #>  - [HM759643.1] seed sequence #>  - [20] sequences #>  - [2] taxa #>  #> $`34` #> Cluster Record [id 34] #>  - [subtree] type #>  - [HM761926.1] seed sequence #>  - [20] sequences #>  - [2] taxa #>  #> $`35` #> Cluster Record [id 35] #>  - [subtree] type #>  - [JQ932877.1] seed sequence #>  - [19] sequences #>  - [4] taxa #>  #> $`36` #> Cluster Record [id 36] #>  - [subtree] type #>  - [JQ933028.1] seed sequence #>  - [19] sequences #>  - [2] taxa #>  #> $`37` #> Cluster Record [id 37] #>  - [subtree] type #>  - [JQ932999.1] seed sequence #>  - [18] sequences #>  - [1] taxa #>  #> $`38` #> Cluster Record [id 38] #>  - [subtree] type #>  - [AF027542.1] seed sequence #>  - [18] sequences #>  - [1] taxa #>  #> $`39` #> Cluster Record [id 39] #>  - [subtree] type #>  - [AF333712.1] seed sequence #>  - [18] sequences #>  - [1] taxa #>  #> $`40` #> Cluster Record [id 40] #>  - [direct] type #>  - [LC075890.1] seed sequence #>  - [18] sequences #>  - [1] taxa #>  #> $`41` #> Cluster Record [id 41] #>  - [subtree] type #>  - [MT483703.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`42` #> Cluster Record [id 42] #>  - [subtree] type #>  - [MT488555.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`43` #> Cluster Record [id 43] #>  - [subtree] type #>  - [MT492158.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`44` #> Cluster Record [id 44] #>  - [subtree] type #>  - [MT483753.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`45` #> Cluster Record [id 45] #>  - [subtree] type #>  - [MT488933.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`46` #> Cluster Record [id 46] #>  - [subtree] type #>  - [MT488817.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`47` #> Cluster Record [id 47] #>  - [subtree] type #>  - [MT489103.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`48` #> Cluster Record [id 48] #>  - [subtree] type #>  - [MT489061.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`49` #> Cluster Record [id 49] #>  - [subtree] type #>  - [MT489018.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`50` #> Cluster Record [id 50] #>  - [subtree] type #>  - [MT488976.1] seed sequence #>  - [18] sequences #>  - [2] taxa #>  #> $`51` #> Cluster Record [id 51] #>  - [subtree] type #>  - [JQ932845.1] seed sequence #>  - [16] sequences #>  - [3] taxa #>  #> $`52` #> Cluster Record [id 52] #>  - [subtree] type #>  - [MT488890.1] seed sequence #>  - [16] sequences #>  - [2] taxa #>  #> $`53` #> Cluster Record [id 53] #>  - [subtree] type #>  - [MF615377.1] seed sequence #>  - [14] sequences #>  - [3] taxa #>  #> $`54` #> Cluster Record [id 54] #>  - [direct] type #>  - [LC456005.1] seed sequence #>  - [14] sequences #>  - [1] taxa #>  #> $`55` #> Cluster Record [id 55] #>  - [subtree] type #>  - [DQ321662.1] seed sequence #>  - [13] sequences #>  - [2] taxa #>  #> $`56` #> Cluster Record [id 56] #>  - [subtree] type #>  - [AF161946.1] seed sequence #>  - [12] sequences #>  - [4] taxa #>  #> $`57` #> Cluster Record [id 57] #>  - [subtree] type #>  - [JQ932800.1] seed sequence #>  - [12] sequences #>  - [3] taxa #>  #> $`58` #> Cluster Record [id 58] #>  - [subtree] type #>  - [JQ932874.1] seed sequence #>  - [12] sequences #>  - [1] taxa #>  #> $`59` #> Cluster Record [id 59] #>  - [subtree] type #>  - [KY508404.1] seed sequence #>  - [12] sequences #>  - [1] taxa #>  #> $`60` #> Cluster Record [id 60] #>  - [subtree] type #>  - [JQ932840.1] seed sequence #>  - [11] sequences #>  - [1] taxa #>  #> $`61` #> Cluster Record [id 61] #>  - [subtree] type #>  - [AF107750.1] seed sequence #>  - [11] sequences #>  - [1] taxa #>  #> $`62` #> Cluster Record [id 62] #>  - [subtree] type #>  - [AY900546.1] seed sequence #>  - [11] sequences #>  - [1] taxa #>  #> $`63` #> Cluster Record [id 63] #>  - [subtree] type #>  - [AY646200.1] seed sequence #>  - [10] sequences #>  - [4] taxa #>  #> $`64` #> Cluster Record [id 64] #>  - [subtree] type #>  - [JQ932868.1] seed sequence #>  - [10] sequences #>  - [2] taxa #>  #> $`65` #> Cluster Record [id 65] #>  - [subtree] type #>  - [AY894647.1] seed sequence #>  - [10] sequences #>  - [1] taxa #>  #> $`66` #> Cluster Record [id 66] #>  - [subtree] type #>  - [JQ932807.1] seed sequence #>  - [9] sequences #>  - [1] taxa #>  #> $`67` #> Cluster Record [id 67] #>  - [subtree] type #>  - [AF338375.1] seed sequence #>  - [8] sequences #>  - [6] taxa #>  #> $`68` #> Cluster Record [id 68] #>  - [subtree] type #>  - [JQ932913.1] seed sequence #>  - [7] sequences #>  - [2] taxa #>  #> $`69` #> Cluster Record [id 69] #>  - [subtree] type #>  - [HM758650.1] seed sequence #>  - [7] sequences #>  - [5] taxa #>  #> $`70` #> Cluster Record [id 70] #>  - [subtree] type #>  - [AY900559.1] seed sequence #>  - [7] sequences #>  - [1] taxa #>  #> $`71` #> Cluster Record [id 71] #>  - [direct] type #>  - [EF658652.1] seed sequence #>  - [7] sequences #>  - [1] taxa #>  #> $`72` #> Cluster Record [id 72] #>  - [subtree] type #>  - [JQ933020.1] seed sequence #>  - [6] sequences #>  - [4] taxa #>  #> $`73` #> Cluster Record [id 73] #>  - [subtree] type #>  - [KC761051.1] seed sequence #>  - [6] sequences #>  - [4] taxa #>  #> $`74` #> Cluster Record [id 74] #>  - [subtree] type #>  - [HM759273.1] seed sequence #>  - [6] sequences #>  - [5] taxa #>  #> $`75` #> Cluster Record [id 75] #>  - [subtree] type #>  - [AY449069.1] seed sequence #>  - [6] sequences #>  - [1] taxa #>  #> $`76` #> Cluster Record [id 76] #>  - [subtree] type #>  - [AY684991.1] seed sequence #>  - [6] sequences #>  - [1] taxa #>  #> $`77` #> Cluster Record [id 77] #>  - [direct] type #>  - [AY449069.1] seed sequence #>  - [6] sequences #>  - [1] taxa #>  #> $`78` #> Cluster Record [id 78] #>  - [subtree] type #>  - [DQ989366.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`79` #> Cluster Record [id 79] #>  - [subtree] type #>  - [JQ933005.1] seed sequence #>  - [5] sequences #>  - [1] taxa #>  #> $`80` #> Cluster Record [id 80] #>  - [subtree] type #>  - [JQ932259.1] seed sequence #>  - [5] sequences #>  - [1] taxa #>  #> $`81` #> Cluster Record [id 81] #>  - [subtree] type #>  - [JQ932880.1] seed sequence #>  - [5] sequences #>  - [1] taxa #>  #> $`82` #> Cluster Record [id 82] #>  - [subtree] type #>  - [JQ932869.1] seed sequence #>  - [5] sequences #>  - [3] taxa #>  #> $`83` #> Cluster Record [id 83] #>  - [subtree] type #>  - [HM756838.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`84` #> Cluster Record [id 84] #>  - [subtree] type #>  - [HM757379.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`85` #> Cluster Record [id 85] #>  - [subtree] type #>  - [HM757554.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`86` #> Cluster Record [id 86] #>  - [subtree] type #>  - [HM757720.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`87` #> Cluster Record [id 87] #>  - [subtree] type #>  - [HM758212.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`88` #> Cluster Record [id 88] #>  - [subtree] type #>  - [HM758297.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`89` #> Cluster Record [id 89] #>  - [subtree] type #>  - [HM758463.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`90` #> Cluster Record [id 90] #>  - [subtree] type #>  - [HM758930.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`91` #> Cluster Record [id 91] #>  - [subtree] type #>  - [HM759101.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`92` #> Cluster Record [id 92] #>  - [subtree] type #>  - [HM759372.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`93` #> Cluster Record [id 93] #>  - [subtree] type #>  - [HM759729.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`94` #> Cluster Record [id 94] #>  - [subtree] type #>  - [HM759896.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`95` #> Cluster Record [id 95] #>  - [subtree] type #>  - [HM760080.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`96` #> Cluster Record [id 96] #>  - [subtree] type #>  - [HM760256.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`97` #> Cluster Record [id 97] #>  - [subtree] type #>  - [HM760525.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`98` #> Cluster Record [id 98] #>  - [subtree] type #>  - [HM760608.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`99` #> Cluster Record [id 99] #>  - [subtree] type #>  - [HM761193.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`100` #> Cluster Record [id 100] #>  - [subtree] type #>  - [HM761507.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`101` #> Cluster Record [id 101] #>  - [subtree] type #>  - [HM761768.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`102` #> Cluster Record [id 102] #>  - [subtree] type #>  - [HM762092.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`103` #> Cluster Record [id 103] #>  - [subtree] type #>  - [HM762180.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`104` #> Cluster Record [id 104] #>  - [subtree] type #>  - [HM762427.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`105` #> Cluster Record [id 105] #>  - [subtree] type #>  - [HM762765.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`106` #> Cluster Record [id 106] #>  - [subtree] type #>  - [HM763261.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`107` #> Cluster Record [id 107] #>  - [subtree] type #>  - [HM763727.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`108` #> Cluster Record [id 108] #>  - [subtree] type #>  - [HM764102.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`109` #> Cluster Record [id 109] #>  - [subtree] type #>  - [HM764317.1] seed sequence #>  - [5] sequences #>  - [5] taxa #>  #> $`110` #> Cluster Record [id 110] #>  - [subtree] type #>  - [KR902342.1] seed sequence #>  - [4] sequences #>  - [3] taxa #>  #> $`111` #> Cluster Record [id 111] #>  - [subtree] type #>  - [AF014508.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`112` #> Cluster Record [id 112] #>  - [subtree] type #>  - [AF014506.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`113` #> Cluster Record [id 113] #>  - [subtree] type #>  - [KC762160.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`114` #> Cluster Record [id 114] #>  - [subtree] type #>  - [KC762072.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`115` #> Cluster Record [id 115] #>  - [subtree] type #>  - [KC762014.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`116` #> Cluster Record [id 116] #>  - [subtree] type #>  - [KC761980.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`117` #> Cluster Record [id 117] #>  - [subtree] type #>  - [KC761918.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`118` #> Cluster Record [id 118] #>  - [subtree] type #>  - [KC761889.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`119` #> Cluster Record [id 119] #>  - [subtree] type #>  - [KC761833.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`120` #> Cluster Record [id 120] #>  - [subtree] type #>  - [KC761782.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`121` #> Cluster Record [id 121] #>  - [subtree] type #>  - [KC761695.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`122` #> Cluster Record [id 122] #>  - [subtree] type #>  - [KC761632.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`123` #> Cluster Record [id 123] #>  - [subtree] type #>  - [KC761601.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`124` #> Cluster Record [id 124] #>  - [subtree] type #>  - [KC761569.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`125` #> Cluster Record [id 125] #>  - [subtree] type #>  - [KC761504.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`126` #> Cluster Record [id 126] #>  - [subtree] type #>  - [KC761470.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`127` #> Cluster Record [id 127] #>  - [subtree] type #>  - [KC761405.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`128` #> Cluster Record [id 128] #>  - [subtree] type #>  - [KC761242.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`129` #> Cluster Record [id 129] #>  - [subtree] type #>  - [KC761177.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`130` #> Cluster Record [id 130] #>  - [subtree] type #>  - [KC761016.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`131` #> Cluster Record [id 131] #>  - [subtree] type #>  - [KC760988.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`132` #> Cluster Record [id 132] #>  - [subtree] type #>  - [JQ932280.1] seed sequence #>  - [4] sequences #>  - [3] taxa #>  #> $`133` #> Cluster Record [id 133] #>  - [subtree] type #>  - [JQ932662.1] seed sequence #>  - [4] sequences #>  - [3] taxa #>  #> $`134` #> Cluster Record [id 134] #>  - [subtree] type #>  - [HM762511.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`135` #> Cluster Record [id 135] #>  - [subtree] type #>  - [HM764645.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`136` #> Cluster Record [id 136] #>  - [subtree] type #>  - [AF027546.1] seed sequence #>  - [4] sequences #>  - [1] taxa #>  #> $`137` #> Cluster Record [id 137] #>  - [subtree] type #>  - [HM764908.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`138` #> Cluster Record [id 138] #>  - [subtree] type #>  - [HM765175.1] seed sequence #>  - [4] sequences #>  - [4] taxa #>  #> $`139` #> Cluster Record [id 139] #>  - [subtree] type #>  - [AB239200.1] seed sequence #>  - [4] sequences #>  - [1] taxa #>  #> $`140` #> Cluster Record [id 140] #>  - [direct] type #>  - [DQ098863.1] seed sequence #>  - [4] sequences #>  - [1] taxa #>  #> $`141` #> Cluster Record [id 141] #>  - [direct] type #>  - [DQ098851.1] seed sequence #>  - [4] sequences #>  - [1] taxa #>  #> $`142` #> Cluster Record [id 142] #>  - [subtree] type #>  - [HM758657.1] seed sequence #>  - [4] sequences #>  - [2] taxa #>  #> $`143` #> Cluster Record [id 143] #>  - [subtree] type #>  - [MW321653.1] seed sequence #>  - [3] sequences #>  - [2] taxa #>  #> $`144` #> Cluster Record [id 144] #>  - [subtree] type #>  - [AF014509.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`145` #> Cluster Record [id 145] #>  - [subtree] type #>  - [KC762104.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`146` #> Cluster Record [id 146] #>  - [subtree] type #>  - [KC761277.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`147` #> Cluster Record [id 147] #>  - [subtree] type #>  - [KC761210.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`148` #> Cluster Record [id 148] #>  - [subtree] type #>  - [KC761755.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`149` #> Cluster Record [id 149] #>  - [subtree] type #>  - [KC761438.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`150` #> Cluster Record [id 150] #>  - [subtree] type #>  - [KC761338.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`151` #> Cluster Record [id 151] #>  - [subtree] type #>  - [KC760954.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`152` #> Cluster Record [id 152] #>  - [subtree] type #>  - [KC760866.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`153` #> Cluster Record [id 153] #>  - [subtree] type #>  - [KC760833.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`154` #> Cluster Record [id 154] #>  - [subtree] type #>  - [KC760802.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`155` #> Cluster Record [id 155] #>  - [subtree] type #>  - [KC760770.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`156` #> Cluster Record [id 156] #>  - [subtree] type #>  - [KC760738.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`157` #> Cluster Record [id 157] #>  - [subtree] type #>  - [KC760712.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`158` #> Cluster Record [id 158] #>  - [subtree] type #>  - [KC760681.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`159` #> Cluster Record [id 159] #>  - [subtree] type #>  - [KC760611.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`160` #> Cluster Record [id 160] #>  - [subtree] type #>  - [KC760514.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`161` #> Cluster Record [id 161] #>  - [subtree] type #>  - [KC760417.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`162` #> Cluster Record [id 162] #>  - [subtree] type #>  - [KC760385.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`163` #> Cluster Record [id 163] #>  - [subtree] type #>  - [KC760326.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`164` #> Cluster Record [id 164] #>  - [subtree] type #>  - [KC760263.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`165` #> Cluster Record [id 165] #>  - [subtree] type #>  - [HM761011.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`166` #> Cluster Record [id 166] #>  - [subtree] type #>  - [HM761143.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`167` #> Cluster Record [id 167] #>  - [subtree] type #>  - [HM762858.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`168` #> Cluster Record [id 168] #>  - [subtree] type #>  - [HM763019.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`169` #> Cluster Record [id 169] #>  - [subtree] type #>  - [HM763994.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`170` #> Cluster Record [id 170] #>  - [subtree] type #>  - [HM764396.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`171` #> Cluster Record [id 171] #>  - [subtree] type #>  - [AY900524.1] seed sequence #>  - [3] sequences #>  - [1] taxa #>  #> $`172` #> Cluster Record [id 172] #>  - [subtree] type #>  - [HM764813.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`173` #> Cluster Record [id 173] #>  - [subtree] type #>  - [AY449065.1] seed sequence #>  - [3] sequences #>  - [1] taxa #>  #> $`174` #> Cluster Record [id 174] #>  - [subtree] type #>  - [AY449057.1] seed sequence #>  - [3] sequences #>  - [1] taxa #>  #> $`175` #> Cluster Record [id 175] #>  - [subtree] type #>  - [HM756999.1] seed sequence #>  - [3] sequences #>  - [3] taxa #>  #> $`176` #> Cluster Record [id 176] #>  - [subtree] type #>  - [AB239246.1] seed sequence #>  - [3] sequences #>  - [1] taxa #>  #> $`177` #> Cluster Record [id 177] #>  - [subtree] type #>  - [AB239226.1] seed sequence #>  - [3] sequences #>  - [1] taxa #>  #> $`178` #> Cluster Record [id 178] #>  - [subtree] type #>  - [FJ154793.1] seed sequence #>  - [3] sequences #>  - [1] taxa #>  #> $`179` #> Cluster Record [id 179] #>  - [direct] type #>  - [AY449065.1] seed sequence #>  - [3] sequences #>  - [1] taxa #>  #> $`180` #> Cluster Record [id 180] #>  - [direct] type #>  - [AY449057.1] seed sequence #>  - [3] sequences #>  - [1] taxa #>  #> $`181` #> Cluster Record [id 181] #>  - [direct] type #>  - [MF632276.1] seed sequence #>  - [3] sequences #>  - [1] taxa #>  #> $`182` #> Cluster Record [id 182] #>  - [subtree] type #>  - [HM759274.1] seed sequence #>  - [3] sequences #>  - [2] taxa #>  #> $`183` #> Cluster Record [id 183] #>  - [subtree] type #>  - [AF338376.1] seed sequence #>  - [3] sequences #>  - [2] taxa #>  # access cluster records [[ (clstrarc[[clstrarc@ids[[1]]]])  # first cluster record #> Cluster Record [id 0] #>  - [subtree] type #>  - [AF129795.1] seed sequence #>  - [173] sequences #>  - [5] taxa # generate new cluster archives with [ (clstrarc[clstrarc@ids[1:10]])  # first 10 clusters #> Archive of cluster record(s) #>  - [10] clusters"},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrRec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster record — ClstrRec-class","title":"Cluster record — ClstrRec-class","text":"Cluster record contains information cluster.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrRec-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster record — ClstrRec-class","text":"","code":"# S4 method for ClstrRec as.character(x)  # S4 method for ClstrRec show(object)  # S4 method for ClstrRec print(x)  # S4 method for ClstrRec str(object, max.level = 2L, ...)  # S4 method for ClstrRec summary(object)"},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrRec-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster record — ClstrRec-class","text":"x ClstrRec object object ClstrRec object max.level Maximum level nesting str() ... arguments str()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrRec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Cluster record — ClstrRec-class","text":"id Cluster ID, integer sids Sequence IDs nsqs Number sequences txids Source txids sequences ntx Number taxa typ Cluster type: direct, subtree merged seed Seed sequence ID prnt Parent taxonomic ID","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/ClstrRec-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster record — ClstrRec-class","text":"","code":"data('aotus') clstrrec <- aotus@clstrs@clstrs[[1]] # this is a ClstrRec object # it contains cluster information show(clstrrec) #> Cluster Record [id 0] #>  - [subtree] type #>  - [AF129795.1] seed sequence #>  - [173] sequences #>  - [5] taxa # you can access its different data slots with @ clstrrec@id     # cluster id #> [1] 0 clstrrec@sids   # sequence IDs #>   [1] \"AF129792.1\" \"AF129793.1\" \"AF129794.1\" \"AF129795.1\" \"AF129796.1\" #>   [6] \"AF129797.1\" \"AF129798.1\" \"AF129799.1\" \"AF129800.1\" \"AF129801.1\" #>  [11] \"AF129802.1\" \"AF129803.1\" \"AF129804.1\" \"AF129805.1\" \"AF129806.1\" #>  [16] \"AF129807.1\" \"AF129808.1\" \"AF132755.1\" \"AF132756.1\" \"AF132757.1\" #>  [21] \"AF132758.1\" \"AF132759.1\" \"AF132760.1\" \"AF132761.1\" \"AF132762.1\" #>  [26] \"AF132763.1\" \"AF132764.1\" \"AF132765.1\" \"AF132766.1\" \"AF132767.1\" #>  [31] \"AF132768.1\" \"AF132769.1\" \"AF132770.1\" \"AF169485.1\" \"AF169486.1\" #>  [36] \"AF169487.1\" \"AY227055.1\" \"AY227056.1\" \"AY227057.1\" \"AY227058.1\" #>  [41] \"AY227059.1\" \"AY227060.1\" \"AY227061.1\" \"AY227062.1\" \"AY227063.1\" #>  [46] \"AY227064.1\" \"AY227065.1\" \"AY227066.1\" \"AY227067.1\" \"AY227068.1\" #>  [51] \"AY227069.1\" \"AY227070.1\" \"AY227071.1\" \"AY227072.1\" \"AY227073.1\" #>  [56] \"AY227074.1\" \"AY429142.1\" \"AY429143.1\" \"AY493661.1\" \"AY563180.2\" #>  [61] \"AY563181.2\" \"AY563182.2\" \"AY563183.2\" \"AY563184.2\" \"AY563185.2\" #>  [66] \"AY563186.2\" \"AY563188.2\" \"AY563189.2\" \"AY563190.2\" \"AY563191.2\" #>  [71] \"AY563192.2\" \"AY563193.2\" \"AY563194.2\" \"AY563195.2\" \"AY563196.2\" #>  [76] \"AY563197.2\" \"AY563198.2\" \"AY563199.2\" \"AY563200.2\" \"AY563201.2\" #>  [81] \"AY563202.2\" \"AY563203.2\" \"AY563204.2\" \"AY563206.2\" \"AY563207.2\" #>  [86] \"AY563208.2\" \"AY563209.2\" \"AY563210.2\" \"AY563211.2\" \"AY563212.2\" #>  [91] \"AY563213.2\" \"AY563214.2\" \"AY563215.2\" \"AY563216.2\" \"AY563217.2\" #>  [96] \"AY563218.2\" \"AY563219.2\" \"AY563220.2\" \"AY563221.2\" \"AY563222.2\" #> [101] \"AY563223.2\" \"AY563224.2\" \"AY563225.2\" \"AY563226.2\" \"AY563227.2\" #> [106] \"AY563228.2\" \"AY563229.2\" \"AY563230.2\" \"AY563231.2\" \"AY563232.2\" #> [111] \"AY563233.2\" \"AY563234.2\" \"AY563236.2\" \"AY563237.2\" \"AY563239.2\" #> [116] \"AY563241.2\" \"AY563242.2\" \"AY563243.2\" \"AY563244.2\" \"AY563245.2\" #> [121] \"AY563246.2\" \"AY563247.2\" \"AY563248.2\" \"AY563249.2\" \"AY563250.2\" #> [126] \"AY563251.2\" \"AY563252.2\" \"AY563253.2\" \"AY563254.2\" \"AY563255.2\" #> [131] \"AY563256.2\" \"AY563257.2\" \"AY563258.2\" \"AY563259.2\" \"AY563260.2\" #> [136] \"AY563261.2\" \"AY563262.2\" \"AY563263.2\" \"DQ162624.1\" \"DQ162626.1\" #> [141] \"DQ162627.1\" \"DQ162628.1\" \"DQ162629.1\" \"DQ162630.1\" \"DQ162633.1\" #> [146] \"DQ162634.1\" \"DQ162635.1\" \"DQ162645.1\" \"DQ162646.1\" \"DQ162647.1\" #> [151] \"DQ162648.1\" \"DQ162660.1\" \"DQ162661.1\" \"DQ162668.1\" \"DQ162676.1\" #> [156] \"DQ162679.1\" \"DQ162682.1\" \"DQ162683.1\" \"DQ162688.1\" \"DQ162699.1\" #> [161] \"DQ162704.1\" \"DQ162705.1\" \"DQ162710.1\" \"DQ162711.1\" \"DQ162718.1\" #> [166] \"DQ162719.1\" \"DQ162727.1\" \"DQ162729.1\" \"DQ162732.1\" \"DQ162736.1\" #> [171] \"MF615382.1\" \"MF615383.1\" \"MF615384.1\" clstrrec@nsqs   # number of sequences #> [1] 173 clstrrec@txids  # taxonomic IDs of sequences #>   [1] \"231953\" \"231953\" \"231953\" \"231953\" \"231953\" \"231953\" \"231953\" \"231953\" #>   [9] \"231953\" \"231953\" \"231953\" \"231953\" \"231953\" \"231953\" \"231953\" \"231953\" #>  [17] \"231953\" \"231953\" \"231953\" \"231953\" \"57176\"  \"57176\"  \"57176\"  \"57176\"  #>  [25] \"57176\"  \"57176\"  \"57176\"  \"57176\"  \"57176\"  \"57176\"  \"57176\"  \"57176\"  #>  [33] \"57176\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  #>  [41] \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  #>  [49] \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  #>  [57] \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  \"57175\"  #>  [65] \"57175\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #>  [73] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #>  [81] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #>  [89] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #>  [97] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #> [105] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #> [113] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #> [121] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #> [129] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #> [137] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #> [145] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #> [153] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #> [161] \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  \"37293\"  #> [169] \"37293\"  \"37293\"  \"37293\"  \"30591\"  \"30591\"  clstrrec@ntx    # number unique taxonomic IDs #> [1] 5 clstrrec@typ    # cluster type: merged, subtree, direct or paraphyly #> [1] \"subtree\" clstrrec@prnt   # MRCA of all taxa #> [1] \"9504\" clstrrec@seed   # most inter-connected sequence #> [1] \"AF129795.1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/Node-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Node-class — Node-class","title":"Node-class — Node-class","text":"Node S4 class used displaying node information. generated user implements [[]] tree. Information accurate tree updated updateTree().","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/Node-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Node-class — Node-class","text":"","code":"# S4 method for Node as.character(x)  # S4 method for Node show(object)  # S4 method for Node print(x)  # S4 method for Node summary(object)  # S4 method for Node,character,missing,missing [(x, i, j, ..., drop = TRUE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/Node-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Node-class — Node-class","text":"x Node object object Node object slot name j missing ... missing drop missing","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/Node-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Node-class — Node-class","text":"id unique ID node tree['ndlst'] spn length preceding branch prid parent node ID ptid child node ID kids descending tip IDs nkids number descending tip IDs txnym list associated taxonyms pd total branch length represented node prdst total branch length connected prids root T/F root node? tip T/F tip node?","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/Phylota-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylota object — Phylota-class","title":"Phylota object — Phylota-class","text":"Phylota table contains sequence, cluster taxonomic information phylotaR pipeline run.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/Phylota-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylota object — Phylota-class","text":"","code":"# S4 method for Phylota as.character(x)  # S4 method for Phylota show(object)  # S4 method for Phylota print(x)  # S4 method for Phylota str(object, max.level = 2L, ...)  # S4 method for Phylota summary(object)  # S4 method for Phylota,character [[(x, i)"},{"path":"https://docs.ropensci.org/phylotaR/reference/Phylota-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phylota object — Phylota-class","text":"x Phylota object object Phylota object max.level Maximum level nesting str() ... arguments str() Either sid cid","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/Phylota-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Phylota object — Phylota-class","text":"cids IDs clusters sids IDs sequences txids IDs taxa sqs sequence records SeqArc clstrs cluster records ClstrArc txdct Taxonomic dictionary TaxDict prnt_id Parent taxonomic ID prnt_nm Parent taxonomic name","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/Phylota-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phylota object — Phylota-class","text":"","code":"data('aotus') # this is a Phylota object # it contains cluster, sequence and taxonomic information from a phylotaR run show(aotus) #> Phylota Table (Aotus) #> - [184] clusters #> - [1945] sequences #> - [13] source taxa # you can access its different data slots with @ aotus@cids   # cluster IDs #>   [1] \"0\"   \"1\"   \"2\"   \"3\"   \"4\"   \"5\"   \"6\"   \"7\"   \"8\"   \"9\"   \"10\"  \"11\"  #>  [13] \"12\"  \"13\"  \"14\"  \"15\"  \"16\"  \"17\"  \"18\"  \"19\"  \"20\"  \"21\"  \"22\"  \"23\"  #>  [25] \"24\"  \"25\"  \"26\"  \"27\"  \"28\"  \"29\"  \"30\"  \"31\"  \"32\"  \"33\"  \"34\"  \"35\"  #>  [37] \"36\"  \"37\"  \"38\"  \"39\"  \"40\"  \"41\"  \"42\"  \"43\"  \"44\"  \"45\"  \"46\"  \"47\"  #>  [49] \"48\"  \"49\"  \"50\"  \"51\"  \"52\"  \"53\"  \"54\"  \"55\"  \"56\"  \"57\"  \"58\"  \"59\"  #>  [61] \"60\"  \"61\"  \"62\"  \"63\"  \"64\"  \"65\"  \"66\"  \"67\"  \"68\"  \"69\"  \"70\"  \"71\"  #>  [73] \"72\"  \"73\"  \"74\"  \"75\"  \"76\"  \"77\"  \"78\"  \"79\"  \"80\"  \"81\"  \"82\"  \"83\"  #>  [85] \"84\"  \"85\"  \"86\"  \"87\"  \"88\"  \"89\"  \"90\"  \"91\"  \"92\"  \"93\"  \"94\"  \"95\"  #>  [97] \"96\"  \"97\"  \"98\"  \"99\"  \"100\" \"101\" \"102\" \"103\" \"104\" \"105\" \"106\" \"107\" #> [109] \"108\" \"109\" \"110\" \"111\" \"112\" \"113\" \"114\" \"115\" \"116\" \"117\" \"118\" \"119\" #> [121] \"120\" \"121\" \"122\" \"123\" \"124\" \"125\" \"126\" \"127\" \"128\" \"129\" \"130\" \"131\" #> [133] \"132\" \"133\" \"134\" \"135\" \"136\" \"137\" \"138\" \"139\" \"140\" \"141\" \"142\" \"143\" #> [145] \"144\" \"145\" \"146\" \"147\" \"148\" \"149\" \"150\" \"151\" \"152\" \"153\" \"154\" \"155\" #> [157] \"156\" \"157\" \"158\" \"159\" \"160\" \"161\" \"162\" \"163\" \"164\" \"165\" \"166\" \"167\" #> [169] \"168\" \"169\" \"170\" \"171\" \"172\" \"173\" \"174\" \"175\" \"176\" \"177\" \"178\" \"179\" #> [181] \"180\" \"181\" \"182\" \"183\" aotus@sids   # sequence IDs #>    [1] \"KR528418.1\" \"JF444279.1\" \"AY227074.1\" \"AY227073.1\" \"AY227072.1\" #>    [6] \"AY227071.1\" \"AY227070.1\" \"AY227069.1\" \"AY227068.1\" \"AY227067.1\" #>   [11] \"AY227066.1\" \"AY227065.1\" \"AY227064.1\" \"AY227063.1\" \"AY227062.1\" #>   [16] \"AY227061.1\" \"AY227060.1\" \"AY227059.1\" \"AY227058.1\" \"AY227057.1\" #>   [21] \"AY227056.1\" \"AY227055.1\" \"DQ321669.1\" \"MW327030.1\" \"MT489117.1\" #>   [26] \"MT489116.1\" \"MT489115.1\" \"MT489114.1\" \"MT489113.1\" \"MT489112.1\" #>   [31] \"MT489111.1\" \"MT489110.1\" \"MT489075.1\" \"MT489074.1\" \"MT489073.1\" #>   [36] \"MT489072.1\" \"MT489071.1\" \"MT489070.1\" \"MT489069.1\" \"MT489068.1\" #>   [41] \"MT489032.1\" \"MT489031.1\" \"MT489030.1\" \"MT489029.1\" \"MT489028.1\" #>   [46] \"MT489027.1\" \"MT489026.1\" \"MT489025.1\" \"MT488990.1\" \"MT488989.1\" #>   [51] \"MT488988.1\" \"MT488987.1\" \"MT488986.1\" \"MT488985.1\" \"MT488984.1\" #>   [56] \"MT488983.1\" \"MT488947.1\" \"MT488946.1\" \"MT488945.1\" \"MT488944.1\" #>   [61] \"MT488943.1\" \"MT488942.1\" \"MT488941.1\" \"MT488940.1\" \"MT488904.1\" #>   [66] \"MT488903.1\" \"MT488902.1\" \"MT488901.1\" \"MT488900.1\" \"MT488899.1\" #>   [71] \"MT488898.1\" \"MT488897.1\" \"MT488861.1\" \"MT488860.1\" \"MT488859.1\" #>   [76] \"MT488858.1\" \"MT488857.1\" \"MT488856.1\" \"MT488855.1\" \"MT488854.1\" #>   [81] \"MT488815.1\" \"MT488814.1\" \"MT488813.1\" \"MT488812.1\" \"MT488811.1\" #>   [86] \"MT488810.1\" \"MT488809.1\" \"MT488808.1\" \"MT488778.1\" \"MT488777.1\" #>   [91] \"MT488776.1\" \"MT488775.1\" \"MT488774.1\" \"MT488773.1\" \"MT488772.1\" #>   [96] \"MT488771.1\" \"MT488734.1\" \"MT488733.1\" \"MT488732.1\" \"MT488731.1\" #>  [101] \"MT488730.1\" \"MT488729.1\" \"MT488728.1\" \"MT488727.1\" \"MT488672.1\" #>  [106] \"MT488671.1\" \"MT488670.1\" \"MT488669.1\" \"MT488659.1\" \"MT488658.1\" #>  [111] \"MT488657.1\" \"MT488569.1\" \"MT488568.1\" \"MT488567.1\" \"MT488566.1\" #>  [116] \"MF632281.1\" \"MF632280.1\" \"KX774456.1\" \"KR902344.1\" \"DQ321666.1\" #>  [121] \"DQ321665.1\" \"DQ162635.1\" \"DQ162634.1\" \"DQ162633.1\" \"DQ162630.1\" #>  [126] \"DQ162629.1\" \"DQ162628.1\" \"DQ162627.1\" \"DQ162626.1\" \"DQ162624.1\" #>  [131] \"AY563263.2\" \"AY563258.2\" \"AY563227.2\" \"AY563219.2\" \"AY659834.1\" #>  [136] \"AY659833.1\" \"AY659832.1\" \"AY659831.1\" \"AY659830.1\" \"AY659829.1\" #>  [141] \"AF352260.1\" \"AF352259.1\" \"AF014508.1\" \"AF014507.1\" \"AF014506.1\" #>  [146] \"AF014504.1\" \"HQ005503.1\" \"HQ005502.1\" \"HQ018928.1\" \"AY114539.1\" #>  [151] \"AY114538.1\" \"AY114537.1\" \"AY114536.1\" \"AY114535.1\" \"AY114534.1\" #>  [156] \"AY114533.1\" \"AY114532.1\" \"AY114531.1\" \"AY114530.1\" \"AY114529.1\" #>  [161] \"KC762196.1\" \"KC762163.1\" \"KC762106.1\" \"KC762075.1\" \"KC762017.1\" #>  [166] \"KC761983.1\" \"KC761954.1\" \"KC761921.1\" \"KC761892.1\" \"KC761836.1\" #>  [171] \"KC761816.1\" \"KC761785.1\" \"KC761698.1\" \"KC761635.1\" \"KC761604.1\" #>  [176] \"KC761572.1\" \"KC761540.1\" \"KC761507.1\" \"KC761473.1\" \"KC761408.1\" #>  [181] \"KC761373.1\" \"KC761279.1\" \"KC761245.1\" \"KC761212.1\" \"KC761180.1\" #>  [186] \"KC761083.1\" \"KC761053.1\" \"KC761019.1\" \"KC760991.1\" \"MW736163.1\" #>  [191] \"MT489140.1\" \"MT489139.1\" \"MT489137.1\" \"MT489136.1\" \"MT489135.1\" #>  [196] \"MT489134.1\" \"MT489095.1\" \"MT489094.1\" \"MT489092.1\" \"MT489091.1\" #>  [201] \"MT489053.1\" \"MT489052.1\" \"MT489050.1\" \"MT489049.1\" \"MT489048.1\" #>  [206] \"MT489010.1\" \"MT489009.1\" \"MT489007.1\" \"MT489006.1\" \"MT488968.1\" #>  [211] \"MT488967.1\" \"MT488965.1\" \"MT488964.1\" \"MT488963.1\" \"MT488925.1\" #>  [216] \"MT488924.1\" \"MT488922.1\" \"MT488921.1\" \"MT488920.1\" \"MT488882.1\" #>  [221] \"MT488881.1\" \"MT488879.1\" \"MT488878.1\" \"MT488839.1\" \"MT488838.1\" #>  [226] \"MT488800.1\" \"MT488799.1\" \"MT488797.1\" \"MT488796.1\" \"MT488795.1\" #>  [231] \"MT488756.1\" \"MT488755.1\" \"MT488753.1\" \"MT488752.1\" \"MT488751.1\" #>  [236] \"MT488681.1\" \"MT488680.1\" \"MT488679.1\" \"MT488678.1\" \"MT488677.1\" #>  [241] \"MT488676.1\" \"MT488592.1\" \"MT488591.1\" \"MT488589.1\" \"MT488588.1\" #>  [246] \"MT488587.1\" \"MT488586.1\" \"MT492189.1\" \"MT492188.1\" \"MT483740.1\" #>  [251] \"MT483739.1\" \"MT483737.1\" \"MT483736.1\" \"MT483735.1\" \"MT483734.1\" #>  [256] \"MF615381.1\" \"MF615380.1\" \"MF615379.1\" \"MF615378.1\" \"MF615377.1\" #>  [261] \"MF615376.1\" \"MK205145.1\" \"MF632285.1\" \"MF632284.1\" \"MF632283.1\" #>  [266] \"MF632282.1\" \"MW736164.1\" \"MT489147.1\" \"MT489141.1\" \"MT489126.1\" #>  [271] \"MT489106.1\" \"MT489102.1\" \"MT489096.1\" \"MT489083.1\" \"MT489064.1\" #>  [276] \"MT489060.1\" \"MT489054.1\" \"MT489040.1\" \"MT489021.1\" \"MT489017.1\" #>  [281] \"MT489011.1\" \"MT488998.1\" \"MT488979.1\" \"MT488975.1\" \"MT488969.1\" #>  [286] \"MT488955.1\" \"MT488936.1\" \"MT488926.1\" \"MT488912.1\" \"MT488893.1\" #>  [291] \"MT488889.1\" \"MT488883.1\" \"MT488870.1\" \"MT488850.1\" \"MT488846.1\" #>  [296] \"MT488840.1\" \"MT488831.1\" \"MT488807.1\" \"MT488801.1\" \"MT488787.1\" #>  [301] \"MT488767.1\" \"MT488763.1\" \"MT488757.1\" \"MT488743.1\" \"MT488723.1\" #>  [306] \"MT488675.1\" \"MT488655.1\" \"MT488599.1\" \"MT488593.1\" \"MT488578.1\" #>  [311] \"MT488558.1\" \"MT492196.1\" \"MT492190.1\" \"MT492179.1\" \"MT483747.1\" #>  [316] \"MT483741.1\" \"MT483726.1\" \"MT483706.1\" \"DQ321664.1\" \"DQ162736.1\" #>  [321] \"DQ162732.1\" \"DQ162729.1\" \"DQ162727.1\" \"DQ162719.1\" \"DQ162718.1\" #>  [326] \"DQ162711.1\" \"DQ162710.1\" \"AY563262.2\" \"AY563261.2\" \"AY563260.2\" #>  [331] \"AY563259.2\" \"AY563257.2\" \"AY563256.2\" \"AY563254.2\" \"AY563253.2\" #>  [336] \"AY563252.2\" \"AY563251.2\" \"AY563250.2\" \"AY563249.2\" \"AY563248.2\" #>  [341] \"AY563247.2\" \"AY563246.2\" \"AY563245.2\" \"AY563244.2\" \"AY563243.2\" #>  [346] \"AY563242.2\" \"AY563241.2\" \"AY563229.2\" \"AY563226.2\" \"AY659828.1\" #>  [351] \"AY659827.1\" \"AY659826.1\" \"AF352258.1\" \"AF352257.1\" \"AF352256.1\" #>  [356] \"AF132757.1\" \"AF129797.1\" \"AF097328.1\" \"AF097326.1\" \"AF097324.1\" #>  [361] \"JQ932319.1\" \"JQ932318.1\" \"JQ932310.1\" \"JQ932304.1\" \"JQ932303.1\" #>  [366] \"JQ932293.1\" \"JQ932280.1\" \"JQ932259.1\" \"JQ932255.1\" \"JQ932245.1\" #>  [371] \"JQ932232.1\" \"JQ932362.1\" \"JQ932359.1\" \"JQ932356.1\" \"JQ932605.1\" #>  [376] \"JQ932597.1\" \"JQ932590.1\" \"JQ932717.1\" \"JQ932662.1\" \"JQ932636.1\" #>  [381] \"JQ932630.1\" \"JQ932822.1\" \"JQ932821.1\" \"JQ932818.1\" \"JQ932817.1\" #>  [386] \"JQ932816.1\" \"JQ932815.1\" \"JQ932814.1\" \"JQ932813.1\" \"JQ932812.1\" #>  [391] \"JQ932809.1\" \"JQ932807.1\" \"JQ932806.1\" \"JQ932805.1\" \"JQ932804.1\" #>  [396] \"JQ932803.1\" \"JQ932802.1\" \"JQ932801.1\" \"JQ932800.1\" \"JQ932799.1\" #>  [401] \"JQ932794.1\" \"JQ932775.1\" \"JQ932756.1\" \"JQ932751.1\" \"JQ932724.1\" #>  [406] \"JQ932932.1\" \"JQ932931.1\" \"JQ932930.1\" \"JQ932929.1\" \"JQ932928.1\" #>  [411] \"JQ932927.1\" \"JQ932926.1\" \"JQ932925.1\" \"JQ932924.1\" \"JQ932923.1\" #>  [416] \"JQ932922.1\" \"JQ932921.1\" \"JQ932920.1\" \"JQ932918.1\" \"JQ932916.1\" #>  [421] \"JQ932914.1\" \"JQ932913.1\" \"JQ932909.1\" \"JQ932908.1\" \"JQ932905.1\" #>  [426] \"JQ932903.1\" \"JQ932897.1\" \"JQ932896.1\" \"JQ932895.1\" \"JQ932892.1\" #>  [431] \"JQ932891.1\" \"JQ932890.1\" \"JQ932889.1\" \"JQ932888.1\" \"JQ932887.1\" #>  [436] \"JQ932886.1\" \"JQ932885.1\" \"JQ932884.1\" \"JQ932882.1\" \"JQ932881.1\" #>  [441] \"JQ932880.1\" \"JQ932879.1\" \"JQ932877.1\" \"JQ932874.1\" \"JQ932873.1\" #>  [446] \"JQ932872.1\" \"JQ932870.1\" \"JQ932869.1\" \"JQ932868.1\" \"JQ932867.1\" #>  [451] \"JQ932866.1\" \"JQ932865.1\" \"JQ932864.1\" \"JQ932863.1\" \"JQ932862.1\" #>  [456] \"JQ932861.1\" \"JQ932859.1\" \"JQ932857.1\" \"JQ932856.1\" \"JQ932855.1\" #>  [461] \"JQ932854.1\" \"JQ932853.1\" \"JQ932852.1\" \"JQ932851.1\" \"JQ932850.1\" #>  [466] \"JQ932849.1\" \"JQ932847.1\" \"JQ932846.1\" \"JQ932845.1\" \"JQ932844.1\" #>  [471] \"JQ932843.1\" \"JQ932842.1\" \"JQ932841.1\" \"JQ932840.1\" \"JQ932839.1\" #>  [476] \"JQ932838.1\" \"JQ932837.1\" \"JQ932836.1\" \"JQ932835.1\" \"JQ932833.1\" #>  [481] \"JQ932831.1\" \"JQ932830.1\" \"JQ932829.1\" \"JQ932827.1\" \"JQ932823.1\" #>  [486] \"JQ933029.1\" \"JQ933028.1\" \"JQ933027.1\" \"JQ933026.1\" \"JQ933023.1\" #>  [491] \"JQ933020.1\" \"JQ933011.1\" \"JQ933006.1\" \"JQ933005.1\" \"JQ933004.1\" #>  [496] \"JQ933001.1\" \"JQ933000.1\" \"JQ932999.1\" \"JQ932998.1\" \"JQ932997.1\" #>  [501] \"JQ932996.1\" \"JQ932995.1\" \"JQ932994.1\" \"JQ932993.1\" \"JQ932992.1\" #>  [506] \"JQ932991.1\" \"JQ932990.1\" \"JQ932989.1\" \"JQ932988.1\" \"JQ932987.1\" #>  [511] \"JQ932986.1\" \"JQ932985.1\" \"JQ932984.1\" \"JQ932983.1\" \"JQ932982.1\" #>  [516] \"JQ932981.1\" \"JQ932980.1\" \"JQ932979.1\" \"JQ932978.1\" \"JQ932977.1\" #>  [521] \"JQ932976.1\" \"JQ932975.1\" \"JQ932974.1\" \"JQ932973.1\" \"JQ932972.1\" #>  [526] \"JQ932971.1\" \"JQ932970.1\" \"JQ932969.1\" \"JQ932967.1\" \"JQ932966.1\" #>  [531] \"JQ932965.1\" \"JQ932964.1\" \"JQ932963.1\" \"JQ932962.1\" \"JQ932961.1\" #>  [536] \"JQ932960.1\" \"JQ932959.1\" \"JQ932958.1\" \"JQ932957.1\" \"JQ932956.1\" #>  [541] \"JQ932955.1\" \"JQ932954.1\" \"JQ932953.1\" \"JQ932934.1\" \"JQ932933.1\" #>  [546] \"JQ963361.1\" \"JQ963360.1\" \"JQ963351.1\" \"JQ963350.1\" \"JQ963349.1\" #>  [551] \"JQ963348.1\" \"JQ963347.1\" \"JQ963346.1\" \"JQ933101.1\" \"JQ933099.1\" #>  [556] \"JQ933082.1\" \"JQ933076.1\" \"JQ933075.1\" \"JQ933053.1\" \"MT489118.1\" #>  [561] \"MT489076.1\" \"MT489033.1\" \"MT488991.1\" \"MT488948.1\" \"MT488905.1\" #>  [566] \"MT488862.1\" \"MT488816.1\" \"MT488779.1\" \"MT488735.1\" \"MT488656.1\" #>  [571] \"MT488570.1\" \"MT492172.1\" \"MT483718.1\" \"MT253565.1\" \"MT232916.1\" #>  [576] \"MT232915.1\" \"LR699078.1\" \"LR699077.1\" \"LR699076.1\" \"LS481196.1\" #>  [581] \"LS481195.1\" \"LS481194.1\" \"LS481193.1\" \"LS481192.1\" \"AF097329.1\" #>  [586] \"AF097327.1\" \"AF097325.1\" \"AF097321.1\" \"JN161047.1\" \"HQ005506.1\" #>  [591] \"HQ018927.1\" \"KC762193.1\" \"KC762160.1\" \"KC762127.1\" \"KC762104.1\" #>  [596] \"KC762072.1\" \"KC762014.1\" \"KC761980.1\" \"KC761951.1\" \"KC761918.1\" #>  [601] \"KC761889.1\" \"KC761833.1\" \"KC761813.1\" \"KC761782.1\" \"KC761755.1\" #>  [606] \"KC761695.1\" \"KC761632.1\" \"KC761601.1\" \"KC761569.1\" \"KC761537.1\" #>  [611] \"KC761504.1\" \"KC761470.1\" \"KC761438.1\" \"KC761405.1\" \"KC761371.1\" #>  [616] \"KC761338.1\" \"KC761242.1\" \"KC761210.1\" \"KC761177.1\" \"KC761144.1\" #>  [621] \"KC761111.1\" \"KC761080.1\" \"KC761050.1\" \"KC761016.1\" \"KC760988.1\" #>  [626] \"KC760954.1\" \"KC760891.1\" \"KC760866.1\" \"KC760833.1\" \"KC760802.1\" #>  [631] \"KC760770.1\" \"KC760738.1\" \"KC760712.1\" \"KC760681.1\" \"KC760646.1\" #>  [636] \"KC760611.1\" \"KC760576.1\" \"KC760514.1\" \"KC760483.1\" \"KC760450.1\" #>  [641] \"KC760417.1\" \"KC760385.1\" \"KC760326.1\" \"KC760263.1\" \"KC760228.1\" #>  [646] \"KC761952.1\" \"KC761919.1\" \"KC761890.1\" \"KC761834.1\" \"KC761814.1\" #>  [651] \"KC761783.1\" \"KC761756.1\" \"KC761696.1\" \"KC761633.1\" \"KC761602.1\" #>  [656] \"KC761570.1\" \"KC761538.1\" \"KC761505.1\" \"KC761471.1\" \"KC761439.1\" #>  [661] \"KC761406.1\" \"KC761339.1\" \"KC761277.1\" \"KC761243.1\" \"KC761178.1\" #>  [666] \"KC761145.1\" \"KC761081.1\" \"KC761051.1\" \"KC761017.1\" \"KC760989.1\" #>  [671] \"KC760955.1\" \"KC760892.1\" \"KC760867.1\" \"KC760834.1\" \"KC760803.1\" #>  [676] \"KC760771.1\" \"KC760739.1\" \"KC760713.1\" \"KC760682.1\" \"KC760647.1\" #>  [681] \"KC760612.1\" \"KC760577.1\" \"KC760515.1\" \"KC760484.1\" \"KC760451.1\" #>  [686] \"KC760418.1\" \"KC760386.1\" \"KC760327.1\" \"KC760264.1\" \"KC760229.1\" #>  [691] \"AY225808.2\" \"AY225809.2\" \"AF169487.1\" \"AF169486.1\" \"AF169485.1\" #>  [696] \"U36770.1\"   \"HM756840.1\" \"HM757383.1\" \"HM757558.1\" \"HM757724.1\" #>  [701] \"HM758216.1\" \"HM758297.1\" \"HM758465.1\" \"HM758650.1\" \"HM758934.1\" #>  [706] \"HM759105.1\" \"HM759278.1\" \"HM759372.1\" \"HM759646.1\" \"HM759729.1\" #>  [711] \"HM759896.1\" \"HM760080.1\" \"HM760256.1\" \"HM760529.1\" \"HM760608.1\" #>  [716] \"HM760775.1\" \"HM761013.1\" \"HM761145.1\" \"HM761195.1\" \"HM761507.1\" #>  [721] \"HM761772.1\" \"HM761929.1\" \"HM762096.1\" \"HM762207.1\" \"HM762431.1\" #>  [726] \"HM762511.1\" \"HM762768.1\" \"HM762858.1\" \"HM763021.1\" \"HM763265.1\" #>  [731] \"HM763433.1\" \"HM763726.1\" \"HM763996.1\" \"HM764104.1\" \"HM764321.1\" #>  [736] \"HM764396.1\" \"HM764648.1\" \"AF185631.1\" \"AF185630.1\" \"AF185629.1\" #>  [741] \"AF185628.1\" \"AF185627.1\" \"AF185625.1\" \"AF185624.1\" \"AF185623.1\" #>  [746] \"AF107758.1\" \"AF107755.1\" \"AF107753.1\" \"AF107750.1\" \"AF107749.1\" #>  [751] \"AF107748.1\" \"AF107742.1\" \"AF107741.1\" \"AF107740.1\" \"AF107738.1\" #>  [756] \"AF107736.1\" \"AF014513.1\" \"AF014512.1\" \"AF014511.1\" \"AF014509.1\" #>  [761] \"JN161054.1\" \"JN161053.1\" \"JN161052.1\" \"JN161051.1\" \"JN161050.1\" #>  [766] \"JN161049.1\" \"HQ005509.1\" \"HQ005508.1\" \"HQ005507.1\" \"AY114521.1\" #>  [771] \"AY114520.1\" \"AY114519.1\" \"AY114518.1\" \"AY114517.1\" \"AY114516.1\" #>  [776] \"AY114515.1\" \"AY114514.1\" \"AF027569.1\" \"AF027567.1\" \"AF027566.1\" #>  [781] \"AF027565.1\" \"AF027564.1\" \"AF027563.1\" \"AF027562.1\" \"AF027561.1\" #>  [786] \"AF027560.1\" \"AF027559.1\" \"AF027554.1\" \"AF027553.1\" \"AF027552.1\" #>  [791] \"AF027551.1\" \"AF027549.1\" \"AF027548.1\" \"AF027547.1\" \"AF027546.1\" #>  [796] \"AF027545.1\" \"AF027544.1\" \"AF027543.1\" \"AF027542.1\" \"AF286382.1\" #>  [801] \"AF286380.1\" \"KC762194.1\" \"KC762161.1\" \"KC762128.1\" \"KC762073.1\" #>  [806] \"KC762015.1\" \"KC761981.1\" \"AY245679.1\" \"AY245678.1\" \"AY245677.1\" #>  [811] \"AY245676.1\" \"AY245675.1\" \"AY283262.1\" \"AY225807.1\" \"AY225804.1\" #>  [816] \"AY225803.1\" \"AY225799.1\" \"AF352255.1\" \"AF352254.1\" \"AF333732.1\" #>  [821] \"AF333731.1\" \"AF333730.1\" \"AF333729.1\" \"AF333728.1\" \"AF333727.1\" #>  [826] \"AF333726.1\" \"AF333725.1\" \"AF333724.1\" \"AF333723.1\" \"AF333722.1\" #>  [831] \"AF333721.1\" \"AF333720.1\" \"AF333719.1\" \"AF333718.1\" \"AF333717.1\" #>  [836] \"AF333716.1\" \"AF333715.1\" \"AF333714.1\" \"AF333713.1\" \"AF333712.1\" #>  [841] \"AF333711.1\" \"AF333710.1\" \"AF333709.1\" \"AF378750.1\" \"AF378749.1\" #>  [846] \"AF378748.1\" \"AF378747.1\" \"AF378746.1\" \"AF378745.1\" \"AF378744.1\" #>  [851] \"AF378743.1\" \"AF378742.1\" \"AF378741.1\" \"AF336946.1\" \"AF336945.1\" #>  [856] \"AF336944.1\" \"AF336943.1\" \"AF336942.1\" \"AF336941.1\" \"AF336940.1\" #>  [861] \"AF336939.1\" \"AF336938.1\" \"AF336937.1\" \"AF336936.1\" \"AF336935.1\" #>  [866] \"AF336934.1\" \"AF336933.1\" \"AF336932.1\" \"AF336931.1\" \"AF336930.1\" #>  [871] \"AF440688.1\" \"AF132770.1\" \"AF132769.1\" \"AF132768.1\" \"AF132767.1\" #>  [876] \"AF132766.1\" \"AF132765.1\" \"AF132764.1\" \"AF132763.1\" \"AF132762.1\" #>  [881] \"AF132761.1\" \"AF132760.1\" \"AF132759.1\" \"AF132758.1\" \"AF132756.1\" #>  [886] \"AF132755.1\" \"AF129808.1\" \"AF129807.1\" \"AF129806.1\" \"AF129805.1\" #>  [891] \"AF129804.1\" \"AF129803.1\" \"AF129802.1\" \"AF129801.1\" \"AF129800.1\" #>  [896] \"AF129799.1\" \"AF129798.1\" \"AF129796.1\" \"AF129795.1\" \"AF129794.1\" #>  [901] \"AF129793.1\" \"AF129792.1\" \"AF185633.1\" \"AF185632.1\" \"AY563202.2\" #>  [906] \"AY563201.2\" \"AY563200.2\" \"AY563199.2\" \"AY563198.2\" \"AY563197.2\" #>  [911] \"AY563196.2\" \"AY563195.2\" \"AY563194.2\" \"AY563193.2\" \"AY563192.2\" #>  [916] \"AY563191.2\" \"AY563190.2\" \"AY563189.2\" \"AY563188.2\" \"AY563186.2\" #>  [921] \"AY563185.2\" \"AY563184.2\" \"AY563183.2\" \"AY563182.2\" \"AY563181.2\" #>  [926] \"AY563180.2\" \"AY972694.1\" \"AY900570.1\" \"AY900566.1\" \"AY900565.1\" #>  [931] \"AY900564.1\" \"AY900561.1\" \"AY900560.1\" \"AY900559.1\" \"AY900557.1\" #>  [936] \"AY900556.1\" \"AY900554.1\" \"AY900553.1\" \"AY900552.1\" \"AY900550.1\" #>  [941] \"AY900549.1\" \"AY900548.1\" \"AY900547.1\" \"AY900546.1\" \"AY900544.1\" #>  [946] \"AY900539.1\" \"AY900538.1\" \"AY900537.1\" \"AY900536.1\" \"AY900535.1\" #>  [951] \"AY900534.1\" \"AY900533.1\" \"AY900532.1\" \"AY900531.1\" \"AY900530.1\" #>  [956] \"AY900529.1\" \"AY900528.1\" \"AY900527.1\" \"AY900524.1\" \"AY900520.1\" #>  [961] \"AY659852.1\" \"AY659851.1\" \"AY659850.1\" \"AY659849.1\" \"AY659848.1\" #>  [966] \"AY659847.1\" \"AY659846.1\" \"AY659845.1\" \"AY659844.1\" \"AY659843.1\" #>  [971] \"AY659842.1\" \"AY659841.1\" \"AY659840.1\" \"AY659839.1\" \"AY659838.1\" #>  [976] \"AY659837.1\" \"AY659836.1\" \"AY659835.1\" \"AY493661.1\" \"AY245688.1\" #>  [981] \"AY245687.1\" \"AY245686.1\" \"AY245685.1\" \"AY245684.1\" \"AY245683.1\" #>  [986] \"AY245682.1\" \"AY245681.1\" \"AY245680.1\" \"MT483724.1\" \"MT483722.1\" #>  [991] \"MT483721.1\" \"MT483720.1\" \"MT483719.1\" \"MF615384.1\" \"MF615383.1\" #>  [996] \"MF615382.1\" \"MF615375.1\" \"MF615374.1\" \"MF615373.1\" \"MF615372.1\" #> [1001] \"MF615371.1\" \"MF632279.1\" \"KR902343.1\" \"DQ321660.1\" \"DQ321659.1\" #> [1006] \"DQ162705.1\" \"DQ162704.1\" \"DQ162699.1\" \"DQ162688.1\" \"DQ162683.1\" #> [1011] \"DQ162682.1\" \"DQ162679.1\" \"DQ162676.1\" \"DQ162668.1\" \"DQ162661.1\" #> [1016] \"DQ162660.1\" \"DQ162648.1\" \"DQ162647.1\" \"DQ162646.1\" \"DQ162645.1\" #> [1021] \"AY563255.2\" \"AY563239.2\" \"AY563237.2\" \"AY563236.2\" \"AY563234.2\" #> [1026] \"AY563233.2\" \"AY563232.2\" \"AY563231.2\" \"AY563230.2\" \"AY563228.2\" #> [1031] \"AY563225.2\" \"AY563224.2\" \"AY563223.2\" \"AY563222.2\" \"AY563221.2\" #> [1036] \"AY563220.2\" \"AY563218.2\" \"AY563217.2\" \"AY563216.2\" \"AY563215.2\" #> [1041] \"AY563214.2\" \"AY563213.2\" \"AY563212.2\" \"AY563211.2\" \"AY563210.2\" #> [1046] \"AY563209.2\" \"AY563208.2\" \"AY563207.2\" \"AY563206.2\" \"AY563204.2\" #> [1051] \"AY563203.2\" \"MW321654.1\" \"MW321653.1\" \"MT489138.1\" \"MT489125.1\" #> [1056] \"MT489124.1\" \"MT489122.1\" \"MT489121.1\" \"MT489120.1\" \"MT489119.1\" #> [1061] \"MT489093.1\" \"MT489082.1\" \"MT489081.1\" \"MT489079.1\" \"MT489078.1\" #> [1066] \"MT489077.1\" \"MT489051.1\" \"MT489039.1\" \"MT489038.1\" \"MT489036.1\" #> [1071] \"MT489035.1\" \"MT489034.1\" \"MT489008.1\" \"MT488997.1\" \"MT488996.1\" #> [1076] \"MT488994.1\" \"MT488993.1\" \"MT488992.1\" \"MT488966.1\" \"MT488954.1\" #> [1081] \"MT488953.1\" \"MT488951.1\" \"MT488950.1\" \"MT488949.1\" \"MT488923.1\" #> [1086] \"MT488911.1\" \"MT488910.1\" \"MT488908.1\" \"MT488907.1\" \"MT488906.1\" #> [1091] \"MT488880.1\" \"MT488869.1\" \"MT488868.1\" \"MT488866.1\" \"MT488865.1\" #> [1096] \"MT488864.1\" \"MT488863.1\" \"MT488837.1\" \"MT488828.1\" \"MT488827.1\" #> [1101] \"MT488825.1\" \"MT488824.1\" \"MT488823.1\" \"MT488798.1\" \"MT488786.1\" #> [1106] \"MT488785.1\" \"MT488783.1\" \"MT488782.1\" \"MT488781.1\" \"MT488780.1\" #> [1111] \"MT488754.1\" \"MT488742.1\" \"MT488741.1\" \"MT488739.1\" \"MT488738.1\" #> [1116] \"MT488737.1\" \"MT488736.1\" \"MT488654.1\" \"MT488653.1\" \"MT488652.1\" #> [1121] \"MT488650.1\" \"MT488649.1\" \"MT488648.1\" \"MT488590.1\" \"MT488577.1\" #> [1126] \"MT488576.1\" \"MT488574.1\" \"MT488573.1\" \"MT488572.1\" \"MT488571.1\" #> [1131] \"MT492187.1\" \"MT492178.1\" \"MT492177.1\" \"MT492175.1\" \"MT492174.1\" #> [1136] \"MT492173.1\" \"MT483738.1\" \"MT483725.1\" \"HM762767.1\" \"HM762766.1\" #> [1141] \"HM762765.1\" \"HM762863.1\" \"HM763019.1\" \"HM763263.1\" \"HM763262.1\" #> [1146] \"HM763261.1\" \"HM763431.1\" \"HM763430.1\" \"HM763429.1\" \"HM763724.1\" #> [1151] \"HM763723.1\" \"HM763722.1\" \"HM763994.1\" \"HM764188.1\" \"HM764187.1\" #> [1156] \"HM764102.1\" \"HM764319.1\" \"HM764318.1\" \"HM764317.1\" \"HM764402.1\" #> [1161] \"HM764646.1\" \"HM764645.1\" \"HM764814.1\" \"HM764813.1\" \"HM765068.1\" #> [1166] \"HM764910.1\" \"HM764909.1\" \"HM765177.1\" \"HM765176.1\" \"HM765175.1\" #> [1171] \"AF420045.1\" \"AY449080.1\" \"AY449079.1\" \"AY449071.1\" \"AY449070.1\" #> [1176] \"AY449069.1\" \"AY449065.1\" \"AY449059.1\" \"AY449058.1\" \"AY449057.1\" #> [1181] \"HM756917.1\" \"HM756916.1\" \"HM756838.1\" \"HM757001.1\" \"HM757000.1\" #> [1186] \"HM756999.1\" \"HM757381.1\" \"HM757380.1\" \"HM757379.1\" \"HM757556.1\" #> [1191] \"HM757555.1\" \"HM757554.1\" \"HM757722.1\" \"HM757721.1\" \"HM757720.1\" #> [1196] \"HM757999.1\" \"HM758214.1\" \"HM758213.1\" \"HM758212.1\" \"HM758450.1\" #> [1201] \"HM758304.1\" \"HM758303.1\" \"HM758476.1\" \"HM758475.1\" \"HM758463.1\" #> [1206] \"HM758660.1\" \"HM758659.1\" \"HM758658.1\" \"HM758657.1\" \"HM758656.1\" #> [1211] \"HM758932.1\" \"HM758931.1\" \"HM758930.1\" \"HM759103.1\" \"HM759102.1\" #> [1216] \"HM759101.1\" \"HM759276.1\" \"HM759275.1\" \"HM759274.1\" \"HM759273.1\" #> [1221] \"HM759535.1\" \"HM759379.1\" \"HM759378.1\" \"HM759644.1\" \"HM759643.1\" #> [1226] \"HM759641.1\" \"HM759836.1\" \"HM759777.1\" \"HM759775.1\" \"HM760059.1\" #> [1231] \"HM759903.1\" \"HM759902.1\" \"HM760239.1\" \"HM760087.1\" \"HM760086.1\" #> [1236] \"HM760421.1\" \"HM760263.1\" \"HM760262.1\" \"HM760527.1\" \"HM760526.1\" #> [1241] \"HM760525.1\" \"HM760615.1\" \"HM760614.1\" \"HM760759.1\" \"HM761011.1\" #> [1246] \"HM761143.1\" \"HM761207.1\" \"HM761206.1\" \"HM761193.1\" \"HM761664.1\" #> [1251] \"HM761514.1\" \"HM761513.1\" \"HM761770.1\" \"HM761769.1\" \"HM761768.1\" #> [1256] \"HM761927.1\" \"HM761926.1\" \"HM761925.1\" \"HM762094.1\" \"HM762093.1\" #> [1261] \"HM762092.1\" \"HM762324.1\" \"HM762181.1\" \"HM762180.1\" \"HM762429.1\" #> [1266] \"HM762428.1\" \"HM762427.1\" \"HM762674.1\" \"HM762517.1\" \"DQ098868.1\" #> [1271] \"DQ098867.1\" \"DQ098856.1\" \"DQ098855.1\" \"AY455159.1\" \"AY455158.1\" #> [1276] \"AY455153.1\" \"U36846.1\"   \"JN161098.1\" \"JN161097.1\" \"JN161096.1\" #> [1281] \"JN161095.1\" \"JN161094.1\" \"JN161093.1\" \"JN161092.1\" \"JN161091.1\" #> [1286] \"JN161090.1\" \"JN161089.1\" \"JN161088.1\" \"JN161087.1\" \"JN161086.1\" #> [1291] \"JN161085.1\" \"JN161084.1\" \"JN161083.1\" \"JN161082.1\" \"JN161081.1\" #> [1296] \"JN161080.1\" \"JN161079.1\" \"JN161078.1\" \"JN161077.1\" \"JN161076.1\" #> [1301] \"JN161075.1\" \"JN161074.1\" \"JN161073.1\" \"JN161072.1\" \"JN161071.1\" #> [1306] \"JN161070.1\" \"JN161069.1\" \"EF658653.1\" \"EF658652.1\" \"DQ989366.1\" #> [1311] \"KC762195.1\" \"KC762162.1\" \"KC762129.1\" \"KC762105.1\" \"KC762074.1\" #> [1316] \"KC762016.1\" \"KC761982.1\" \"KC761953.1\" \"KC761920.1\" \"KC761891.1\" #> [1321] \"KC761835.1\" \"KC761815.1\" \"KC761784.1\" \"KC761757.1\" \"KC761697.1\" #> [1326] \"KC761634.1\" \"KC761603.1\" \"KC761571.1\" \"KC761539.1\" \"KC761506.1\" #> [1331] \"KC761472.1\" \"KC761440.1\" \"KC761407.1\" \"KC761372.1\" \"KC761340.1\" #> [1336] \"KC761278.1\" \"KC761244.1\" \"KC761211.1\" \"KC761179.1\" \"KC761146.1\" #> [1341] \"KC761112.1\" \"KC761082.1\" \"KC761052.1\" \"KC761018.1\" \"KC760990.1\" #> [1346] \"KC760956.1\" \"KC760893.1\" \"KC760868.1\" \"KC760835.1\" \"KC760804.1\" #> [1351] \"KC760772.1\" \"KC760740.1\" \"KC760714.1\" \"KC760683.1\" \"KC760648.1\" #> [1356] \"KC760613.1\" \"KC760578.1\" \"KC760516.1\" \"KC760485.1\" \"KC760452.1\" #> [1361] \"KC760419.1\" \"KC760387.1\" \"KC760328.1\" \"KC760265.1\" \"KC760230.1\" #> [1366] \"AB762011.1\" \"AB762010.1\" \"AB762009.1\" \"AB762008.1\" \"AB762007.1\" #> [1371] \"AB762006.1\" \"AB762005.1\" \"AB762004.1\" \"AB762003.1\" \"AB762002.1\" #> [1376] \"AB762001.1\" \"AB762000.1\" \"AB761999.1\" \"AB761998.1\" \"AB761997.1\" #> [1381] \"AB761996.1\" \"AB761995.1\" \"AB761994.1\" \"AB761993.1\" \"AB761992.1\" #> [1386] \"AB761991.1\" \"AB761990.1\" \"AB761989.1\" \"AB761988.1\" \"AB761987.1\" #> [1391] \"AB761986.1\" \"KY459145.1\" \"KY459130.1\" \"KY459090.1\" \"KY459079.1\" #> [1396] \"KY459060.1\" \"KY459033.1\" \"KY459012.1\" \"KY458997.1\" \"MF632278.1\" #> [1401] \"MF632277.1\" \"MF632276.1\" \"KR902342.1\" \"LC075899.1\" \"LC075898.1\" #> [1406] \"LC075897.1\" \"LC075896.1\" \"LC075895.1\" \"LC075894.1\" \"LC075893.1\" #> [1411] \"LC075892.1\" \"LC075891.1\" \"LC075890.1\" \"LC075889.1\" \"LC075888.1\" #> [1416] \"LC075887.1\" \"LC075886.1\" \"LC075885.1\" \"AF338376.1\" \"AF338375.1\" #> [1421] \"DQ321670.1\" \"DQ321668.1\" \"DQ321667.1\" \"DQ321663.1\" \"DQ321662.1\" #> [1426] \"DQ098866.1\" \"DQ098865.1\" \"DQ098864.1\" \"DQ098863.1\" \"DQ098854.1\" #> [1431] \"DQ098853.1\" \"DQ098852.1\" \"DQ098851.1\" \"AY429143.1\" \"AY429142.1\" #> [1436] \"JN161068.1\" \"JN161067.1\" \"JN161066.1\" \"JN161065.1\" \"JN161064.1\" #> [1441] \"JN161063.1\" \"JN161062.1\" \"HQ005496.1\" \"HQ005495.1\" \"HQ005494.1\" #> [1446] \"HQ005493.1\" \"HQ005492.1\" \"HQ018924.1\" \"HQ018923.1\" \"AF181085.1\" #> [1451] \"EF658656.1\" \"EF658655.1\" \"EF658654.1\" \"MT483707.1\" \"MT483705.1\" #> [1456] \"MT483704.1\" \"MT483703.1\" \"EU179517.1\" \"EU179516.1\" \"LC456056.1\" #> [1461] \"LC456052.1\" \"LC456048.1\" \"LC456044.1\" \"LC456040.1\" \"LC456036.1\" #> [1466] \"LC456032.1\" \"LC456028.1\" \"LC456024.1\" \"LC456020.1\" \"LC456016.1\" #> [1471] \"LC456012.1\" \"LC456008.1\" \"LC456004.1\" \"LC456000.1\" \"LC455994.1\" #> [1476] \"LC456057.1\" \"LC456053.1\" \"LC456049.1\" \"LC456045.1\" \"LC456041.1\" #> [1481] \"LC456037.1\" \"LC456033.1\" \"LC456029.1\" \"LC456025.1\" \"LC456021.1\" #> [1486] \"LC456017.1\" \"LC456013.1\" \"LC456009.1\" \"LC456005.1\" \"LC456001.1\" #> [1491] \"LC455995.1\" \"LC456054.1\" \"LC456050.1\" \"LC456046.1\" \"LC456042.1\" #> [1496] \"LC456038.1\" \"LC456034.1\" \"LC456030.1\" \"LC456026.1\" \"LC456022.1\" #> [1501] \"LC456018.1\" \"LC456014.1\" \"LC456010.1\" \"LC456006.1\" \"LC456002.1\" #> [1506] \"LC455998.1\" \"LC455996.1\" \"LC456055.1\" \"LC456051.1\" \"LC456047.1\" #> [1511] \"LC456043.1\" \"LC456039.1\" \"LC456035.1\" \"LC456031.1\" \"LC456027.1\" #> [1516] \"LC456023.1\" \"LC456019.1\" \"LC456015.1\" \"LC456011.1\" \"LC456007.1\" #> [1521] \"LC456003.1\" \"LC455999.1\" \"LC455997.1\" \"KY459979.1\" \"KY459959.1\" #> [1526] \"MT488684.1\" \"MT488683.1\" \"MT488682.1\" \"MT488673.1\" \"MT488668.1\" #> [1531] \"MT488667.1\" \"MT488666.1\" \"MT488665.1\" \"MT488664.1\" \"MT488663.1\" #> [1536] \"MT488662.1\" \"MT488661.1\" \"MT488660.1\" \"MT488651.1\" \"MT488647.1\" #> [1541] \"MT488646.1\" \"MT488645.1\" \"MT488598.1\" \"MT488597.1\" \"MT488596.1\" #> [1546] \"MT488595.1\" \"MT488585.1\" \"MT488584.1\" \"MT488583.1\" \"MT488582.1\" #> [1551] \"MT488581.1\" \"MT488580.1\" \"MT488579.1\" \"MT488575.1\" \"MT488561.1\" #> [1556] \"MT488560.1\" \"MT488559.1\" \"MT488557.1\" \"MT488556.1\" \"MT488555.1\" #> [1561] \"MT492195.1\" \"MT492194.1\" \"MT492193.1\" \"MT492192.1\" \"MT492186.1\" #> [1566] \"MT492185.1\" \"MT492184.1\" \"MT492183.1\" \"MT492182.1\" \"MT492181.1\" #> [1571] \"MT492180.1\" \"MT492176.1\" \"MT492163.1\" \"MT492162.1\" \"MT492161.1\" #> [1576] \"MT492160.1\" \"MT492159.1\" \"MT492158.1\" \"MT483795.1\" \"MT483794.1\" #> [1581] \"MT483793.1\" \"MT483792.1\" \"MT483782.1\" \"MT483781.1\" \"MT483780.1\" #> [1586] \"MT483779.1\" \"MT483778.1\" \"MT483776.1\" \"MT483775.1\" \"MT483772.1\" #> [1591] \"MT483768.1\" \"MT483767.1\" \"MT483766.1\" \"MT483764.1\" \"MT483763.1\" #> [1596] \"MT483753.1\" \"MT483746.1\" \"MT483745.1\" \"MT483744.1\" \"MT483743.1\" #> [1601] \"MT483733.1\" \"MT483732.1\" \"MT483731.1\" \"MT483730.1\" \"MT483729.1\" #> [1606] \"MT483728.1\" \"MT483727.1\" \"MT483723.1\" \"MT483709.1\" \"MT483708.1\" #> [1611] \"MT488939.1\" \"MT488938.1\" \"MT488937.1\" \"MT488935.1\" \"MT488934.1\" #> [1616] \"MT488933.1\" \"MT488931.1\" \"MT488930.1\" \"MT488929.1\" \"MT488928.1\" #> [1621] \"MT488919.1\" \"MT488918.1\" \"MT488916.1\" \"MT488915.1\" \"MT488914.1\" #> [1626] \"MT488913.1\" \"MT488909.1\" \"MT488896.1\" \"MT488894.1\" \"MT488892.1\" #> [1631] \"MT488891.1\" \"MT488890.1\" \"MT488888.1\" \"MT488887.1\" \"MT488886.1\" #> [1636] \"MT488885.1\" \"MT488877.1\" \"MT488876.1\" \"MT488875.1\" \"MT488874.1\" #> [1641] \"MT488873.1\" \"MT488872.1\" \"MT488871.1\" \"MT488867.1\" \"MT488853.1\" #> [1646] \"MT488852.1\" \"MT488851.1\" \"MT488849.1\" \"MT488848.1\" \"MT488847.1\" #> [1651] \"MT488845.1\" \"MT488844.1\" \"MT488843.1\" \"MT488842.1\" \"MT488836.1\" #> [1656] \"MT488835.1\" \"MT488834.1\" \"MT488833.1\" \"MT488832.1\" \"MT488830.1\" #> [1661] \"MT488829.1\" \"MT488826.1\" \"MT488822.1\" \"MT488821.1\" \"MT488820.1\" #> [1666] \"MT488819.1\" \"MT488818.1\" \"MT488817.1\" \"MT488806.1\" \"MT488805.1\" #> [1671] \"MT488804.1\" \"MT488803.1\" \"MT488794.1\" \"MT488793.1\" \"MT488792.1\" #> [1676] \"MT488791.1\" \"MT488790.1\" \"MT488789.1\" \"MT488788.1\" \"MT488784.1\" #> [1681] \"MT488770.1\" \"MT488769.1\" \"MT488768.1\" \"MT488766.1\" \"MT488765.1\" #> [1686] \"MT488764.1\" \"MT488762.1\" \"MT488761.1\" \"MT488760.1\" \"MT488759.1\" #> [1691] \"MT488750.1\" \"MT488749.1\" \"MT488748.1\" \"MT488747.1\" \"MT488746.1\" #> [1696] \"MT488745.1\" \"MT488744.1\" \"MT488740.1\" \"MT488726.1\" \"MT488725.1\" #> [1701] \"MT488724.1\" \"MT488722.1\" \"MT488721.1\" \"MT488720.1\" \"MT489146.1\" #> [1706] \"MT489145.1\" \"MT489144.1\" \"MT489143.1\" \"MT489133.1\" \"MT489132.1\" #> [1711] \"MT489131.1\" \"MT489130.1\" \"MT489129.1\" \"MT489128.1\" \"MT489127.1\" #> [1716] \"MT489123.1\" \"MT489109.1\" \"MT489108.1\" \"MT489107.1\" \"MT489105.1\" #> [1721] \"MT489104.1\" \"MT489103.1\" \"MT489101.1\" \"MT489100.1\" \"MT489099.1\" #> [1726] \"MT489098.1\" \"MT489090.1\" \"MT489089.1\" \"MT489088.1\" \"MT489087.1\" #> [1731] \"MT489086.1\" \"MT489085.1\" \"MT489084.1\" \"MT489080.1\" \"MT489067.1\" #> [1736] \"MT489066.1\" \"MT489065.1\" \"MT489063.1\" \"MT489062.1\" \"MT489061.1\" #> [1741] \"MT489059.1\" \"MT489058.1\" \"MT489057.1\" \"MT489056.1\" \"MT489047.1\" #> [1746] \"MT489046.1\" \"MT489045.1\" \"MT489044.1\" \"MT489043.1\" \"MT489042.1\" #> [1751] \"MT489041.1\" \"MT489037.1\" \"MT489024.1\" \"MT489023.1\" \"MT489022.1\" #> [1756] \"MT489020.1\" \"MT489019.1\" \"MT489018.1\" \"MT489016.1\" \"MT489015.1\" #> [1761] \"MT489014.1\" \"MT489013.1\" \"MT489005.1\" \"MT489004.1\" \"MT489003.1\" #> [1766] \"MT489002.1\" \"MT489001.1\" \"MT489000.1\" \"MT488999.1\" \"MT488995.1\" #> [1771] \"MT488982.1\" \"MT488981.1\" \"MT488980.1\" \"MT488978.1\" \"MT488977.1\" #> [1776] \"MT488976.1\" \"MT488974.1\" \"MT488973.1\" \"MT488972.1\" \"MT488971.1\" #> [1781] \"MT488962.1\" \"MT488961.1\" \"MT488960.1\" \"MT488959.1\" \"MT488958.1\" #> [1786] \"MT488957.1\" \"MT488956.1\" \"MT488952.1\" \"HM761930.1\" \"HM762097.1\" #> [1791] \"HM762245.1\" \"HM762432.1\" \"HM762516.1\" \"HM762770.1\" \"HM762862.1\" #> [1796] \"HM763022.1\" \"HM763266.1\" \"HM763434.1\" \"HM763727.1\" \"HM763997.1\" #> [1801] \"HM764105.1\" \"HM764322.1\" \"HM764401.1\" \"HM764649.1\" \"HM764817.1\" #> [1806] \"HM764908.1\" \"HM765180.1\" \"U38998.1\"   \"AY684995.1\" \"AY684994.1\" #> [1811] \"AY684993.1\" \"AY684992.1\" \"AY684991.1\" \"AY646200.1\" \"AY646198.1\" #> [1816] \"DM461196.1\" \"DM461195.1\" \"DM461194.1\" \"DM461193.1\" \"DM461192.1\" #> [1821] \"DM461191.1\" \"DM367551.1\" \"DM367548.1\" \"DM367545.1\" \"DM367544.1\" #> [1826] \"DM367543.1\" \"DM367542.1\" \"DM367541.1\" \"DM367540.1\" \"DM371283.1\" #> [1831] \"DM371280.1\" \"DM371276.1\" \"DM371275.1\" \"DM371274.1\" \"DM371273.1\" #> [1836] \"DM371272.1\" \"DM371271.1\" \"DQ334827.1\" \"HW478258.1\" \"HW478257.1\" #> [1841] \"HW478256.1\" \"HW478255.1\" \"DI178960.1\" \"DI178959.1\" \"DI178958.1\" #> [1846] \"DI178957.1\" \"DI178956.1\" \"DI178955.1\" \"DI178127.1\" \"DI178124.1\" #> [1851] \"DI178120.1\" \"DI178119.1\" \"DI178118.1\" \"DI178117.1\" \"DI178116.1\" #> [1856] \"DI178115.1\" \"AB239248.1\" \"AB239247.1\" \"AB239246.1\" \"AB239228.1\" #> [1861] \"AB239227.1\" \"AB239226.1\" \"AB239203.1\" \"AB239202.1\" \"AB239201.1\" #> [1866] \"AB239200.1\" \"U59646.1\"   \"U59645.1\"   \"U59644.1\"   \"AF161947.1\" #> [1871] \"AF161946.1\" \"HM756841.1\" \"HM757384.1\" \"HM757559.1\" \"HM757725.1\" #> [1876] \"HM758217.1\" \"HM758302.1\" \"HM758466.1\" \"HM758655.1\" \"HM758935.1\" #> [1881] \"HM759106.1\" \"HM759279.1\" \"HM759377.1\" \"HM759647.1\" \"HM759819.1\" #> [1886] \"HM759901.1\" \"HM760085.1\" \"HM760261.1\" \"HM760530.1\" \"HM760613.1\" #> [1891] \"HM760776.1\" \"HM761014.1\" \"HM761146.1\" \"HM761196.1\" \"HM761512.1\" #> [1896] \"HM761773.1\" \"MT489142.1\" \"MT489097.1\" \"MT489055.1\" \"MT489012.1\" #> [1901] \"MT488970.1\" \"MT488927.1\" \"MT488884.1\" \"MT488841.1\" \"MT488802.1\" #> [1906] \"MT488758.1\" \"MT488674.1\" \"MT488594.1\" \"MT492191.1\" \"MT483742.1\" #> [1911] \"KY508415.1\" \"KY508414.1\" \"KY508413.1\" \"KY508412.1\" \"KY508411.1\" #> [1916] \"KY508410.1\" \"KY508409.1\" \"KY508408.1\" \"KY508407.1\" \"KY508406.1\" #> [1921] \"KY508405.1\" \"KY508404.1\" \"FJ154795.1\" \"FJ154794.1\" \"FJ154793.1\" #> [1926] \"DQ098874.1\" \"DQ098873.1\" \"DQ098862.1\" \"DQ098861.1\" \"AY894656.1\" #> [1931] \"AY894655.1\" \"AY894654.1\" \"AY894653.1\" \"AY894652.1\" \"AY894651.1\" #> [1936] \"AY894650.1\" \"AY894649.1\" \"AY894648.1\" \"AY894647.1\" \"HQ005499.1\" #> [1941] \"HQ018926.1\" \"HM102288.1\" \"AF004921.1\" \"HW478260.1\" \"HW478259.1\" aotus@txids  # taxonomic IDs #>  [1] \"231953\"  \"1002694\" \"361674\"  \"292213\"  \"57176\"   \"57175\"   \"43147\"   #>  [8] \"37293\"   \"280755\"  \"867331\"  \"30591\"   \"120088\"  \"9505\"    aotus@clstrs # clusters archive #> Archive of cluster record(s) #>  - [184] clusters aotus@sqs    # sequence archive #> Archive of sequence record(s) #>  - [1945] sequences #>  - [13] unique txids #>  - [597] median sequence length #>  - [0] median ambiguous nucleotides aotus@txdct  # taxonomic dictionary #> Taxonomic dictionary [22] recs, parent [id 9504] # see all of the available slots (slotNames(aotus)) #> [1] \"cids\"    \"txids\"   \"sids\"    \"txdct\"   \"sqs\"     \"clstrs\"  \"prnt_id\" #> [8] \"prnt_nm\" # access different sequences and clusters with [[ (aotus[['0']])              # cluster record 0 #> Cluster Record [id 0] #>  - [subtree] type #>  - [AF129795.1] seed sequence #>  - [173] sequences #>  - [5] taxa (aotus[[aotus@sids[[1]]]])  # first sequence record #> SeqRec [ID: KR528418.1] # get a summary of the whole object (summary(aotus)) #>      ID    Type       Seed  Parent N_taxa N_seqs Med_sql       MAD #> 1     0 subtree AF129795.1    9504      5    173   266.0 0.7090455 #> 2     1 subtree DQ098863.1    9504     10     66  1140.0 0.8966920 #> 3     2 subtree AY659849.1    9504      5     55  1071.0 0.8062280 #> 4     3 subtree DI178118.1    9504      2     52   267.0 0.8666904 #> 5     4 subtree LC075891.1    9504      2     50   844.0 0.8244061 #> 6     5 subtree HM761925.1    9504      9     49   710.0 0.9581328 #> 7     6 subtree HM763429.1    9504      9     49   339.0 0.8417867 #> 8     7 subtree JQ933053.1    9504      9     48   582.5 0.6754071 #> 9     8 subtree HM759641.1    9504      9     48   272.0 0.8482955 #> 10    9 subtree KC761951.1    9504      9     47   649.0 0.9808119 #> 11   10 subtree MT489103.1    9504      8     45  1138.0 0.9992970 #> 12   11 subtree KC762127.1    9504      9     45   797.0 0.9619747 #> 13   12 subtree KC761371.1    9504      9     45   584.0 0.9551948 #> 14   13 subtree KC760228.1    9504      9     43   276.0 0.8748720 #> 15   14 subtree JQ932794.1    9504      4     43   568.0 0.6655075 #> 16   15  direct LC075891.1   30591      1     43   900.0 0.8328878 #> 17   16 subtree EF658652.1    9504      9     41   647.0 0.9793822 #> 18   17 subtree HM760775.1    9504      8     41   680.0 0.9590605 #> 19   18 subtree MT488555.1    9504      8     41   842.0 1.0000000 #> 20   19 subtree   U38998.1    9504      8     40   618.0 0.4020846 #> 21   20 subtree DQ321662.1    9504      8     35   549.0 0.7988127 #> 22   21 subtree JQ932751.1    9504      2     35   796.0 0.7788508 #> 23   22 subtree JN161069.1    9504      1     30  1088.0 0.9985614 #> 24   23  direct LC456000.1   30591      1     30   795.0 0.7748913 #> 25   24 subtree JN161069.1   30591      1     30  1088.0 0.9985614 #> 26   25 subtree AF333711.1    9504      1     28   394.0 0.9228029 #> 27   26 subtree JQ932884.1    9504      4     24   757.5 0.8431763 #> 28   27 subtree LC075890.1    9504      2     24   850.0 0.8423276 #> 29   28 subtree DQ098867.1   30591      2     24  1140.0 0.9663743 #> 30   29 subtree AY900534.1    9504      1     21   291.0 0.8561767 #> 31   30 subtree AF378747.1    9504      1     20   364.0 0.8938575 #> 32   31 subtree AY227055.1 2688256      1     20   269.0 0.9722022 #> 33   32 subtree HM763430.1   30591      2     20   339.0 0.9353022 #> 34   33 subtree HM759643.1   30591      2     20   272.0 0.9726316 #> 35   34 subtree HM761926.1   30591      2     20   711.0 0.9638889 #> 36   35 subtree JQ932877.1    9504      4     19   521.0 0.8932277 #> 37   36 subtree JQ933028.1    9504      2     19   758.0 0.8135355 #> 38   37 subtree JQ932999.1    9504      1     18   633.0 0.6914067 #> 39   38 subtree AF027542.1    9504      1     18   287.0 0.8127515 #> 40   39 subtree AF333712.1    9504      1     18   378.0 0.9713542 #> 41   40  direct LC075890.1   30591      1     18   861.5 0.8424253 #> 42   41 subtree MT483703.1   30591      2     18   618.0 0.9973118 #> 43   42 subtree MT488555.1   30591      2     18   842.0 1.0000000 #> 44   43 subtree MT492158.1   30591      2     18   647.0 0.9997424 #> 45   44 subtree MT483753.1   30591      2     18   905.5 0.9994481 #> 46   45 subtree MT488933.1   30591      2     18   582.5 0.9780015 #> 47   46 subtree MT488817.1   30591      2     18   680.5 0.9938815 #> 48   47 subtree MT489103.1   30591      2     18  1138.0 1.0000000 #> 49   48 subtree MT489061.1   30591      2     18   807.5 0.9813448 #> 50   49 subtree MT489018.1   30591      2     18   649.0 0.9949727 #> 51   50 subtree MT488976.1   30591      2     18   584.0 0.9794101 #> 52   51 subtree JQ932845.1    9504      3     16   587.0 0.6638030 #> 53   52 subtree MT488890.1   30591      2     16   273.0 0.9650350 #> 54   53 subtree MF615377.1    9504      3     14   684.0 0.9140625 #> 55   54  direct LC456005.1   30591      1     14   732.5 0.7900048 #> 56   55 subtree DQ321662.1   30591      2     13   549.0 0.8050398 #> 57   56 subtree AF161946.1    9504      4     12  1059.0 0.9937048 #> 58   57 subtree JQ932800.1    9504      3     12   633.0 0.9001762 #> 59   58 subtree JQ932874.1    9504      1     12   543.5 0.8983452 #> 60   59 subtree KY508404.1    9504      1     12   411.5 0.9586317 #> 61   60 subtree JQ932840.1    9504      1     11   565.0 0.8977661 #> 62   61 subtree AF107750.1    9504      1     11   323.0 0.9789997 #> 63   62 subtree AY900546.1    9504      1     11   290.0 0.6960557 #> 64   63 subtree AY646200.1    9504      4     10   498.0 0.7077341 #> 65   64 subtree JQ932868.1    9504      2     10   561.0 0.8921095 #> 66   65 subtree AY894647.1    9504      1     10  1170.0 0.9992314 #> 67   66 subtree JQ932807.1    9504      1      9   637.0 0.7393674 #> 68   67 subtree AF338375.1    9504      6      8   829.0 0.9398372 #> 69   68 subtree JQ932913.1    9504      2      7   754.0 0.7807910 #> 70   69 subtree HM758650.1    9504      5      7   680.0 0.9595003 #> 71   70 subtree AY900559.1    9504      1      7   285.0 0.7339125 #> 72   71  direct EF658652.1   30591      1      7   629.0 0.9754224 #> 73   72 subtree JQ933020.1    9504      4      6   663.0 0.7837435 #> 74   73 subtree KC761051.1    9504      4      6   473.5 0.6571595 #> 75   74 subtree HM759273.1    9504      5      6   706.5 0.9834499 #> 76   75 subtree AY449069.1    9504      1      6   685.0 1.0000000 #> 77   76 subtree AY684991.1    9504      1      6  1618.0 0.7991497 #> 78   77  direct AY449069.1   30591      1      6   685.0 1.0000000 #> 79   78 subtree DQ989366.1    9504      5      5   428.0 0.9616822 #> 80   79 subtree JQ933005.1    9504      1      5   878.0 0.9155983 #> 81   80 subtree JQ932259.1    9504      1      5   868.0 0.9529944 #> 82   81 subtree JQ932880.1    9504      1      5   556.0 0.8463190 #> 83   82 subtree JQ932869.1    9504      3      5   464.0 0.9661795 #> 84   83 subtree HM756838.1    9504      5      5   549.0 0.9756708 #> 85   84 subtree HM757379.1    9504      5      5   612.0 0.9934641 #> 86   85 subtree HM757554.1    9504      5      5   475.0 0.9233684 #> 87   86 subtree HM757720.1    9504      5      5   898.0 0.9656766 #> 88   87 subtree HM758212.1    9504      5      5   342.0 0.9964912 #> 89   88 subtree HM758297.1    9504      5      5   637.0 0.9885626 #> 90   89 subtree HM758463.1    9504      5      5   590.0 0.9831405 #> 91   90 subtree HM758930.1    9504      5      5   507.0 0.7943343 #> 92   91 subtree HM759101.1    9504      5      5  1077.0 0.9996286 #> 93   92 subtree HM759372.1    9504      5      5   611.0 0.9716150 #> 94   93 subtree HM759729.1    9504      5      5   355.0 0.9684507 #> 95   94 subtree HM759896.1    9504      5      5   580.0 0.9466877 #> 96   95 subtree HM760080.1    9504      5      5   585.0 0.9125413 #> 97   96 subtree HM760256.1    9504      5      5   538.0 0.9951852 #> 98   97 subtree HM760525.1    9504      5      5   554.0 0.9806104 #> 99   98 subtree HM760608.1    9504      5      5   658.0 0.9900452 #> 100  99 subtree HM761193.1    9504      5      5   617.0 0.9765452 #> 101 100 subtree HM761507.1    9504      5      5   558.0 0.9528796 #> 102 101 subtree HM761768.1    9504      5      5   475.0 0.9436326 #> 103 102 subtree HM762092.1    9504      5      5   707.0 0.9786885 #> 104 103 subtree HM762180.1    9504      5      5   761.0 0.9842313 #> 105 104 subtree HM762427.1    9504      5      5   957.0 0.9610152 #> 106 105 subtree HM762765.1    9504      5      5   612.0 0.9719870 #> 107 106 subtree HM763261.1    9504      5      5  1000.0 0.9952000 #> 108 107 subtree HM763727.1    9504      5      5  1245.0 0.9358974 #> 109 108 subtree HM764102.1    9504      5      5   998.0 0.9961924 #> 110 109 subtree HM764317.1    9504      5      5   951.0 0.9501577 #> 111 110 subtree KR902342.1    9504      3      4  1374.0 1.0000000 #> 112 111 subtree AF014508.1    9504      4      4   446.0 0.9983221 #> 113 112 subtree AF014506.1    9504      4      4   312.5 0.9498480 #> 114 113 subtree KC762160.1    9504      4      4   748.0 0.9759680 #> 115 114 subtree KC762072.1    9504      4      4   576.0 0.8039153 #> 116 115 subtree KC762014.1    9504      4      4   663.0 0.9701046 #> 117 116 subtree KC761980.1    9504      4      4   616.5 0.9772000 #> 118 117 subtree KC761918.1    9504      4      4   776.0 0.9932778 #> 119 118 subtree KC761889.1    9504      4      4   522.0 0.9976099 #> 120 119 subtree KC761833.1    9504      4      4   660.0 0.9840504 #> 121 120 subtree KC761782.1    9504      4      4   668.0 0.9589872 #> 122 121 subtree KC761695.1    9504      4      4   735.0 0.8670848 #> 123 122 subtree KC761632.1    9504      4      4   707.0 0.9679219 #> 124 123 subtree KC761601.1    9504      4      4   425.0 0.9982394 #> 125 124 subtree KC761569.1    9504      4      4   744.5 0.9476667 #> 126 125 subtree KC761504.1    9504      4      4   660.0 0.7352784 #> 127 126 subtree KC761470.1    9504      4      4   969.5 0.8648844 #> 128 127 subtree KC761405.1    9504      4      4   459.5 0.8912338 #> 129 128 subtree KC761242.1    9504      4      4   674.0 0.9823529 #> 130 129 subtree KC761177.1    9504      4      4   679.5 0.9255830 #> 131 130 subtree KC761016.1    9504      4      4   445.0 0.9786996 #> 132 131 subtree KC760988.1    9504      4      4   362.0 0.9559229 #> 133 132 subtree JQ932280.1    9504      3      4   554.5 0.7425948 #> 134 133 subtree JQ932662.1    9504      3      4   684.0 0.8431659 #> 135 134 subtree HM762511.1    9504      4      4   521.5 0.9765326 #> 136 135 subtree HM764645.1    9504      4      4   643.5 0.9519231 #> 137 136 subtree AF027546.1    9504      1      4   287.5 0.8907186 #> 138 137 subtree HM764908.1    9504      4      4   490.5 0.9909091 #> 139 138 subtree HM765175.1    9504      4      4   370.0 0.8861985 #> 140 139 subtree AB239200.1    9504      1      4   587.0 0.9995741 #> 141 140  direct DQ098863.1   30591      1      4  1140.0 1.0000000 #> 142 141  direct DQ098851.1   30591      1      4   498.0 1.0000000 #> 143 142 subtree HM758657.1   30591      2      4   679.5 0.9992647 #> 144 143 subtree MW321653.1    9504      2      3  1666.0 0.9988017 #> 145 144 subtree AF014509.1    9504      3      3   343.0 1.0000000 #> 146 145 subtree KC762104.1    9504      3      3   566.0 0.9878261 #> 147 146 subtree KC761277.1    9504      3      3   467.0 0.9775439 #> 148 147 subtree KC761210.1    9504      3      3   386.0 0.8732158 #> 149 148 subtree KC761755.1    9504      3      3   905.0 0.8968421 #> 150 149 subtree KC761438.1    9504      3      3   594.0 0.9977591 #> 151 150 subtree KC761338.1    9504      3      3   538.0 0.9725777 #> 152 151 subtree KC760954.1    9504      3      3   449.0 0.8990349 #> 153 152 subtree KC760866.1    9504      3      3   475.0 0.9845614 #> 154 153 subtree KC760833.1    9504      3      3   527.0 0.9829222 #> 155 154 subtree KC760802.1    9504      3      3   461.0 0.9885305 #> 156 155 subtree KC760770.1    9504      3      3   668.0 0.9736457 #> 157 156 subtree KC760738.1    9504      3      3   518.0 0.9589552 #> 158 157 subtree KC760712.1    9504      3      3   314.0 0.9681529 #> 159 158 subtree KC760681.1    9504      3      3   683.0 0.8234416 #> 160 159 subtree KC760611.1    9504      3      3   531.0 0.9924953 #> 161 160 subtree KC760514.1    9504      3      3   482.0 0.9965565 #> 162 161 subtree KC760417.1    9504      3      3   557.0 0.9976062 #> 163 162 subtree KC760385.1    9504      3      3   420.0 1.0000000 #> 164 163 subtree KC760326.1    9504      3      3   464.0 0.9737589 #> 165 164 subtree KC760263.1    9504      3      3   475.0 0.9971989 #> 166 165 subtree HM761011.1    9504      3      3   764.0 0.9973856 #> 167 166 subtree HM761143.1    9504      3      3   802.0 0.9995844 #> 168 167 subtree HM762858.1    9504      3      3   624.0 0.9941706 #> 169 168 subtree HM763019.1    9504      3      3   431.0 0.9783449 #> 170 169 subtree HM763994.1    9504      3      3   778.0 0.9961489 #> 171 170 subtree HM764396.1    9504      3      3   530.0 1.0000000 #> 172 171 subtree AY900524.1    9504      1      3   366.0 0.7523810 #> 173 172 subtree HM764813.1    9504      3      3   575.0 0.9884660 #> 174 173 subtree AY449065.1    9504      1      3   666.0 0.9980010 #> 175 174 subtree AY449057.1    9504      1      3   667.0 1.0000000 #> 176 175 subtree HM756999.1    9504      3      3   837.0 0.9890325 #> 177 176 subtree AB239246.1    9504      1      3   616.0 0.9989195 #> 178 177 subtree AB239226.1    9504      1      3   614.0 0.9994571 #> 179 178 subtree FJ154793.1    9504      1      3   890.0 0.9992509 #> 180 179  direct AY449065.1   30591      1      3   666.0 0.9980010 #> 181 180  direct AY449057.1   30591      1      3   667.0 1.0000000 #> 182 181  direct MF632276.1   30591      1      3  1059.0 1.0000000 #> 183 182 subtree HM759274.1   30591      2      3   695.0 0.9904489 #> 184 183 subtree AF338376.1   30591      2      3   829.0 1.0000000 #>                            Definition            Feature #> 1        aotus (0.07), partial (0.07)                  - #> 2              aotus (0.1), cds (0.1)                  - #> 3          aotus (0.09), class (0.09)                  - #> 4   antibody (0.05), construct (0.05) jp (0.3), kr (0.2) #> 5              dna (0.1), aotus (0.1)                  - #> 6             aotus (0.1), fbn1 (0.1)                  - #> 7         aotus (0.09), chrna1 (0.09)                  - #> 8          aotus (0.1), genomic (0.1)                  - #> 9             aotus (0.1), gene (0.1)                  - #> 10         aotus (0.1), genomic (0.1)                  - #> 11         gene (0.2), complete (0.1)                  - #> 12         aotus (0.1), genomic (0.1)                  - #> 13         aotus (0.1), genomic (0.1)                  - #> 14         aotus (0.1), genomic (0.1)                  - #> 15         aotus (0.2), genomic (0.2)                  - #> 16             dna (0.2), aotus (0.1)                  - #> 17           aotus (0.09), cds (0.09)        barcode (1) #> 18            aotus (0.1), gene (0.1)                  - #> 19                atp (0.1), f0 (0.1)                  - #> 20       gene (0.08), sequence (0.08)                  - #> 21  gene (0.09), mitochondrial (0.09)                  - #> 22          aotus (0.1), azarai (0.1)                  - #> 23          azarai (0.2), aotus (0.1)                  - #> 24          aotus (0.1), azarai (0.1)                  - #> 25          azarai (0.2), aotus (0.1)                  - #> 26           aotus (0.08), cds (0.08)                  - #> 27         aotus (0.2), genomic (0.2)                  - #> 28          aotus (0.2), azarai (0.1)                  - #> 29             aotus (0.1), cds (0.1)                  - #> 30         aotus (0.08), chain (0.08)                  - #> 31           aotus (0.08), cds (0.08)                  - #> 32       antigen (0.08), aotus (0.08)                  - #> 33        aotus (0.09), azarai (0.09)                  - #> 34          aotus (0.1), azarai (0.1)                  - #> 35          aotus (0.1), azarai (0.1)                  - #> 36         aotus (0.2), genomic (0.2)                  - #> 37          aotus (0.2), azarai (0.1)                  - #> 38         aotus (0.2), genomic (0.2)                  - #> 39         alpha (0.09), aotus (0.09)                  - #> 40           aotus (0.09), cds (0.09)                  - #> 41          aotus (0.2), azarai (0.2)                  - #> 42        aotus (0.08), azarai (0.08)                  - #> 43                atp (0.1), f0 (0.1)                  - #> 44        aotus (0.08), azarai (0.08)                  - #> 45        aotus (0.08), azarai (0.08)                  - #> 46          aotus (0.1), azarai (0.1)                  - #> 47          aotus (0.1), azarai (0.1)                  - #> 48         gene (0.2), complete (0.1)                  - #> 49          aotus (0.1), azarai (0.1)                  - #> 50          aotus (0.1), azarai (0.1)                  - #> 51          aotus (0.1), azarai (0.1)                  - #> 52         aotus (0.2), genomic (0.2)                  - #> 53          aotus (0.1), azarai (0.1)                  - #> 54        allele (0.08), aotus (0.08)                  - #> 55          aotus (0.2), azarai (0.2)                  - #> 56          azarai (0.1), gene (0.08)                  - #> 57            aotus (0.09), cc (0.09)                  - #> 58         aotus (0.2), genomic (0.2)                  - #> 59         aotus (0.2), genomic (0.2)                  - #> 60        sequence (0.2), aotus (0.1)                  - #> 61         aotus (0.2), genomic (0.2)                  - #> 62          aotus (0.08), beta (0.08)                  - #> 63           aotus (0.08), cds (0.08)                  - #> 64             aotus (0.1), cds (0.1)                  - #> 65         aotus (0.2), genomic (0.2)                  - #> 66           aotus (0.1), clone (0.1)                  - #> 67         aotus (0.2), genomic (0.2)                  - #> 68             sry (0.2), aotus (0.1)                  - #> 69         aotus (0.2), genomic (0.2)                  - #> 70            aotus (0.1), gene (0.1)                  - #> 71           aotus (0.08), cds (0.08)                  - #> 72        aotus (0.08), azarai (0.08)                  - #> 73         aotus (0.2), genomic (0.2)                  - #> 74         aotus (0.2), genomic (0.2)                  - #> 75         aotus (0.1), dennd5a (0.1)                  - #> 76          azarai (0.1), clone (0.1)                  - #> 77             aotus (0.1), cds (0.1)                  - #> 78          azarai (0.1), clone (0.1)                  - #> 79             aotus (0.1), cds (0.1)                  - #> 80         aotus (0.2), genomic (0.2)                  - #> 81         aotus (0.2), genomic (0.2)                  - #> 82         aotus (0.2), genomic (0.2)                  - #> 83         aotus (0.2), genomic (0.2)                  - #> 84            aotus (0.1), gene (0.1)                  - #> 85            aotus (0.1), gene (0.1)                  - #> 86            aotus (0.1), gene (0.1)                  - #> 87            aotus (0.1), gene (0.1)                  - #> 88            aotus (0.1), gene (0.1)                  - #> 89            aotus (0.1), gene (0.1)                  - #> 90            aotus (0.1), gene (0.1)                  - #> 91            aotus (0.1), gene (0.1)                  - #> 92            aotus (0.1), gene (0.1)                  - #> 93            aotus (0.1), gene (0.1)                  - #> 94            aotus (0.1), gene (0.1)                  - #> 95            aotus (0.1), gene (0.1)                  - #> 96            aotus (0.1), gene (0.1)                  - #> 97            aotus (0.1), gene (0.1)                  - #> 98            aotus (0.1), gene (0.1)                  - #> 99            aotus (0.1), gene (0.1)                  - #> 100           aotus (0.1), gene (0.1)                  - #> 101          aotus (0.1), foxp1 (0.1)                  - #> 102            aotus (0.1), fes (0.1)                  - #> 103        aotus (0.1), fam123b (0.1)                  - #> 104           aotus (0.1), erc2 (0.1)                  - #> 105           aotus (0.1), edg1 (0.1)                  - #> 106          aotus (0.1), dctn2 (0.1)                  - #> 107           aotus (0.1), cnr1 (0.1)                  - #> 108          aotus (0.1), brca2 (0.1)                  - #> 109           aotus (0.1), bche (0.1)                  - #> 110          aotus (0.1), axin1 (0.1)                  - #> 111            cd4 (0.2), aotus (0.1)                  - #> 112          alpha (0.1), aotus (0.1)                  - #> 113            aotus (0.1), cds (0.1)                  - #> 114        aotus (0.2), genomic (0.2)                  - #> 115        aotus (0.2), genomic (0.2)                  - #> 116        aotus (0.2), genomic (0.2)                  - #> 117        aotus (0.2), genomic (0.2)                  - #> 118        aotus (0.2), genomic (0.2)                  - #> 119        aotus (0.2), genomic (0.2)                  - #> 120        aotus (0.2), genomic (0.2)                  - #> 121        aotus (0.2), genomic (0.2)                  - #> 122        aotus (0.2), genomic (0.2)                  - #> 123        aotus (0.2), genomic (0.2)                  - #> 124        aotus (0.2), genomic (0.2)                  - #> 125        aotus (0.2), genomic (0.2)                  - #> 126        aotus (0.2), genomic (0.2)                  - #> 127        aotus (0.2), genomic (0.2)                  - #> 128        aotus (0.2), genomic (0.2)                  - #> 129        aotus (0.2), genomic (0.2)                  - #> 130        aotus (0.2), genomic (0.2)                  - #> 131        aotus (0.2), genomic (0.2)                  - #> 132        aotus (0.2), genomic (0.2)                  - #> 133        aotus (0.2), genomic (0.2)                  - #> 134        aotus (0.2), genomic (0.2)                  - #> 135          aotus (0.1), dmrt1 (0.1)                  - #> 136            aotus (0.1), app (0.1)                  - #> 137        alpha (0.09), aotus (0.09)                  - #> 138           aff2 (0.1), aotus (0.1)                  - #> 139         adora3 (0.1), aotus (0.1)                  - #> 140            aotus (0.1), dna (0.1)                  - #> 141         aotus (0.1), azarai (0.1)                  - #> 142         aotus (0.1), azarai (0.1)                  - #> 143         aotus (0.1), azarai (0.1)                  - #> 144            aotus (0.1), cds (0.1)                  - #> 145            aotus (0.1), cds (0.1)                  - #> 146        aotus (0.2), genomic (0.2)                  - #> 147        aotus (0.2), genomic (0.2)                  - #> 148        aotus (0.2), genomic (0.2)                  - #> 149        aotus (0.2), genomic (0.2)                  - #> 150        aotus (0.2), genomic (0.2)                  - #> 151        aotus (0.2), genomic (0.2)                  - #> 152        aotus (0.2), genomic (0.2)                  - #> 153        aotus (0.2), genomic (0.2)                  - #> 154        aotus (0.2), genomic (0.2)                  - #> 155        aotus (0.2), genomic (0.2)                  - #> 156        aotus (0.2), genomic (0.2)                  - #> 157        aotus (0.2), genomic (0.2)                  - #> 158        aotus (0.2), genomic (0.2)                  - #> 159        aotus (0.2), genomic (0.2)                  - #> 160        aotus (0.2), genomic (0.2)                  - #> 161        aotus (0.2), genomic (0.2)                  - #> 162        aotus (0.2), genomic (0.2)                  - #> 163        aotus (0.2), genomic (0.2)                  - #> 164        aotus (0.2), genomic (0.2)                  - #> 165        aotus (0.2), genomic (0.2)                  - #> 166           aotus (0.1), gene (0.1)                  - #> 167           aotus (0.1), gene (0.1)                  - #> 168          aotus (0.1), dach1 (0.1)                  - #> 169           aotus (0.1), crem (0.1)                  - #> 170           aotus (0.1), bcor (0.1)                  - #> 171          aotus (0.1), atxn7 (0.1)                  - #> 172          aotus (0.08), cds (0.08)                  - #> 173          aff22 (0.1), aotus (0.1)                  - #> 174         autos (0.1), azarai (0.1)                  - #> 175         autos (0.1), azarai (0.1)                  - #> 176         aotus (0.1), azarai (0.1)                  - #> 177            aotus (0.1), dna (0.1)                  - #> 178            aotus (0.1), dna (0.1)                  - #> 179          aotus (0.08), cds (0.08)                  - #> 180         autos (0.1), azarai (0.1)                  - #> 181         autos (0.1), azarai (0.1)                  - #> 182         aotus (0.1), azarai (0.1)                  - #> 183         aotus (0.1), azarai (0.1)                  - #> 184            sry (0.2), aotus (0.1)                  - # the above generates a data.frame with information on each cluster: # ID - unique id in the object # Type - cluster type # Seed - most connected sequence # Parent - MRCA of all represented taxa # N_taxa - number of NCBI recognised taxa # N_seqs - number of sequences # Med_sql - median sequence length # MAD - Maximum alignment density, values close to 1 indicate all sequences in #  the cluster have a similar length. # Definition - most common words (and frequency) in sequence definitions # Feature - most common feature name (and frequency)"},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqArc-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence record archive — SeqArc-class","title":"Sequence record archive — SeqArc-class","text":"Multiple sequence records containing sequence data.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqArc-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence record archive — SeqArc-class","text":"","code":"# S4 method for SeqArc as.character(x)  # S4 method for SeqArc show(object)  # S4 method for SeqArc print(x)  # S4 method for SeqArc str(object, max.level = 2L, ...)  # S4 method for SeqArc summary(object)  # S4 method for SeqArc,character [[(x, i)  # S4 method for SeqArc,character,missing,missing [(x, i, j, ..., drop = TRUE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqArc-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence record archive — SeqArc-class","text":"x SeqArc object object SeqArc object max.level Maximum level nesting str() ... arguments str() sid(s) j Unused drop Unused","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqArc-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequence record archive — SeqArc-class","text":"Sequences stored raw. Use rawToChar().","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqArc-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Sequence record archive — SeqArc-class","text":"ids Vector Sequence Record IDs nncltds Vector sequence lengths nambgs Vector number ambiguous nucleotides txids Vector source txid associated sequence sqs List SeqRecs named ID","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqArc-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence record archive — SeqArc-class","text":"","code":"data('aotus') seqarc <- aotus@sqs # this is a SeqArc object # it contains sequence records show(seqarc) #> Archive of sequence record(s) #>  - [1945] sequences #>  - [13] unique txids #>  - [597] median sequence length #>  - [0] median ambiguous nucleotides # you can access its different data slots with @ seqarc@ids     # sequence IDs defined as accession + feature position #>    [1] \"KR528418.1\" \"JF444279.1\" \"AY227074.1\" \"AY227073.1\" \"AY227072.1\" #>    [6] \"AY227071.1\" \"AY227070.1\" \"AY227069.1\" \"AY227068.1\" \"AY227067.1\" #>   [11] \"AY227066.1\" \"AY227065.1\" \"AY227064.1\" \"AY227063.1\" \"AY227062.1\" #>   [16] \"AY227061.1\" \"AY227060.1\" \"AY227059.1\" \"AY227058.1\" \"AY227057.1\" #>   [21] \"AY227056.1\" \"AY227055.1\" \"DQ321669.1\" \"MW327030.1\" \"MT489117.1\" #>   [26] \"MT489116.1\" \"MT489115.1\" \"MT489114.1\" \"MT489113.1\" \"MT489112.1\" #>   [31] \"MT489111.1\" \"MT489110.1\" \"MT489075.1\" \"MT489074.1\" \"MT489073.1\" #>   [36] \"MT489072.1\" \"MT489071.1\" \"MT489070.1\" \"MT489069.1\" \"MT489068.1\" #>   [41] \"MT489032.1\" \"MT489031.1\" \"MT489030.1\" \"MT489029.1\" \"MT489028.1\" #>   [46] \"MT489027.1\" \"MT489026.1\" \"MT489025.1\" \"MT488990.1\" \"MT488989.1\" #>   [51] \"MT488988.1\" \"MT488987.1\" \"MT488986.1\" \"MT488985.1\" \"MT488984.1\" #>   [56] \"MT488983.1\" \"MT488947.1\" \"MT488946.1\" \"MT488945.1\" \"MT488944.1\" #>   [61] \"MT488943.1\" \"MT488942.1\" \"MT488941.1\" \"MT488940.1\" \"MT488904.1\" #>   [66] \"MT488903.1\" \"MT488902.1\" \"MT488901.1\" \"MT488900.1\" \"MT488899.1\" #>   [71] \"MT488898.1\" \"MT488897.1\" \"MT488861.1\" \"MT488860.1\" \"MT488859.1\" #>   [76] \"MT488858.1\" \"MT488857.1\" \"MT488856.1\" \"MT488855.1\" \"MT488854.1\" #>   [81] \"MT488815.1\" \"MT488814.1\" \"MT488813.1\" \"MT488812.1\" \"MT488811.1\" #>   [86] \"MT488810.1\" \"MT488809.1\" \"MT488808.1\" \"MT488778.1\" \"MT488777.1\" #>   [91] \"MT488776.1\" \"MT488775.1\" \"MT488774.1\" \"MT488773.1\" \"MT488772.1\" #>   [96] \"MT488771.1\" \"MT488734.1\" \"MT488733.1\" \"MT488732.1\" \"MT488731.1\" #>  [101] \"MT488730.1\" \"MT488729.1\" \"MT488728.1\" \"MT488727.1\" \"MT488672.1\" #>  [106] \"MT488671.1\" \"MT488670.1\" \"MT488669.1\" \"MT488659.1\" \"MT488658.1\" #>  [111] \"MT488657.1\" \"MT488569.1\" \"MT488568.1\" \"MT488567.1\" \"MT488566.1\" #>  [116] \"MF632281.1\" \"MF632280.1\" \"KX774456.1\" \"KR902344.1\" \"DQ321666.1\" #>  [121] \"DQ321665.1\" \"DQ162635.1\" \"DQ162634.1\" \"DQ162633.1\" \"DQ162630.1\" #>  [126] \"DQ162629.1\" \"DQ162628.1\" \"DQ162627.1\" \"DQ162626.1\" \"DQ162624.1\" #>  [131] \"AY563263.2\" \"AY563258.2\" \"AY563227.2\" \"AY563219.2\" \"AY659834.1\" #>  [136] \"AY659833.1\" \"AY659832.1\" \"AY659831.1\" \"AY659830.1\" \"AY659829.1\" #>  [141] \"AF352260.1\" \"AF352259.1\" \"AF014508.1\" \"AF014507.1\" \"AF014506.1\" #>  [146] \"AF014504.1\" \"HQ005503.1\" \"HQ005502.1\" \"HQ018928.1\" \"AY114539.1\" #>  [151] \"AY114538.1\" \"AY114537.1\" \"AY114536.1\" \"AY114535.1\" \"AY114534.1\" #>  [156] \"AY114533.1\" \"AY114532.1\" \"AY114531.1\" \"AY114530.1\" \"AY114529.1\" #>  [161] \"KC762196.1\" \"KC762163.1\" \"KC762106.1\" \"KC762075.1\" \"KC762017.1\" #>  [166] \"KC761983.1\" \"KC761954.1\" \"KC761921.1\" \"KC761892.1\" \"KC761836.1\" #>  [171] \"KC761816.1\" \"KC761785.1\" \"KC761698.1\" \"KC761635.1\" \"KC761604.1\" #>  [176] \"KC761572.1\" \"KC761540.1\" \"KC761507.1\" \"KC761473.1\" \"KC761408.1\" #>  [181] \"KC761373.1\" \"KC761279.1\" \"KC761245.1\" \"KC761212.1\" \"KC761180.1\" #>  [186] \"KC761083.1\" \"KC761053.1\" \"KC761019.1\" \"KC760991.1\" \"MW736163.1\" #>  [191] \"MT489140.1\" \"MT489139.1\" \"MT489137.1\" \"MT489136.1\" \"MT489135.1\" #>  [196] \"MT489134.1\" \"MT489095.1\" \"MT489094.1\" \"MT489092.1\" \"MT489091.1\" #>  [201] \"MT489053.1\" \"MT489052.1\" \"MT489050.1\" \"MT489049.1\" \"MT489048.1\" #>  [206] \"MT489010.1\" \"MT489009.1\" \"MT489007.1\" \"MT489006.1\" \"MT488968.1\" #>  [211] \"MT488967.1\" \"MT488965.1\" \"MT488964.1\" \"MT488963.1\" \"MT488925.1\" #>  [216] \"MT488924.1\" \"MT488922.1\" \"MT488921.1\" \"MT488920.1\" \"MT488882.1\" #>  [221] \"MT488881.1\" \"MT488879.1\" \"MT488878.1\" \"MT488839.1\" \"MT488838.1\" #>  [226] \"MT488800.1\" \"MT488799.1\" \"MT488797.1\" \"MT488796.1\" \"MT488795.1\" #>  [231] \"MT488756.1\" \"MT488755.1\" \"MT488753.1\" \"MT488752.1\" \"MT488751.1\" #>  [236] \"MT488681.1\" \"MT488680.1\" \"MT488679.1\" \"MT488678.1\" \"MT488677.1\" #>  [241] \"MT488676.1\" \"MT488592.1\" \"MT488591.1\" \"MT488589.1\" \"MT488588.1\" #>  [246] \"MT488587.1\" \"MT488586.1\" \"MT492189.1\" \"MT492188.1\" \"MT483740.1\" #>  [251] \"MT483739.1\" \"MT483737.1\" \"MT483736.1\" \"MT483735.1\" \"MT483734.1\" #>  [256] \"MF615381.1\" \"MF615380.1\" \"MF615379.1\" \"MF615378.1\" \"MF615377.1\" #>  [261] \"MF615376.1\" \"MK205145.1\" \"MF632285.1\" \"MF632284.1\" \"MF632283.1\" #>  [266] \"MF632282.1\" \"MW736164.1\" \"MT489147.1\" \"MT489141.1\" \"MT489126.1\" #>  [271] \"MT489106.1\" \"MT489102.1\" \"MT489096.1\" \"MT489083.1\" \"MT489064.1\" #>  [276] \"MT489060.1\" \"MT489054.1\" \"MT489040.1\" \"MT489021.1\" \"MT489017.1\" #>  [281] \"MT489011.1\" \"MT488998.1\" \"MT488979.1\" \"MT488975.1\" \"MT488969.1\" #>  [286] \"MT488955.1\" \"MT488936.1\" \"MT488926.1\" \"MT488912.1\" \"MT488893.1\" #>  [291] \"MT488889.1\" \"MT488883.1\" \"MT488870.1\" \"MT488850.1\" \"MT488846.1\" #>  [296] \"MT488840.1\" \"MT488831.1\" \"MT488807.1\" \"MT488801.1\" \"MT488787.1\" #>  [301] \"MT488767.1\" \"MT488763.1\" \"MT488757.1\" \"MT488743.1\" \"MT488723.1\" #>  [306] \"MT488675.1\" \"MT488655.1\" \"MT488599.1\" \"MT488593.1\" \"MT488578.1\" #>  [311] \"MT488558.1\" \"MT492196.1\" \"MT492190.1\" \"MT492179.1\" \"MT483747.1\" #>  [316] \"MT483741.1\" \"MT483726.1\" \"MT483706.1\" \"DQ321664.1\" \"DQ162736.1\" #>  [321] \"DQ162732.1\" \"DQ162729.1\" \"DQ162727.1\" \"DQ162719.1\" \"DQ162718.1\" #>  [326] \"DQ162711.1\" \"DQ162710.1\" \"AY563262.2\" \"AY563261.2\" \"AY563260.2\" #>  [331] \"AY563259.2\" \"AY563257.2\" \"AY563256.2\" \"AY563254.2\" \"AY563253.2\" #>  [336] \"AY563252.2\" \"AY563251.2\" \"AY563250.2\" \"AY563249.2\" \"AY563248.2\" #>  [341] \"AY563247.2\" \"AY563246.2\" \"AY563245.2\" \"AY563244.2\" \"AY563243.2\" #>  [346] \"AY563242.2\" \"AY563241.2\" \"AY563229.2\" \"AY563226.2\" \"AY659828.1\" #>  [351] \"AY659827.1\" \"AY659826.1\" \"AF352258.1\" \"AF352257.1\" \"AF352256.1\" #>  [356] \"AF132757.1\" \"AF129797.1\" \"AF097328.1\" \"AF097326.1\" \"AF097324.1\" #>  [361] \"JQ932319.1\" \"JQ932318.1\" \"JQ932310.1\" \"JQ932304.1\" \"JQ932303.1\" #>  [366] \"JQ932293.1\" \"JQ932280.1\" \"JQ932259.1\" \"JQ932255.1\" \"JQ932245.1\" #>  [371] \"JQ932232.1\" \"JQ932362.1\" \"JQ932359.1\" \"JQ932356.1\" \"JQ932605.1\" #>  [376] \"JQ932597.1\" \"JQ932590.1\" \"JQ932717.1\" \"JQ932662.1\" \"JQ932636.1\" #>  [381] \"JQ932630.1\" \"JQ932822.1\" \"JQ932821.1\" \"JQ932818.1\" \"JQ932817.1\" #>  [386] \"JQ932816.1\" \"JQ932815.1\" \"JQ932814.1\" \"JQ932813.1\" \"JQ932812.1\" #>  [391] \"JQ932809.1\" \"JQ932807.1\" \"JQ932806.1\" \"JQ932805.1\" \"JQ932804.1\" #>  [396] \"JQ932803.1\" \"JQ932802.1\" \"JQ932801.1\" \"JQ932800.1\" \"JQ932799.1\" #>  [401] \"JQ932794.1\" \"JQ932775.1\" \"JQ932756.1\" \"JQ932751.1\" \"JQ932724.1\" #>  [406] \"JQ932932.1\" \"JQ932931.1\" \"JQ932930.1\" \"JQ932929.1\" \"JQ932928.1\" #>  [411] \"JQ932927.1\" \"JQ932926.1\" \"JQ932925.1\" \"JQ932924.1\" \"JQ932923.1\" #>  [416] \"JQ932922.1\" \"JQ932921.1\" \"JQ932920.1\" \"JQ932918.1\" \"JQ932916.1\" #>  [421] \"JQ932914.1\" \"JQ932913.1\" \"JQ932909.1\" \"JQ932908.1\" \"JQ932905.1\" #>  [426] \"JQ932903.1\" \"JQ932897.1\" \"JQ932896.1\" \"JQ932895.1\" \"JQ932892.1\" #>  [431] \"JQ932891.1\" \"JQ932890.1\" \"JQ932889.1\" \"JQ932888.1\" \"JQ932887.1\" #>  [436] \"JQ932886.1\" \"JQ932885.1\" \"JQ932884.1\" \"JQ932882.1\" \"JQ932881.1\" #>  [441] \"JQ932880.1\" \"JQ932879.1\" \"JQ932877.1\" \"JQ932874.1\" \"JQ932873.1\" #>  [446] \"JQ932872.1\" \"JQ932870.1\" \"JQ932869.1\" \"JQ932868.1\" \"JQ932867.1\" #>  [451] \"JQ932866.1\" \"JQ932865.1\" \"JQ932864.1\" \"JQ932863.1\" \"JQ932862.1\" #>  [456] \"JQ932861.1\" \"JQ932859.1\" \"JQ932857.1\" \"JQ932856.1\" \"JQ932855.1\" #>  [461] \"JQ932854.1\" \"JQ932853.1\" \"JQ932852.1\" \"JQ932851.1\" \"JQ932850.1\" #>  [466] \"JQ932849.1\" \"JQ932847.1\" \"JQ932846.1\" \"JQ932845.1\" \"JQ932844.1\" #>  [471] \"JQ932843.1\" \"JQ932842.1\" \"JQ932841.1\" \"JQ932840.1\" \"JQ932839.1\" #>  [476] \"JQ932838.1\" \"JQ932837.1\" \"JQ932836.1\" \"JQ932835.1\" \"JQ932833.1\" #>  [481] \"JQ932831.1\" \"JQ932830.1\" \"JQ932829.1\" \"JQ932827.1\" \"JQ932823.1\" #>  [486] \"JQ933029.1\" \"JQ933028.1\" \"JQ933027.1\" \"JQ933026.1\" \"JQ933023.1\" #>  [491] \"JQ933020.1\" \"JQ933011.1\" \"JQ933006.1\" \"JQ933005.1\" \"JQ933004.1\" #>  [496] \"JQ933001.1\" \"JQ933000.1\" \"JQ932999.1\" \"JQ932998.1\" \"JQ932997.1\" #>  [501] \"JQ932996.1\" \"JQ932995.1\" \"JQ932994.1\" \"JQ932993.1\" \"JQ932992.1\" #>  [506] \"JQ932991.1\" \"JQ932990.1\" \"JQ932989.1\" \"JQ932988.1\" \"JQ932987.1\" #>  [511] \"JQ932986.1\" \"JQ932985.1\" \"JQ932984.1\" \"JQ932983.1\" \"JQ932982.1\" #>  [516] \"JQ932981.1\" \"JQ932980.1\" \"JQ932979.1\" \"JQ932978.1\" \"JQ932977.1\" #>  [521] \"JQ932976.1\" \"JQ932975.1\" \"JQ932974.1\" \"JQ932973.1\" \"JQ932972.1\" #>  [526] \"JQ932971.1\" \"JQ932970.1\" \"JQ932969.1\" \"JQ932967.1\" \"JQ932966.1\" #>  [531] \"JQ932965.1\" \"JQ932964.1\" \"JQ932963.1\" \"JQ932962.1\" \"JQ932961.1\" #>  [536] \"JQ932960.1\" \"JQ932959.1\" \"JQ932958.1\" \"JQ932957.1\" \"JQ932956.1\" #>  [541] \"JQ932955.1\" \"JQ932954.1\" \"JQ932953.1\" \"JQ932934.1\" \"JQ932933.1\" #>  [546] \"JQ963361.1\" \"JQ963360.1\" \"JQ963351.1\" \"JQ963350.1\" \"JQ963349.1\" #>  [551] \"JQ963348.1\" \"JQ963347.1\" \"JQ963346.1\" \"JQ933101.1\" \"JQ933099.1\" #>  [556] \"JQ933082.1\" \"JQ933076.1\" \"JQ933075.1\" \"JQ933053.1\" \"MT489118.1\" #>  [561] \"MT489076.1\" \"MT489033.1\" \"MT488991.1\" \"MT488948.1\" \"MT488905.1\" #>  [566] \"MT488862.1\" \"MT488816.1\" \"MT488779.1\" \"MT488735.1\" \"MT488656.1\" #>  [571] \"MT488570.1\" \"MT492172.1\" \"MT483718.1\" \"MT253565.1\" \"MT232916.1\" #>  [576] \"MT232915.1\" \"LR699078.1\" \"LR699077.1\" \"LR699076.1\" \"LS481196.1\" #>  [581] \"LS481195.1\" \"LS481194.1\" \"LS481193.1\" \"LS481192.1\" \"AF097329.1\" #>  [586] \"AF097327.1\" \"AF097325.1\" \"AF097321.1\" \"JN161047.1\" \"HQ005506.1\" #>  [591] \"HQ018927.1\" \"KC762193.1\" \"KC762160.1\" \"KC762127.1\" \"KC762104.1\" #>  [596] \"KC762072.1\" \"KC762014.1\" \"KC761980.1\" \"KC761951.1\" \"KC761918.1\" #>  [601] \"KC761889.1\" \"KC761833.1\" \"KC761813.1\" \"KC761782.1\" \"KC761755.1\" #>  [606] \"KC761695.1\" \"KC761632.1\" \"KC761601.1\" \"KC761569.1\" \"KC761537.1\" #>  [611] \"KC761504.1\" \"KC761470.1\" \"KC761438.1\" \"KC761405.1\" \"KC761371.1\" #>  [616] \"KC761338.1\" \"KC761242.1\" \"KC761210.1\" \"KC761177.1\" \"KC761144.1\" #>  [621] \"KC761111.1\" \"KC761080.1\" \"KC761050.1\" \"KC761016.1\" \"KC760988.1\" #>  [626] \"KC760954.1\" \"KC760891.1\" \"KC760866.1\" \"KC760833.1\" \"KC760802.1\" #>  [631] \"KC760770.1\" \"KC760738.1\" \"KC760712.1\" \"KC760681.1\" \"KC760646.1\" #>  [636] \"KC760611.1\" \"KC760576.1\" \"KC760514.1\" \"KC760483.1\" \"KC760450.1\" #>  [641] \"KC760417.1\" \"KC760385.1\" \"KC760326.1\" \"KC760263.1\" \"KC760228.1\" #>  [646] \"KC761952.1\" \"KC761919.1\" \"KC761890.1\" \"KC761834.1\" \"KC761814.1\" #>  [651] \"KC761783.1\" \"KC761756.1\" \"KC761696.1\" \"KC761633.1\" \"KC761602.1\" #>  [656] \"KC761570.1\" \"KC761538.1\" \"KC761505.1\" \"KC761471.1\" \"KC761439.1\" #>  [661] \"KC761406.1\" \"KC761339.1\" \"KC761277.1\" \"KC761243.1\" \"KC761178.1\" #>  [666] \"KC761145.1\" \"KC761081.1\" \"KC761051.1\" \"KC761017.1\" \"KC760989.1\" #>  [671] \"KC760955.1\" \"KC760892.1\" \"KC760867.1\" \"KC760834.1\" \"KC760803.1\" #>  [676] \"KC760771.1\" \"KC760739.1\" \"KC760713.1\" \"KC760682.1\" \"KC760647.1\" #>  [681] \"KC760612.1\" \"KC760577.1\" \"KC760515.1\" \"KC760484.1\" \"KC760451.1\" #>  [686] \"KC760418.1\" \"KC760386.1\" \"KC760327.1\" \"KC760264.1\" \"KC760229.1\" #>  [691] \"AY225808.2\" \"AY225809.2\" \"AF169487.1\" \"AF169486.1\" \"AF169485.1\" #>  [696] \"U36770.1\"   \"HM756840.1\" \"HM757383.1\" \"HM757558.1\" \"HM757724.1\" #>  [701] \"HM758216.1\" \"HM758297.1\" \"HM758465.1\" \"HM758650.1\" \"HM758934.1\" #>  [706] \"HM759105.1\" \"HM759278.1\" \"HM759372.1\" \"HM759646.1\" \"HM759729.1\" #>  [711] \"HM759896.1\" \"HM760080.1\" \"HM760256.1\" \"HM760529.1\" \"HM760608.1\" #>  [716] \"HM760775.1\" \"HM761013.1\" \"HM761145.1\" \"HM761195.1\" \"HM761507.1\" #>  [721] \"HM761772.1\" \"HM761929.1\" \"HM762096.1\" \"HM762207.1\" \"HM762431.1\" #>  [726] \"HM762511.1\" \"HM762768.1\" \"HM762858.1\" \"HM763021.1\" \"HM763265.1\" #>  [731] \"HM763433.1\" \"HM763726.1\" \"HM763996.1\" \"HM764104.1\" \"HM764321.1\" #>  [736] \"HM764396.1\" \"HM764648.1\" \"AF185631.1\" \"AF185630.1\" \"AF185629.1\" #>  [741] \"AF185628.1\" \"AF185627.1\" \"AF185625.1\" \"AF185624.1\" \"AF185623.1\" #>  [746] \"AF107758.1\" \"AF107755.1\" \"AF107753.1\" \"AF107750.1\" \"AF107749.1\" #>  [751] \"AF107748.1\" \"AF107742.1\" \"AF107741.1\" \"AF107740.1\" \"AF107738.1\" #>  [756] \"AF107736.1\" \"AF014513.1\" \"AF014512.1\" \"AF014511.1\" \"AF014509.1\" #>  [761] \"JN161054.1\" \"JN161053.1\" \"JN161052.1\" \"JN161051.1\" \"JN161050.1\" #>  [766] \"JN161049.1\" \"HQ005509.1\" \"HQ005508.1\" \"HQ005507.1\" \"AY114521.1\" #>  [771] \"AY114520.1\" \"AY114519.1\" \"AY114518.1\" \"AY114517.1\" \"AY114516.1\" #>  [776] \"AY114515.1\" \"AY114514.1\" \"AF027569.1\" \"AF027567.1\" \"AF027566.1\" #>  [781] \"AF027565.1\" \"AF027564.1\" \"AF027563.1\" \"AF027562.1\" \"AF027561.1\" #>  [786] \"AF027560.1\" \"AF027559.1\" \"AF027554.1\" \"AF027553.1\" \"AF027552.1\" #>  [791] \"AF027551.1\" \"AF027549.1\" \"AF027548.1\" \"AF027547.1\" \"AF027546.1\" #>  [796] \"AF027545.1\" \"AF027544.1\" \"AF027543.1\" \"AF027542.1\" \"AF286382.1\" #>  [801] \"AF286380.1\" \"KC762194.1\" \"KC762161.1\" \"KC762128.1\" \"KC762073.1\" #>  [806] \"KC762015.1\" \"KC761981.1\" \"AY245679.1\" \"AY245678.1\" \"AY245677.1\" #>  [811] \"AY245676.1\" \"AY245675.1\" \"AY283262.1\" \"AY225807.1\" \"AY225804.1\" #>  [816] \"AY225803.1\" \"AY225799.1\" \"AF352255.1\" \"AF352254.1\" \"AF333732.1\" #>  [821] \"AF333731.1\" \"AF333730.1\" \"AF333729.1\" \"AF333728.1\" \"AF333727.1\" #>  [826] \"AF333726.1\" \"AF333725.1\" \"AF333724.1\" \"AF333723.1\" \"AF333722.1\" #>  [831] \"AF333721.1\" \"AF333720.1\" \"AF333719.1\" \"AF333718.1\" \"AF333717.1\" #>  [836] \"AF333716.1\" \"AF333715.1\" \"AF333714.1\" \"AF333713.1\" \"AF333712.1\" #>  [841] \"AF333711.1\" \"AF333710.1\" \"AF333709.1\" \"AF378750.1\" \"AF378749.1\" #>  [846] \"AF378748.1\" \"AF378747.1\" \"AF378746.1\" \"AF378745.1\" \"AF378744.1\" #>  [851] \"AF378743.1\" \"AF378742.1\" \"AF378741.1\" \"AF336946.1\" \"AF336945.1\" #>  [856] \"AF336944.1\" \"AF336943.1\" \"AF336942.1\" \"AF336941.1\" \"AF336940.1\" #>  [861] \"AF336939.1\" \"AF336938.1\" \"AF336937.1\" \"AF336936.1\" \"AF336935.1\" #>  [866] \"AF336934.1\" \"AF336933.1\" \"AF336932.1\" \"AF336931.1\" \"AF336930.1\" #>  [871] \"AF440688.1\" \"AF132770.1\" \"AF132769.1\" \"AF132768.1\" \"AF132767.1\" #>  [876] \"AF132766.1\" \"AF132765.1\" \"AF132764.1\" \"AF132763.1\" \"AF132762.1\" #>  [881] \"AF132761.1\" \"AF132760.1\" \"AF132759.1\" \"AF132758.1\" \"AF132756.1\" #>  [886] \"AF132755.1\" \"AF129808.1\" \"AF129807.1\" \"AF129806.1\" \"AF129805.1\" #>  [891] \"AF129804.1\" \"AF129803.1\" \"AF129802.1\" \"AF129801.1\" \"AF129800.1\" #>  [896] \"AF129799.1\" \"AF129798.1\" \"AF129796.1\" \"AF129795.1\" \"AF129794.1\" #>  [901] \"AF129793.1\" \"AF129792.1\" \"AF185633.1\" \"AF185632.1\" \"AY563202.2\" #>  [906] \"AY563201.2\" \"AY563200.2\" \"AY563199.2\" \"AY563198.2\" \"AY563197.2\" #>  [911] \"AY563196.2\" \"AY563195.2\" \"AY563194.2\" \"AY563193.2\" \"AY563192.2\" #>  [916] \"AY563191.2\" \"AY563190.2\" \"AY563189.2\" \"AY563188.2\" \"AY563186.2\" #>  [921] \"AY563185.2\" \"AY563184.2\" \"AY563183.2\" \"AY563182.2\" \"AY563181.2\" #>  [926] \"AY563180.2\" \"AY972694.1\" \"AY900570.1\" \"AY900566.1\" \"AY900565.1\" #>  [931] \"AY900564.1\" \"AY900561.1\" \"AY900560.1\" \"AY900559.1\" \"AY900557.1\" #>  [936] \"AY900556.1\" \"AY900554.1\" \"AY900553.1\" \"AY900552.1\" \"AY900550.1\" #>  [941] \"AY900549.1\" \"AY900548.1\" \"AY900547.1\" \"AY900546.1\" \"AY900544.1\" #>  [946] \"AY900539.1\" \"AY900538.1\" \"AY900537.1\" \"AY900536.1\" \"AY900535.1\" #>  [951] \"AY900534.1\" \"AY900533.1\" \"AY900532.1\" \"AY900531.1\" \"AY900530.1\" #>  [956] \"AY900529.1\" \"AY900528.1\" \"AY900527.1\" \"AY900524.1\" \"AY900520.1\" #>  [961] \"AY659852.1\" \"AY659851.1\" \"AY659850.1\" \"AY659849.1\" \"AY659848.1\" #>  [966] \"AY659847.1\" \"AY659846.1\" \"AY659845.1\" \"AY659844.1\" \"AY659843.1\" #>  [971] \"AY659842.1\" \"AY659841.1\" \"AY659840.1\" \"AY659839.1\" \"AY659838.1\" #>  [976] \"AY659837.1\" \"AY659836.1\" \"AY659835.1\" \"AY493661.1\" \"AY245688.1\" #>  [981] \"AY245687.1\" \"AY245686.1\" \"AY245685.1\" \"AY245684.1\" \"AY245683.1\" #>  [986] \"AY245682.1\" \"AY245681.1\" \"AY245680.1\" \"MT483724.1\" \"MT483722.1\" #>  [991] \"MT483721.1\" \"MT483720.1\" \"MT483719.1\" \"MF615384.1\" \"MF615383.1\" #>  [996] \"MF615382.1\" \"MF615375.1\" \"MF615374.1\" \"MF615373.1\" \"MF615372.1\" #> [1001] \"MF615371.1\" \"MF632279.1\" \"KR902343.1\" \"DQ321660.1\" \"DQ321659.1\" #> [1006] \"DQ162705.1\" \"DQ162704.1\" \"DQ162699.1\" \"DQ162688.1\" \"DQ162683.1\" #> [1011] \"DQ162682.1\" \"DQ162679.1\" \"DQ162676.1\" \"DQ162668.1\" \"DQ162661.1\" #> [1016] \"DQ162660.1\" \"DQ162648.1\" \"DQ162647.1\" \"DQ162646.1\" \"DQ162645.1\" #> [1021] \"AY563255.2\" \"AY563239.2\" \"AY563237.2\" \"AY563236.2\" \"AY563234.2\" #> [1026] \"AY563233.2\" \"AY563232.2\" \"AY563231.2\" \"AY563230.2\" \"AY563228.2\" #> [1031] \"AY563225.2\" \"AY563224.2\" \"AY563223.2\" \"AY563222.2\" \"AY563221.2\" #> [1036] \"AY563220.2\" \"AY563218.2\" \"AY563217.2\" \"AY563216.2\" \"AY563215.2\" #> [1041] \"AY563214.2\" \"AY563213.2\" \"AY563212.2\" \"AY563211.2\" \"AY563210.2\" #> [1046] \"AY563209.2\" \"AY563208.2\" \"AY563207.2\" \"AY563206.2\" \"AY563204.2\" #> [1051] \"AY563203.2\" \"MW321654.1\" \"MW321653.1\" \"MT489138.1\" \"MT489125.1\" #> [1056] \"MT489124.1\" \"MT489122.1\" \"MT489121.1\" \"MT489120.1\" \"MT489119.1\" #> [1061] \"MT489093.1\" \"MT489082.1\" \"MT489081.1\" \"MT489079.1\" \"MT489078.1\" #> [1066] \"MT489077.1\" \"MT489051.1\" \"MT489039.1\" \"MT489038.1\" \"MT489036.1\" #> [1071] \"MT489035.1\" \"MT489034.1\" \"MT489008.1\" \"MT488997.1\" \"MT488996.1\" #> [1076] \"MT488994.1\" \"MT488993.1\" \"MT488992.1\" \"MT488966.1\" \"MT488954.1\" #> [1081] \"MT488953.1\" \"MT488951.1\" \"MT488950.1\" \"MT488949.1\" \"MT488923.1\" #> [1086] \"MT488911.1\" \"MT488910.1\" \"MT488908.1\" \"MT488907.1\" \"MT488906.1\" #> [1091] \"MT488880.1\" \"MT488869.1\" \"MT488868.1\" \"MT488866.1\" \"MT488865.1\" #> [1096] \"MT488864.1\" \"MT488863.1\" \"MT488837.1\" \"MT488828.1\" \"MT488827.1\" #> [1101] \"MT488825.1\" \"MT488824.1\" \"MT488823.1\" \"MT488798.1\" \"MT488786.1\" #> [1106] \"MT488785.1\" \"MT488783.1\" \"MT488782.1\" \"MT488781.1\" \"MT488780.1\" #> [1111] \"MT488754.1\" \"MT488742.1\" \"MT488741.1\" \"MT488739.1\" \"MT488738.1\" #> [1116] \"MT488737.1\" \"MT488736.1\" \"MT488654.1\" \"MT488653.1\" \"MT488652.1\" #> [1121] \"MT488650.1\" \"MT488649.1\" \"MT488648.1\" \"MT488590.1\" \"MT488577.1\" #> [1126] \"MT488576.1\" \"MT488574.1\" \"MT488573.1\" \"MT488572.1\" \"MT488571.1\" #> [1131] \"MT492187.1\" \"MT492178.1\" \"MT492177.1\" \"MT492175.1\" \"MT492174.1\" #> [1136] \"MT492173.1\" \"MT483738.1\" \"MT483725.1\" \"HM762767.1\" \"HM762766.1\" #> [1141] \"HM762765.1\" \"HM762863.1\" \"HM763019.1\" \"HM763263.1\" \"HM763262.1\" #> [1146] \"HM763261.1\" \"HM763431.1\" \"HM763430.1\" \"HM763429.1\" \"HM763724.1\" #> [1151] \"HM763723.1\" \"HM763722.1\" \"HM763994.1\" \"HM764188.1\" \"HM764187.1\" #> [1156] \"HM764102.1\" \"HM764319.1\" \"HM764318.1\" \"HM764317.1\" \"HM764402.1\" #> [1161] \"HM764646.1\" \"HM764645.1\" \"HM764814.1\" \"HM764813.1\" \"HM765068.1\" #> [1166] \"HM764910.1\" \"HM764909.1\" \"HM765177.1\" \"HM765176.1\" \"HM765175.1\" #> [1171] \"AF420045.1\" \"AY449080.1\" \"AY449079.1\" \"AY449071.1\" \"AY449070.1\" #> [1176] \"AY449069.1\" \"AY449065.1\" \"AY449059.1\" \"AY449058.1\" \"AY449057.1\" #> [1181] \"HM756917.1\" \"HM756916.1\" \"HM756838.1\" \"HM757001.1\" \"HM757000.1\" #> [1186] \"HM756999.1\" \"HM757381.1\" \"HM757380.1\" \"HM757379.1\" \"HM757556.1\" #> [1191] \"HM757555.1\" \"HM757554.1\" \"HM757722.1\" \"HM757721.1\" \"HM757720.1\" #> [1196] \"HM757999.1\" \"HM758214.1\" \"HM758213.1\" \"HM758212.1\" \"HM758450.1\" #> [1201] \"HM758304.1\" \"HM758303.1\" \"HM758476.1\" \"HM758475.1\" \"HM758463.1\" #> [1206] \"HM758660.1\" \"HM758659.1\" \"HM758658.1\" \"HM758657.1\" \"HM758656.1\" #> [1211] \"HM758932.1\" \"HM758931.1\" \"HM758930.1\" \"HM759103.1\" \"HM759102.1\" #> [1216] \"HM759101.1\" \"HM759276.1\" \"HM759275.1\" \"HM759274.1\" \"HM759273.1\" #> [1221] \"HM759535.1\" \"HM759379.1\" \"HM759378.1\" \"HM759644.1\" \"HM759643.1\" #> [1226] \"HM759641.1\" \"HM759836.1\" \"HM759777.1\" \"HM759775.1\" \"HM760059.1\" #> [1231] \"HM759903.1\" \"HM759902.1\" \"HM760239.1\" \"HM760087.1\" \"HM760086.1\" #> [1236] \"HM760421.1\" \"HM760263.1\" \"HM760262.1\" \"HM760527.1\" \"HM760526.1\" #> [1241] \"HM760525.1\" \"HM760615.1\" \"HM760614.1\" \"HM760759.1\" \"HM761011.1\" #> [1246] \"HM761143.1\" \"HM761207.1\" \"HM761206.1\" \"HM761193.1\" \"HM761664.1\" #> [1251] \"HM761514.1\" \"HM761513.1\" \"HM761770.1\" \"HM761769.1\" \"HM761768.1\" #> [1256] \"HM761927.1\" \"HM761926.1\" \"HM761925.1\" \"HM762094.1\" \"HM762093.1\" #> [1261] \"HM762092.1\" \"HM762324.1\" \"HM762181.1\" \"HM762180.1\" \"HM762429.1\" #> [1266] \"HM762428.1\" \"HM762427.1\" \"HM762674.1\" \"HM762517.1\" \"DQ098868.1\" #> [1271] \"DQ098867.1\" \"DQ098856.1\" \"DQ098855.1\" \"AY455159.1\" \"AY455158.1\" #> [1276] \"AY455153.1\" \"U36846.1\"   \"JN161098.1\" \"JN161097.1\" \"JN161096.1\" #> [1281] \"JN161095.1\" \"JN161094.1\" \"JN161093.1\" \"JN161092.1\" \"JN161091.1\" #> [1286] \"JN161090.1\" \"JN161089.1\" \"JN161088.1\" \"JN161087.1\" \"JN161086.1\" #> [1291] \"JN161085.1\" \"JN161084.1\" \"JN161083.1\" \"JN161082.1\" \"JN161081.1\" #> [1296] \"JN161080.1\" \"JN161079.1\" \"JN161078.1\" \"JN161077.1\" \"JN161076.1\" #> [1301] \"JN161075.1\" \"JN161074.1\" \"JN161073.1\" \"JN161072.1\" \"JN161071.1\" #> [1306] \"JN161070.1\" \"JN161069.1\" \"EF658653.1\" \"EF658652.1\" \"DQ989366.1\" #> [1311] \"KC762195.1\" \"KC762162.1\" \"KC762129.1\" \"KC762105.1\" \"KC762074.1\" #> [1316] \"KC762016.1\" \"KC761982.1\" \"KC761953.1\" \"KC761920.1\" \"KC761891.1\" #> [1321] \"KC761835.1\" \"KC761815.1\" \"KC761784.1\" \"KC761757.1\" \"KC761697.1\" #> [1326] \"KC761634.1\" \"KC761603.1\" \"KC761571.1\" \"KC761539.1\" \"KC761506.1\" #> [1331] \"KC761472.1\" \"KC761440.1\" \"KC761407.1\" \"KC761372.1\" \"KC761340.1\" #> [1336] \"KC761278.1\" \"KC761244.1\" \"KC761211.1\" \"KC761179.1\" \"KC761146.1\" #> [1341] \"KC761112.1\" \"KC761082.1\" \"KC761052.1\" \"KC761018.1\" \"KC760990.1\" #> [1346] \"KC760956.1\" \"KC760893.1\" \"KC760868.1\" \"KC760835.1\" \"KC760804.1\" #> [1351] \"KC760772.1\" \"KC760740.1\" \"KC760714.1\" \"KC760683.1\" \"KC760648.1\" #> [1356] \"KC760613.1\" \"KC760578.1\" \"KC760516.1\" \"KC760485.1\" \"KC760452.1\" #> [1361] \"KC760419.1\" \"KC760387.1\" \"KC760328.1\" \"KC760265.1\" \"KC760230.1\" #> [1366] \"AB762011.1\" \"AB762010.1\" \"AB762009.1\" \"AB762008.1\" \"AB762007.1\" #> [1371] \"AB762006.1\" \"AB762005.1\" \"AB762004.1\" \"AB762003.1\" \"AB762002.1\" #> [1376] \"AB762001.1\" \"AB762000.1\" \"AB761999.1\" \"AB761998.1\" \"AB761997.1\" #> [1381] \"AB761996.1\" \"AB761995.1\" \"AB761994.1\" \"AB761993.1\" \"AB761992.1\" #> [1386] \"AB761991.1\" \"AB761990.1\" \"AB761989.1\" \"AB761988.1\" \"AB761987.1\" #> [1391] \"AB761986.1\" \"KY459145.1\" \"KY459130.1\" \"KY459090.1\" \"KY459079.1\" #> [1396] \"KY459060.1\" \"KY459033.1\" \"KY459012.1\" \"KY458997.1\" \"MF632278.1\" #> [1401] \"MF632277.1\" \"MF632276.1\" \"KR902342.1\" \"LC075899.1\" \"LC075898.1\" #> [1406] \"LC075897.1\" \"LC075896.1\" \"LC075895.1\" \"LC075894.1\" \"LC075893.1\" #> [1411] \"LC075892.1\" \"LC075891.1\" \"LC075890.1\" \"LC075889.1\" \"LC075888.1\" #> [1416] \"LC075887.1\" \"LC075886.1\" \"LC075885.1\" \"AF338376.1\" \"AF338375.1\" #> [1421] \"DQ321670.1\" \"DQ321668.1\" \"DQ321667.1\" \"DQ321663.1\" \"DQ321662.1\" #> [1426] \"DQ098866.1\" \"DQ098865.1\" \"DQ098864.1\" \"DQ098863.1\" \"DQ098854.1\" #> [1431] \"DQ098853.1\" \"DQ098852.1\" \"DQ098851.1\" \"AY429143.1\" \"AY429142.1\" #> [1436] \"JN161068.1\" \"JN161067.1\" \"JN161066.1\" \"JN161065.1\" \"JN161064.1\" #> [1441] \"JN161063.1\" \"JN161062.1\" \"HQ005496.1\" \"HQ005495.1\" \"HQ005494.1\" #> [1446] \"HQ005493.1\" \"HQ005492.1\" \"HQ018924.1\" \"HQ018923.1\" \"AF181085.1\" #> [1451] \"EF658656.1\" \"EF658655.1\" \"EF658654.1\" \"MT483707.1\" \"MT483705.1\" #> [1456] \"MT483704.1\" \"MT483703.1\" \"EU179517.1\" \"EU179516.1\" \"LC456056.1\" #> [1461] \"LC456052.1\" \"LC456048.1\" \"LC456044.1\" \"LC456040.1\" \"LC456036.1\" #> [1466] \"LC456032.1\" \"LC456028.1\" \"LC456024.1\" \"LC456020.1\" \"LC456016.1\" #> [1471] \"LC456012.1\" \"LC456008.1\" \"LC456004.1\" \"LC456000.1\" \"LC455994.1\" #> [1476] \"LC456057.1\" \"LC456053.1\" \"LC456049.1\" \"LC456045.1\" \"LC456041.1\" #> [1481] \"LC456037.1\" \"LC456033.1\" \"LC456029.1\" \"LC456025.1\" \"LC456021.1\" #> [1486] \"LC456017.1\" \"LC456013.1\" \"LC456009.1\" \"LC456005.1\" \"LC456001.1\" #> [1491] \"LC455995.1\" \"LC456054.1\" \"LC456050.1\" \"LC456046.1\" \"LC456042.1\" #> [1496] \"LC456038.1\" \"LC456034.1\" \"LC456030.1\" \"LC456026.1\" \"LC456022.1\" #> [1501] \"LC456018.1\" \"LC456014.1\" \"LC456010.1\" \"LC456006.1\" \"LC456002.1\" #> [1506] \"LC455998.1\" \"LC455996.1\" \"LC456055.1\" \"LC456051.1\" \"LC456047.1\" #> [1511] \"LC456043.1\" \"LC456039.1\" \"LC456035.1\" \"LC456031.1\" \"LC456027.1\" #> [1516] \"LC456023.1\" \"LC456019.1\" \"LC456015.1\" \"LC456011.1\" \"LC456007.1\" #> [1521] \"LC456003.1\" \"LC455999.1\" \"LC455997.1\" \"KY459979.1\" \"KY459959.1\" #> [1526] \"MT488684.1\" \"MT488683.1\" \"MT488682.1\" \"MT488673.1\" \"MT488668.1\" #> [1531] \"MT488667.1\" \"MT488666.1\" \"MT488665.1\" \"MT488664.1\" \"MT488663.1\" #> [1536] \"MT488662.1\" \"MT488661.1\" \"MT488660.1\" \"MT488651.1\" \"MT488647.1\" #> [1541] \"MT488646.1\" \"MT488645.1\" \"MT488598.1\" \"MT488597.1\" \"MT488596.1\" #> [1546] \"MT488595.1\" \"MT488585.1\" \"MT488584.1\" \"MT488583.1\" \"MT488582.1\" #> [1551] \"MT488581.1\" \"MT488580.1\" \"MT488579.1\" \"MT488575.1\" \"MT488561.1\" #> [1556] \"MT488560.1\" \"MT488559.1\" \"MT488557.1\" \"MT488556.1\" \"MT488555.1\" #> [1561] \"MT492195.1\" \"MT492194.1\" \"MT492193.1\" \"MT492192.1\" \"MT492186.1\" #> [1566] \"MT492185.1\" \"MT492184.1\" \"MT492183.1\" \"MT492182.1\" \"MT492181.1\" #> [1571] \"MT492180.1\" \"MT492176.1\" \"MT492163.1\" \"MT492162.1\" \"MT492161.1\" #> [1576] \"MT492160.1\" \"MT492159.1\" \"MT492158.1\" \"MT483795.1\" \"MT483794.1\" #> [1581] \"MT483793.1\" \"MT483792.1\" \"MT483782.1\" \"MT483781.1\" \"MT483780.1\" #> [1586] \"MT483779.1\" \"MT483778.1\" \"MT483776.1\" \"MT483775.1\" \"MT483772.1\" #> [1591] \"MT483768.1\" \"MT483767.1\" \"MT483766.1\" \"MT483764.1\" \"MT483763.1\" #> [1596] \"MT483753.1\" \"MT483746.1\" \"MT483745.1\" \"MT483744.1\" \"MT483743.1\" #> [1601] \"MT483733.1\" \"MT483732.1\" \"MT483731.1\" \"MT483730.1\" \"MT483729.1\" #> [1606] \"MT483728.1\" \"MT483727.1\" \"MT483723.1\" \"MT483709.1\" \"MT483708.1\" #> [1611] \"MT488939.1\" \"MT488938.1\" \"MT488937.1\" \"MT488935.1\" \"MT488934.1\" #> [1616] \"MT488933.1\" \"MT488931.1\" \"MT488930.1\" \"MT488929.1\" \"MT488928.1\" #> [1621] \"MT488919.1\" \"MT488918.1\" \"MT488916.1\" \"MT488915.1\" \"MT488914.1\" #> [1626] \"MT488913.1\" \"MT488909.1\" \"MT488896.1\" \"MT488894.1\" \"MT488892.1\" #> [1631] \"MT488891.1\" \"MT488890.1\" \"MT488888.1\" \"MT488887.1\" \"MT488886.1\" #> [1636] \"MT488885.1\" \"MT488877.1\" \"MT488876.1\" \"MT488875.1\" \"MT488874.1\" #> [1641] \"MT488873.1\" \"MT488872.1\" \"MT488871.1\" \"MT488867.1\" \"MT488853.1\" #> [1646] \"MT488852.1\" \"MT488851.1\" \"MT488849.1\" \"MT488848.1\" \"MT488847.1\" #> [1651] \"MT488845.1\" \"MT488844.1\" \"MT488843.1\" \"MT488842.1\" \"MT488836.1\" #> [1656] \"MT488835.1\" \"MT488834.1\" \"MT488833.1\" \"MT488832.1\" \"MT488830.1\" #> [1661] \"MT488829.1\" \"MT488826.1\" \"MT488822.1\" \"MT488821.1\" \"MT488820.1\" #> [1666] \"MT488819.1\" \"MT488818.1\" \"MT488817.1\" \"MT488806.1\" \"MT488805.1\" #> [1671] \"MT488804.1\" \"MT488803.1\" \"MT488794.1\" \"MT488793.1\" \"MT488792.1\" #> [1676] \"MT488791.1\" \"MT488790.1\" \"MT488789.1\" \"MT488788.1\" \"MT488784.1\" #> [1681] \"MT488770.1\" \"MT488769.1\" \"MT488768.1\" \"MT488766.1\" \"MT488765.1\" #> [1686] \"MT488764.1\" \"MT488762.1\" \"MT488761.1\" \"MT488760.1\" \"MT488759.1\" #> [1691] \"MT488750.1\" \"MT488749.1\" \"MT488748.1\" \"MT488747.1\" \"MT488746.1\" #> [1696] \"MT488745.1\" \"MT488744.1\" \"MT488740.1\" \"MT488726.1\" \"MT488725.1\" #> [1701] \"MT488724.1\" \"MT488722.1\" \"MT488721.1\" \"MT488720.1\" \"MT489146.1\" #> [1706] \"MT489145.1\" \"MT489144.1\" \"MT489143.1\" \"MT489133.1\" \"MT489132.1\" #> [1711] \"MT489131.1\" \"MT489130.1\" \"MT489129.1\" \"MT489128.1\" \"MT489127.1\" #> [1716] \"MT489123.1\" \"MT489109.1\" \"MT489108.1\" \"MT489107.1\" \"MT489105.1\" #> [1721] \"MT489104.1\" \"MT489103.1\" \"MT489101.1\" \"MT489100.1\" \"MT489099.1\" #> [1726] \"MT489098.1\" \"MT489090.1\" \"MT489089.1\" \"MT489088.1\" \"MT489087.1\" #> [1731] \"MT489086.1\" \"MT489085.1\" \"MT489084.1\" \"MT489080.1\" \"MT489067.1\" #> [1736] \"MT489066.1\" \"MT489065.1\" \"MT489063.1\" \"MT489062.1\" \"MT489061.1\" #> [1741] \"MT489059.1\" \"MT489058.1\" \"MT489057.1\" \"MT489056.1\" \"MT489047.1\" #> [1746] \"MT489046.1\" \"MT489045.1\" \"MT489044.1\" \"MT489043.1\" \"MT489042.1\" #> [1751] \"MT489041.1\" \"MT489037.1\" \"MT489024.1\" \"MT489023.1\" \"MT489022.1\" #> [1756] \"MT489020.1\" \"MT489019.1\" \"MT489018.1\" \"MT489016.1\" \"MT489015.1\" #> [1761] \"MT489014.1\" \"MT489013.1\" \"MT489005.1\" \"MT489004.1\" \"MT489003.1\" #> [1766] \"MT489002.1\" \"MT489001.1\" \"MT489000.1\" \"MT488999.1\" \"MT488995.1\" #> [1771] \"MT488982.1\" \"MT488981.1\" \"MT488980.1\" \"MT488978.1\" \"MT488977.1\" #> [1776] \"MT488976.1\" \"MT488974.1\" \"MT488973.1\" \"MT488972.1\" \"MT488971.1\" #> [1781] \"MT488962.1\" \"MT488961.1\" \"MT488960.1\" \"MT488959.1\" \"MT488958.1\" #> [1786] \"MT488957.1\" \"MT488956.1\" \"MT488952.1\" \"HM761930.1\" \"HM762097.1\" #> [1791] \"HM762245.1\" \"HM762432.1\" \"HM762516.1\" \"HM762770.1\" \"HM762862.1\" #> [1796] \"HM763022.1\" \"HM763266.1\" \"HM763434.1\" \"HM763727.1\" \"HM763997.1\" #> [1801] \"HM764105.1\" \"HM764322.1\" \"HM764401.1\" \"HM764649.1\" \"HM764817.1\" #> [1806] \"HM764908.1\" \"HM765180.1\" \"U38998.1\"   \"AY684995.1\" \"AY684994.1\" #> [1811] \"AY684993.1\" \"AY684992.1\" \"AY684991.1\" \"AY646200.1\" \"AY646198.1\" #> [1816] \"DM461196.1\" \"DM461195.1\" \"DM461194.1\" \"DM461193.1\" \"DM461192.1\" #> [1821] \"DM461191.1\" \"DM367551.1\" \"DM367548.1\" \"DM367545.1\" \"DM367544.1\" #> [1826] \"DM367543.1\" \"DM367542.1\" \"DM367541.1\" \"DM367540.1\" \"DM371283.1\" #> [1831] \"DM371280.1\" \"DM371276.1\" \"DM371275.1\" \"DM371274.1\" \"DM371273.1\" #> [1836] \"DM371272.1\" \"DM371271.1\" \"DQ334827.1\" \"HW478258.1\" \"HW478257.1\" #> [1841] \"HW478256.1\" \"HW478255.1\" \"DI178960.1\" \"DI178959.1\" \"DI178958.1\" #> [1846] \"DI178957.1\" \"DI178956.1\" \"DI178955.1\" \"DI178127.1\" \"DI178124.1\" #> [1851] \"DI178120.1\" \"DI178119.1\" \"DI178118.1\" \"DI178117.1\" \"DI178116.1\" #> [1856] \"DI178115.1\" \"AB239248.1\" \"AB239247.1\" \"AB239246.1\" \"AB239228.1\" #> [1861] \"AB239227.1\" \"AB239226.1\" \"AB239203.1\" \"AB239202.1\" \"AB239201.1\" #> [1866] \"AB239200.1\" \"U59646.1\"   \"U59645.1\"   \"U59644.1\"   \"AF161947.1\" #> [1871] \"AF161946.1\" \"HM756841.1\" \"HM757384.1\" \"HM757559.1\" \"HM757725.1\" #> [1876] \"HM758217.1\" \"HM758302.1\" \"HM758466.1\" \"HM758655.1\" \"HM758935.1\" #> [1881] \"HM759106.1\" \"HM759279.1\" \"HM759377.1\" \"HM759647.1\" \"HM759819.1\" #> [1886] \"HM759901.1\" \"HM760085.1\" \"HM760261.1\" \"HM760530.1\" \"HM760613.1\" #> [1891] \"HM760776.1\" \"HM761014.1\" \"HM761146.1\" \"HM761196.1\" \"HM761512.1\" #> [1896] \"HM761773.1\" \"MT489142.1\" \"MT489097.1\" \"MT489055.1\" \"MT489012.1\" #> [1901] \"MT488970.1\" \"MT488927.1\" \"MT488884.1\" \"MT488841.1\" \"MT488802.1\" #> [1906] \"MT488758.1\" \"MT488674.1\" \"MT488594.1\" \"MT492191.1\" \"MT483742.1\" #> [1911] \"KY508415.1\" \"KY508414.1\" \"KY508413.1\" \"KY508412.1\" \"KY508411.1\" #> [1916] \"KY508410.1\" \"KY508409.1\" \"KY508408.1\" \"KY508407.1\" \"KY508406.1\" #> [1921] \"KY508405.1\" \"KY508404.1\" \"FJ154795.1\" \"FJ154794.1\" \"FJ154793.1\" #> [1926] \"DQ098874.1\" \"DQ098873.1\" \"DQ098862.1\" \"DQ098861.1\" \"AY894656.1\" #> [1931] \"AY894655.1\" \"AY894654.1\" \"AY894653.1\" \"AY894652.1\" \"AY894651.1\" #> [1936] \"AY894650.1\" \"AY894649.1\" \"AY894648.1\" \"AY894647.1\" \"HQ005499.1\" #> [1941] \"HQ018926.1\" \"HM102288.1\" \"AF004921.1\" \"HW478260.1\" \"HW478259.1\" seqarc@nncltds # number of nucleotides of all sequences   #>    [1] 1233  653  256  269  269  270  269  269  269  270  269  269  270  271 #>   [15]  277  271  277  269  266  271  266  269  549 1666 1138 1138 1138 1138 #>   [29] 1138 1138 1138 1138  795  774  774  764  809  798  764  775  647  649 #>   [43]  649  649  652  649  652  651  599  587  597  600  585  585  585  585 #>   [57]  581  580  581  581  581  580  583  583  286  276  273  286  273  286 #>   [71]  286  273  272  272  272  272  272  272  272  272  667  650  666  667 #>   [85]  666  651  667  667  707  709  710  712  707  711  711  710  339  339 #>   [99]  339  339  339  339  339  339 1140 1140 1140 1140 1140 1140 1140  842 #>  [113]  842  842  842 1059 1059  495 1374  549  549  267  267  267  267  267 #>  [127]  267  267  267  267  255  255  255  255 1083 1062 1041 1074 1074 1083 #>  [141]  746  746  446  428  329  343 1140 1140  829  534  534  534  534  534 #>  [155]  534  534  534  534  534  534  641  679  566  577  669  625  335  772 #>  [169]  521  661  667  656  643  645  425  749  451  493 1036  462  615  475 #>  [183]  677  257  704  663  470  410  363 1140 1138 1138 1138 1138 1138 1138 #>  [197]  777  783  778  815  652  648  651  617  612  596  583  566  566  582 #>  [211]  583  588  591  584  273  276  282  276  273  272  285  285  285  681 #>  [225]  681  665  660  716  715  717  339  339  339  339  339 1140 1140 1140 #>  [239] 1140 1140 1140  842  842  842  842  842  842  647  647  618  618  618 #>  [253]  618  618  618  684  684  684  684  684  684 1374 1059 1059 1059 1059 #>  [267] 1140 1138 1138 1138 1138  794  810  817  815  650  647  636  652  584 #>  [281]  596  596  565  581  584  589  596  273  276  273  272  285  285  285 #>  [295]  681  681  617  661  709  708  714  339  339  339  339 1025 1025  842 #>  [309]  842  842  842  647  647  569  617  618  617  618  549  267  267  267 #>  [323]  267  267  267  267  267  255  255  255  255  255  255  255  255  255 #>  [337]  255  255  255  255  255  255  255  255  255  255  255  255  255 1074 #>  [351] 1074 1071  746  746  746  268  268  446  428  296  815  885  814  849 #>  [365]  936  821  844  856  838  868  817  878  847  815  823  773  733  753 #>  [379]  856  820  851  581  564  374  568  437  648  585  662  639  634  637 #>  [393]  369  643  547  542  633  539  633  542  538  773  858  858  825  388 #>  [407]  719  373  718  729  717  707  722  666  716  619  520  425  439  754 #>  [421]  652  737  391  464  471  355  414  352  549  343  522  382  345  526 #>  [435]  572  391  420  494  573  434  550  432  357  355  558  475  475  445 #>  [449]  558  467  570  608  586  720  565  294  527  836  584  588  582  572 #>  [463]  578  492  563  344  598  594  476  545  595  552  590  582  586  548 #>  [477]  541  714  494  320  510  341  470  507  495  894  843  896  886  885 #>  [491]  894  875  859  883  875  630  654  633  628  634  623  635  634  634 #>  [505]  652  633  617  652  622  756  812  762  779  789  802  767  774  575 #>  [519]  769  817  757  758  777  786  548  545  544  564  545  543  542  527 #>  [533]  544  542  546  541  539  540  497  538  558  521  539  584  746  600 #>  [547]  600  560  562  769  581  556  429  887  684  865  873  856  870 1138 #>  [561]  800  649  593  583  273  285  681  718  339 1140  842  647  618  851 #>  [575]  851  851  768  768  768 1086 1086 1086 1086 1086  447  428  296  343 #>  [589]  549 1140  829  602  749  565  575  779  664  617  642  781  523  674 #>  [603]  679  701  950  837  717  426  750  464  934  903  592  461  614  547 #>  [617]  644  397  729  462  621  663  433  445  301  449  583  475  500  453 #>  [631]  644  488  314  893  691  531  592  484  642  554  553  420  470  476 #>  [645]  318  642  770  523  659  679  652  701  596  714  425  604  463  561 #>  [659]  614  595  266  511  451  671  611  464  663  473  446  362  313  571 #>  [673]  475  527  461  683  518  284  683  663  523  533  481  641  554  557 #>  [687]  420  439  473  299  284  287  268  268  268  646  555  612  475  909 #>  [701]  340  635  590  651  386 1077  715  538  330  353  580  585  538  557 #>  [715]  663  703  760  802  617  487  479  700  732  761  960  522  613  623 #>  [729]  431 1000  403 1245  771  998  951  530  674  300  315  300  299  300 #>  [743]  300  300  318  311  320  326  323  317  326  329  320  329  323  319 #>  [757]  446  428  329  343  549  549  549  549  549  549 1140 1140 1140  534 #>  [771]  534  534  534  534  534  534  534  281  293  287  291  293  277  290 #>  [785]  334  290  285  297  284  296  296  287  287  284  281  284  284  282 #>  [799]  359  307  307  537  748  722  575  662  616  309  309  364  364  364 #>  [813]  345  307  310  270  270  746  746  397  397  397  394  391  397  394 #>  [827]  394  394  397  394  394  394  394  394  394  394  394  394  394  279 #>  [841]  303  295  295  367  358  352  358  367  361  364  364  364  364  375 #>  [855]  375  375  381  381  381  381  381  378  378  378  375  378  381  375 #>  [869]  378  384  388  268  268  268  268  268  268  268  268  268  268  268 #>  [883]  268  268  268  268  268  268  268  268  268  268  268  268  268  268 #>  [897]  268  268  268  268  268  268  314  300  255  255  255  255  255  255 #>  [911]  255  255  255  255  255  255  255  255  255  255  255  255  255  255 #>  [925]  255  255  614  294  315  315  444  269  290  285  274  275  304  304 #>  [939]  294  290  431  289  271  267  299  277  280  265  297  291  291  291 #>  [953]  294  291  289  287  284  366  525  444 1082 1074 1074 1041 1074 1074 #>  [967] 1074 1074 1068 1074 1074 1074 1074 1074 1074 1071 1071 1074  370  421 #>  [981]  418  404  407  398  386  407  404  407  617  618  618  616  617  264 #>  [995]  261  264  684  684  684  684  684 1059 1374  549  549  267  267  267 #> [1009]  267  267  267  267  267  267  267  267  267  267  267  267  255  255 #> [1023]  255  255  255  255  255  255  255  255  255  255  255  255  255  255 #> [1037]  255  255  255  255  255  255  255  255  255  255  255  255  255  255 #> [1051]  255 1666 1669 1138 1138 1102 1138 1138 1138 1138  798  816  813  770 #> [1065]  766  780  647  614  649  647  650  650  583  599  571  585  600  584 #> [1079]  581  583  583  580  580  582  273  286  250  276  286  276  272  272 #> [1093]  272  272  285  272  272  680  675  681  681  665  681  709  715  710 #> [1107]  716  712  651  715  339  339  339  339  339  339  339 1140 1025 1025 #> [1121] 1140 1140 1025  842  842  842  842  842  842  842  647  647  647  647 #> [1135]  647  646  618  618  586  559  612  629  403  983  993 1000  343  364 #> [1149]  408 1248 1246 1245  779  991  986  998  735  930  951  530  611  613 #> [1163]  561  578  486  486  495  329  311  413 1619  664  667  685  685  685 #> [1177]  666  667  667  667  532  532  549  851  837  837  604  600  612  341 #> [1191]  427  475  900  871  811  430  338  342  342  634  637  647  588  588 #> [1205]  603  679  679  680  680  709  705  706  507 1075 1077 1077  695  681 #> [1219]  698  715  611  605  611  277  267  318  301  355  355  631  634  578 #> [1233]  482  490  602  534  538  540  530  533  557  654  662  645  765  801 #> [1247]  606  606  631  547  558  573  406  424  475  738  695  695  704  707 #> [1261]  707  761  731  731  926  957  905  474  522 1140 1140  498  498  685 #> [1275]  685  685  568 1088 1088 1085 1088 1087 1086 1087 1089 1089 1088 1088 #> [1289] 1087 1088 1087 1088 1087 1088 1086 1087 1085 1085 1086 1087 1089 1089 #> [1303] 1089 1088 1088 1088 1088  629  629  346  600  748  720  563  574  601 #> [1317]  585  642  780  520  659  667  680  905  827  700  425  740  463  759 #> [1331] 1038  594  458  616  538  467  680  386  655  464  621  663  474  445 #> [1345]  362  449  516  453  527  465  668  536  314  630  677  533  563  482 #> [1359]  640  555  557  420  464  475  296  838  839  838  837  837  839  840 #> [1373]  841  774  527  582  673  715  678  737  843  842  843  741  582  771 #> [1387]  785  701  794  800  400  592  479  678  603  535  658  756  579 1059 #> [1401] 1059 1059 1374  996  546  980  986  990 1018  784 1021 1038  931  996 #> [1415] 1001  980  942  898  829  829  549  549  549  549  549 1140 1140 1140 #> [1429] 1140  498  498  498  498  252  252  549  549  549  549  549  549  549 #> [1443] 1140 1140 1140 1140 1140  829  829  696  629  629  629  619  620  618 #> [1457]  619  649  651  842 1044  941  923  926  882  925  907  997  781  497 #> [1471]  615  727  738  962  929  937  693  762  925  526  900  929  912  968 #> [1485]  724  948  517  992  758  566  796  986  978  929  851  582  813  816 #> [1499]  528  646  942  819  714  573  686  875  685  956  807  961  769  940 #> [1513]  872  924  833  857  694  842  899  740  763  893  347  582  711 1140 #> [1527] 1140 1140 1025 1140 1140 1140 1140 1140 1025 1140 1025 1025 1025 1025 #> [1541] 1025 1025  842  842  842  842  842  842  842  842  842  842  842  842 #> [1555]  842  842  842  842  842  842  647  647  647  647  647  647  647  647 #> [1569]  647  644  647  647  647  647  647  647  647  647  906  905  905  906 #> [1583]  906  906  906  906  905  905  905  905  906  906  906  905  905  905 #> [1597]  618  618  618  618  618  618  618  618  618  618  618  618  619  619 #> [1611]  584  584  572  583  584  579  273  273  273  286  286  276  273  286 #> [1625]  276  276  273  273  273  273  273  273  272  272  285  272  272  272 #> [1639]  285  285  285  285  272  272  285  285  285  272  272  272  681  681 #> [1653]  681  659  677  651  680  676  680  681  681  681  681  673  678  680 #> [1667]  681  681  713  713  713  709  711  711  709  711  709  709  714  709 #> [1681]  711  711  711  710  710  710  339  339  339  339  339  339  339  339 #> [1695]  339  339  339  339  339  339  339  339  339  339 1138 1138 1138 1138 #> [1709] 1138 1138 1138 1138 1138 1138 1138 1138 1138 1138 1138 1138 1138 1138 #> [1723]  799  790  797  791  813  805  810  810  812  812  811  781  811  813 #> [1737]  811  765  765  765  650  650  650  652  647  650  647  649  649  651 #> [1751]  651  649  649  649  649  645  645  645  584  584  584  584  583  597 #> [1765]  584  583  584  584  584  599  593  597  584  584  584  584  581  581 #> [1779]  582  582  586  584  582  584  596  584  582  582  729  732  761  985 #> [1793]  521  614  624  431 1000  395  856  778  998  951  530  676  575  495 #> [1807]  411  525  954 1425 1389 1960 1859  737 1811  267  267  267  267  267 #> [1821]  267  324  324  267  267  267  267  267  267  324  324  267  267  267 #> [1835]  267  267  267 1028  267  267  267  267  267  267  267  267  267  267 #> [1849]  324  324  267  267  267  267  267  267  616  617  616  614  613  614 #> [1863]  587  587  586  587 1071 1071 1074 1019 1019  559  612  475  898  342 #> [1877]  645  605  684  500 1077  715  613  328  355  578  606  537  554  658 #> [1891]  689  764  802  621  565  476 1138  814  649  583  581  273  285  682 #> [1905]  709  339 1140  842  542  619  402  419  333  416  412  410  411  362 #> [1919]  414  414  411  416  890  888  890 1140 1140  498  498 1170 1170 1171 #> [1933] 1171 1171 1169 1170 1169 1170 1170 1140  829  639  433  267  267 seqarc@nambgs  # number of ambiguous nucleotides of all sequences #>    [1]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>   [25]  0  0  0  0  0  0  0  0  0  0  0  2  1  0  0  1  0  1  1  1  2  1  0  2 #>   [49]  1  1  0  0  1  0  1  1  1  1  0  1  2  2  2  2  0  0  1  0  0  0  0  0 #>   [73]  0  1  0  1  1  0  0  1  0  0  0  0  0  0  4  0  0  0  0  0  0  0  0  0 #>   [97]  3  2  3  2  2  2  2  2  0  0  4  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [121]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [145]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  0  0  0 #>  [169]  0  2  0  0  1  0  3  0  1  4  0  0  2  0  0  0  1  0  1  0  0  0  0  0 #>  [193]  0  0  0  0  1 18 10  1  5  0  2  1  1  0  8  2  1  0  0 10 10  7  0  0 #>  [217]  1  0  0  1  1  1  1  0  0  0  1  0  0  0  3  5  7  0  8  0  0  0  0  0 #>  [241]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [265]  0  0  0  0  0  1  0  2  5  1  3  0  5  0  0  2 13  5  8  1  0  0  5  0 #>  [289]  3  1  1  0  0  1  0  1  2  0  0  0  0  0  2  3  0  0  0  0  0  0  0  0 #>  [313]  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [337]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [361]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  7  2  3 #>  [385]  3  9  3 12  6  9  6  4  4  9  3  4  9  1  5  5  1  0  0  1  0 14  4  7 #>  [409]  5  4  9 14  1  6  6  2  8  9 20 24 25 18 21 11  9 22 11 10 14 10 17  4 #>  [433]  6 14  2 31 13 19 12  9  6 15 20  1 10 15  1 10 10 14  2  6  2  5  4  2 #>  [457]  5 12  3  3  2 11  4  1 13 12  4  2 14 12  8  6  7  1  2  6  8 20  7  3 #>  [481] 14 13  4  6  3  5  1  1  3  2  2  3  3  4  2  2  1  1  0  1  2  2  1  2 #>  [505]  1  0  1  0  1  4  6  6  7  5  5  2  4 13  1  8  5  2  6  4 10  7  3  2 #>  [529]  0  0  0  7  0  6  3  0  2  0  4  0  0  3  2  2  3  0  0  4  4  1  2  0 #>  [553]  4 28 44  3  2  2  5  0  2  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0 #>  [577]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  1  7  2  0  1  2  0 #>  [601]  0  1  0  0 10  0  0  0  5  0  0  0  1  0  0  0  0  0  1  0  0  1  0  0 #>  [625]  0  0  0  0  1  0  0  0  0  0  0  3  0  0  0  0  0  0  0  0  0  0  0  0 #>  [649]  0  0  2  2  1  0  0  0  1  1  0  0  0  0  0  1  0  2  4  0  1  1  0  2 #>  [673]  0  0  1  0  1  0  0  0  1  1  1  0  0  1  0  0  0  0  0  0  0  0  0  1 #>  [697]  0  0  0  4  0  1  0  0  0  0  0  1  0  0  0  2  0  0  0  0  1  1  2  0 #>  [721]  2  1  4  3  0  1  0  1  1  0  0  1  0  4  1  0  2  0  0  0  0  0  0  0 #>  [745]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [769]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [793]  2  0  1  0  0  0  0  0  0  0  0  1  2  1  2  0  0  0  0  0  0  0  0  0 #>  [817]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [841]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [865]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [889]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [913]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [937]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [961]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  [985]  0  0  0  0  3  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1009]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1033]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  5 #> [1057]  0  0  0  0  1  0  4  6  8  6  4  0  0  0  3  5  7  5  1  4  0  0  4  0 #> [1081]  1  3  1  3  2  0  0  0  1  0  1  1  1  0  0  1  0  0  0  0  0  0  0  0 #> [1105]  0  0  0  0  0  1  4  0  3  4  1  2  1  0  0  0  0  0  0  0  0  0  0  0 #> [1129]  0  0  0  0  0  0  0  1  0  0  0  0  0  1  0  0  0  3  0  0  1  0  0  1 #> [1153]  0  0  0  2  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  7  0  1  0 #> [1177]  3  4  7  0  0  0  0  0  0  0  1  0  0  0  0  2  0  0  0  0  0  0  0  0 #> [1201]  1  0  0  0  0  0  0  0  0  0  0  0  2  0  0  0  1  0  0  1  0  0  0  1 #> [1225]  0  0  2  0  0  1  1  0  0  0  0  0  0  0  0  0  1  0  0  1  0  1  0  0 #> [1249]  0  0  0  0  0  0  0  0  0  2  0  0  0  0  1  0  0  0  0  0  0  2  1  0 #> [1273]  0  0  2  1  1  0  0  3  0  0  0  0  0  2  0  3  0  0  0  0  2  0  0  0 #> [1297]  2  0  0  0  1  0  0  0  2 12  0  1  1  0  2  0  0  0  0  1  2  1  0  0 #> [1321]  1  0  1  8  2  0  0  3  0  1  0  0  0  0  0  0  1  1  0  0  0  0  0  0 #> [1345]  0  0  0  0  0  1  0  0  0  0  1  1  2  0  0  1  0  0  0  1  0  0  0  0 #> [1369]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1 #> [1393]  0  0  2  2  0  0  3  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1417]  0  0  0  0  0  0  0  0  0  0  0  2  1  0  0  0  0  0  0  0  0  0  0  0 #> [1441]  0  0  0  0  0  0  0  0  0 14  1  1  1  0  1  0  0  0  0  0  0  0  0  0 #> [1465]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1489]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1513]  0  0  0  0  0  0  0  0  0  0  0  4  0  0  0  0  0  0  0  0  0  0  0  0 #> [1537]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0 #> [1561]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1585]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1609]  0  0  1  0  1  0  2  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1633]  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  1  0  0  0  0  0  0  0  0 #> [1657]  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1681]  0  0  0  1  0  0  0  1  1  0  0  0  1  0  0  0  0  0  0  0  0  1  0  1 #> [1705]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1 #> [1729]  2  1  1  5  1  4  0  0  0  0  2  4  1  0  0  0  0  0  2  0  0  0  1  0 #> [1753]  0  0  2  2  2  1  0  1  0  2  0  0  0  0  0  1  0  1  1  0  0  1  0  1 #> [1777]  0  0  1  3  0  0  1  0  0  0  2  0  1  0  0  0  0  0  0  0  0  0  0  0 #> [1801]  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1825]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1849]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1873]  1  2  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  1  0  0 #> [1897]  0  0  0  0  8  0  2  0  1  0  0  0  2  0  0  0  0  0  0  2  0  3  1  0 #> [1921]  1  2  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [1945]  0 seqarc@txids   # all the taxonomic IDs for all sequences #>    [1] \"231953\"  \"1002694\" \"231953\"  \"231953\"  \"231953\"  \"231953\"  \"231953\"  #>    [8] \"231953\"  \"231953\"  \"231953\"  \"231953\"  \"231953\"  \"231953\"  \"231953\"  #>   [15] \"231953\"  \"231953\"  \"231953\"  \"231953\"  \"231953\"  \"231953\"  \"231953\"  #>   [22] \"231953\"  \"361674\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [29] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [36] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [43] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [50] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [57] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [64] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [71] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [78] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [85] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [92] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>   [99] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>  [106] \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  \"292213\"  #>  [113] \"292213\"  \"292213\"  \"292213\"  \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [120] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [127] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [134] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [141] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [148] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [155] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [162] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [169] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [176] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [183] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [190] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [197] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [204] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [211] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [218] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [225] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [232] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [239] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [246] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [253] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [260] \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   \"57176\"   #>  [267] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [274] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [281] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [288] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [295] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [302] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [309] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [316] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [323] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [330] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [337] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [344] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [351] \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   \"57175\"   #>  [358] \"57175\"   \"57175\"   \"57175\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [365] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [372] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [379] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [386] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [393] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [400] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [407] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [414] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [421] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [428] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [435] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [442] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [449] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [456] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [463] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [470] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [477] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [484] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [491] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [498] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [505] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [512] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [519] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [526] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [533] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [540] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [547] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [554] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [561] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [568] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [575] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [582] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [589] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [596] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [603] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [610] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [617] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [624] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [631] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [638] \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   \"43147\"   #>  [645] \"43147\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [652] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [659] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [666] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [673] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [680] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [687] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [694] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [701] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [708] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [715] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [722] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [729] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [736] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [743] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [750] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [757] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [764] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [771] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [778] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [785] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [792] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [799] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [806] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [813] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [820] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [827] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [834] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [841] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [848] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [855] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [862] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [869] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [876] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [883] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [890] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [897] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [904] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [911] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [918] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [925] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [932] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [939] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [946] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [953] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [960] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [967] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [974] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [981] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [988] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #>  [995] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1002] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1009] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1016] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1023] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1030] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1037] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1044] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1051] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1058] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1065] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1072] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1079] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1086] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1093] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1100] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1107] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1114] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1121] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1128] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"37293\"   #> [1135] \"37293\"   \"37293\"   \"37293\"   \"37293\"   \"280755\"  \"867331\"  \"30591\"   #> [1142] \"30591\"   \"280755\"  \"867331\"  \"280755\"  \"30591\"   \"867331\"  \"280755\"  #> [1149] \"30591\"   \"867331\"  \"280755\"  \"30591\"   \"30591\"   \"867331\"  \"280755\"  #> [1156] \"30591\"   \"867331\"  \"280755\"  \"30591\"   \"30591\"   \"867331\"  \"30591\"   #> [1163] \"280755\"  \"30591\"   \"867331\"  \"280755\"  \"30591\"   \"867331\"  \"280755\"  #> [1170] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1177] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"867331\"  \"280755\"  \"30591\"   #> [1184] \"867331\"  \"280755\"  \"30591\"   \"280755\"  \"867331\"  \"30591\"   \"280755\"  #> [1191] \"867331\"  \"30591\"   \"867331\"  \"280755\"  \"30591\"   \"30591\"   \"867331\"  #> [1198] \"280755\"  \"30591\"   \"867331\"  \"280755\"  \"30591\"   \"867331\"  \"280755\"  #> [1205] \"30591\"   \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"30591\"   \"867331\"  #> [1212] \"280755\"  \"30591\"   \"280755\"  \"30591\"   \"867331\"  \"867331\"  \"280755\"  #> [1219] \"867331\"  \"30591\"   \"867331\"  \"280755\"  \"30591\"   \"867331\"  \"280755\"  #> [1226] \"30591\"   \"30591\"   \"280755\"  \"867331\"  \"867331\"  \"280755\"  \"30591\"   #> [1233] \"867331\"  \"280755\"  \"30591\"   \"867331\"  \"280755\"  \"30591\"   \"280755\"  #> [1240] \"867331\"  \"30591\"   \"280755\"  \"30591\"   \"867331\"  \"30591\"   \"30591\"   #> [1247] \"867331\"  \"280755\"  \"30591\"   \"867331\"  \"280755\"  \"30591\"   \"867331\"  #> [1254] \"280755\"  \"30591\"   \"867331\"  \"280755\"  \"30591\"   \"867331\"  \"280755\"  #> [1261] \"30591\"   \"30591\"   \"867331\"  \"280755\"  \"867331\"  \"280755\"  \"30591\"   #> [1268] \"867331\"  \"30591\"   \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"30591\"   #> [1275] \"30591\"   \"30591\"   \"30591\"   \"120088\"  \"120088\"  \"120088\"  \"120088\"  #> [1282] \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  #> [1289] \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  #> [1296] \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  #> [1303] \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"30591\"   \"30591\"   #> [1310] \"867331\"  \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1317] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1324] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1331] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1338] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1345] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1352] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1359] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1366] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1373] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1380] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1387] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1394] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1401] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1408] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1415] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"867331\"  \"30591\"   \"120088\"  #> [1422] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"30591\"   \"30591\"   \"30591\"   #> [1429] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1436] \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  \"120088\"  #> [1443] \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"867331\"  \"280755\"  #> [1450] \"120088\"  \"30591\"   \"30591\"   \"30591\"   \"867331\"  \"280755\"  \"280755\"  #> [1457] \"280755\"  \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1464] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1471] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1478] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1485] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1492] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1499] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1506] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1513] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   #> [1520] \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"30591\"   \"867331\"  #> [1527] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  #> [1534] \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"280755\"  \"280755\"  #> [1541] \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  #> [1548] \"867331\"  \"280755\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  #> [1555] \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  #> [1562] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"867331\"  #> [1569] \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"867331\"  #> [1576] \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  #> [1583] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  #> [1590] \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  #> [1597] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  #> [1604] \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  #> [1611] \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  #> [1618] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  #> [1625] \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  #> [1632] \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  #> [1639] \"280755\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  #> [1646] \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  #> [1653] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  #> [1660] \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  #> [1667] \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  #> [1674] \"867331\"  \"280755\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  #> [1681] \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  #> [1688] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"867331\"  #> [1695] \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"867331\"  #> [1702] \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  #> [1709] \"867331\"  \"867331\"  \"280755\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  #> [1716] \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  #> [1723] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  #> [1730] \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  #> [1737] \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"867331\"  #> [1744] \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"867331\"  \"867331\"  \"280755\"  #> [1751] \"280755\"  \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  #> [1758] \"280755\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"867331\"  #> [1765] \"280755\"  \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  #> [1772] \"867331\"  \"867331\"  \"280755\"  \"280755\"  \"280755\"  \"867331\"  \"867331\"  #> [1779] \"867331\"  \"867331\"  \"867331\"  \"867331\"  \"280755\"  \"867331\"  \"867331\"  #> [1786] \"280755\"  \"280755\"  \"280755\"  \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1793] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1800] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1807] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1814] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1821] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1828] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1835] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1842] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1849] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1856] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1863] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1870] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1877] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1884] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1891] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1898] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1905] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1912] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1919] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1926] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1933] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    #> [1940] \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    \"9505\"    seqarc@sqs     # list of all SeqRecs #> [[1]] #> SeqRec [ID: KR528418.1] #> [[2]] #> SeqRec [ID: JF444279.1] #> [[3]] #> SeqRec [ID: AY227074.1] #> [[4]] #> SeqRec [ID: AY227073.1] #> [[5]] #> SeqRec [ID: AY227072.1] #> [[6]] #> SeqRec [ID: AY227071.1] #> [[7]] #> SeqRec [ID: AY227070.1] #> [[8]] #> SeqRec [ID: AY227069.1] #> [[9]] #> SeqRec [ID: AY227068.1] #> [[10]] #> SeqRec [ID: AY227067.1] #> [[11]] #> SeqRec [ID: AY227066.1] #> [[12]] #> SeqRec [ID: AY227065.1] #> [[13]] #> SeqRec [ID: AY227064.1] #> [[14]] #> SeqRec [ID: AY227063.1] #> [[15]] #> SeqRec [ID: AY227062.1] #> [[16]] #> SeqRec [ID: AY227061.1] #> [[17]] #> SeqRec [ID: AY227060.1] #> [[18]] #> SeqRec [ID: AY227059.1] #> [[19]] #> SeqRec [ID: AY227058.1] #> [[20]] #> SeqRec [ID: AY227057.1] #> [[21]] #> SeqRec [ID: AY227056.1] #> [[22]] #> SeqRec [ID: AY227055.1] #> [[23]] #> SeqRec [ID: DQ321669.1] #> [[24]] #> SeqRec [ID: MW327030.1] #> [[25]] #> SeqRec [ID: MT489117.1] #> [[26]] #> SeqRec [ID: MT489116.1] #> [[27]] #> SeqRec [ID: MT489115.1] #> [[28]] #> SeqRec [ID: MT489114.1] #> [[29]] #> SeqRec [ID: MT489113.1] #> [[30]] #> SeqRec [ID: MT489112.1] #> [[31]] #> SeqRec [ID: MT489111.1] #> [[32]] #> SeqRec [ID: MT489110.1] #> [[33]] #> SeqRec [ID: MT489075.1] #> [[34]] #> SeqRec [ID: MT489074.1] #> [[35]] #> SeqRec [ID: MT489073.1] #> [[36]] #> SeqRec [ID: MT489072.1] #> [[37]] #> SeqRec [ID: MT489071.1] #> [[38]] #> SeqRec [ID: MT489070.1] #> [[39]] #> SeqRec [ID: MT489069.1] #> [[40]] #> SeqRec [ID: MT489068.1] #> [[41]] #> SeqRec [ID: MT489032.1] #> [[42]] #> SeqRec [ID: MT489031.1] #> [[43]] #> SeqRec [ID: MT489030.1] #> [[44]] #> SeqRec [ID: MT489029.1] #> [[45]] #> SeqRec [ID: MT489028.1] #> [[46]] #> SeqRec [ID: MT489027.1] #> [[47]] #> SeqRec [ID: MT489026.1] #> [[48]] #> SeqRec [ID: MT489025.1] #> [[49]] #> SeqRec [ID: MT488990.1] #> [[50]] #> SeqRec [ID: MT488989.1] #> [[51]] #> SeqRec [ID: MT488988.1] #> [[52]] #> SeqRec [ID: MT488987.1] #> [[53]] #> SeqRec [ID: MT488986.1] #> [[54]] #> SeqRec [ID: MT488985.1] #> [[55]] #> SeqRec [ID: MT488984.1] #> [[56]] #> SeqRec [ID: MT488983.1] #> [[57]] #> SeqRec [ID: MT488947.1] #> [[58]] #> SeqRec [ID: MT488946.1] #> [[59]] #> SeqRec [ID: MT488945.1] #> [[60]] #> SeqRec [ID: MT488944.1] #> [[61]] #> SeqRec [ID: MT488943.1] #> [[62]] #> SeqRec [ID: MT488942.1] #> [[63]] #> SeqRec [ID: MT488941.1] #> [[64]] #> SeqRec [ID: MT488940.1] #> [[65]] #> SeqRec [ID: MT488904.1] #> [[66]] #> SeqRec [ID: MT488903.1] #> [[67]] #> SeqRec [ID: MT488902.1] #> [[68]] #> SeqRec [ID: MT488901.1] #> [[69]] #> SeqRec [ID: MT488900.1] #> [[70]] #> SeqRec [ID: MT488899.1] #> [[71]] #> SeqRec [ID: MT488898.1] #> [[72]] #> SeqRec [ID: MT488897.1] #> [[73]] #> SeqRec [ID: MT488861.1] #> [[74]] #> SeqRec [ID: MT488860.1] #> [[75]] #> SeqRec [ID: MT488859.1] #> [[76]] #> SeqRec [ID: MT488858.1] #> [[77]] #> SeqRec [ID: MT488857.1] #> [[78]] #> SeqRec [ID: MT488856.1] #> [[79]] #> SeqRec [ID: MT488855.1] #> [[80]] #> SeqRec [ID: MT488854.1] #> [[81]] #> SeqRec [ID: MT488815.1] #> [[82]] #> SeqRec [ID: MT488814.1] #> [[83]] #> SeqRec [ID: MT488813.1] #> [[84]] #> SeqRec [ID: MT488812.1] #> [[85]] #> SeqRec [ID: MT488811.1] #> [[86]] #> SeqRec [ID: MT488810.1] #> [[87]] #> SeqRec [ID: MT488809.1] #> [[88]] #> SeqRec [ID: MT488808.1] #> [[89]] #> SeqRec [ID: MT488778.1] #> [[90]] #> SeqRec [ID: MT488777.1] #> [[91]] #> SeqRec [ID: MT488776.1] #> [[92]] #> SeqRec [ID: MT488775.1] #> [[93]] #> SeqRec [ID: MT488774.1] #> [[94]] #> SeqRec [ID: MT488773.1] #> [[95]] #> SeqRec [ID: MT488772.1] #> [[96]] #> SeqRec [ID: MT488771.1] #> [[97]] #> SeqRec [ID: MT488734.1] #> [[98]] #> SeqRec [ID: MT488733.1] #> [[99]] #> SeqRec [ID: MT488732.1] #> [[100]] #> SeqRec [ID: MT488731.1] #> [[101]] #> SeqRec [ID: MT488730.1] #> [[102]] #> SeqRec [ID: MT488729.1] #> [[103]] #> SeqRec [ID: MT488728.1] #> [[104]] #> SeqRec [ID: MT488727.1] #> [[105]] #> SeqRec [ID: MT488672.1] #> [[106]] #> SeqRec [ID: MT488671.1] #> [[107]] #> SeqRec [ID: MT488670.1] #> [[108]] #> SeqRec [ID: MT488669.1] #> [[109]] #> SeqRec [ID: MT488659.1] #> [[110]] #> SeqRec [ID: MT488658.1] #> [[111]] #> SeqRec [ID: MT488657.1] #> [[112]] #> SeqRec [ID: MT488569.1] #> [[113]] #> SeqRec [ID: MT488568.1] #> [[114]] #> SeqRec [ID: MT488567.1] #> [[115]] #> SeqRec [ID: MT488566.1] #> [[116]] #> SeqRec [ID: MF632281.1] #> [[117]] #> SeqRec [ID: MF632280.1] #> [[118]] #> SeqRec [ID: KX774456.1] #> [[119]] #> SeqRec [ID: KR902344.1] #> [[120]] #> SeqRec [ID: DQ321666.1] #> [[121]] #> SeqRec [ID: DQ321665.1] #> [[122]] #> SeqRec [ID: DQ162635.1] #> [[123]] #> SeqRec [ID: DQ162634.1] #> [[124]] #> SeqRec [ID: DQ162633.1] #> [[125]] #> SeqRec [ID: DQ162630.1] #> [[126]] #> SeqRec [ID: DQ162629.1] #> [[127]] #> SeqRec [ID: DQ162628.1] #> [[128]] #> SeqRec [ID: DQ162627.1] #> [[129]] #> SeqRec [ID: DQ162626.1] #> [[130]] #> SeqRec [ID: DQ162624.1] #> [[131]] #> SeqRec [ID: AY563263.2] #> [[132]] #> SeqRec [ID: AY563258.2] #> [[133]] #> SeqRec [ID: AY563227.2] #> [[134]] #> SeqRec [ID: AY563219.2] #> [[135]] #> SeqRec [ID: AY659834.1] #> [[136]] #> SeqRec [ID: AY659833.1] #> [[137]] #> SeqRec [ID: AY659832.1] #> [[138]] #> SeqRec [ID: AY659831.1] #> [[139]] #> SeqRec [ID: AY659830.1] #> [[140]] #> SeqRec [ID: AY659829.1] #> [[141]] #> SeqRec [ID: AF352260.1] #> [[142]] #> SeqRec [ID: AF352259.1] #> [[143]] #> SeqRec [ID: AF014508.1] #> [[144]] #> SeqRec [ID: AF014507.1] #> [[145]] #> SeqRec [ID: AF014506.1] #> [[146]] #> SeqRec [ID: AF014504.1] #> [[147]] #> SeqRec [ID: HQ005503.1] #> [[148]] #> SeqRec [ID: HQ005502.1] #> [[149]] #> SeqRec [ID: HQ018928.1] #> [[150]] #> SeqRec [ID: AY114539.1] #> [[151]] #> SeqRec [ID: AY114538.1] #> [[152]] #> SeqRec [ID: AY114537.1] #> [[153]] #> SeqRec [ID: AY114536.1] #> [[154]] #> SeqRec [ID: AY114535.1] #> [[155]] #> SeqRec [ID: AY114534.1] #> [[156]] #> SeqRec [ID: AY114533.1] #> [[157]] #> SeqRec [ID: AY114532.1] #> [[158]] #> SeqRec [ID: AY114531.1] #> [[159]] #> SeqRec [ID: AY114530.1] #> [[160]] #> SeqRec [ID: AY114529.1] #> [[161]] #> SeqRec [ID: KC762196.1] #> [[162]] #> SeqRec [ID: KC762163.1] #> [[163]] #> SeqRec [ID: KC762106.1] #> [[164]] #> SeqRec [ID: KC762075.1] #> [[165]] #> SeqRec [ID: KC762017.1] #> [[166]] #> SeqRec [ID: KC761983.1] #> [[167]] #> SeqRec [ID: KC761954.1] #> [[168]] #> SeqRec [ID: KC761921.1] #> [[169]] #> SeqRec [ID: KC761892.1] #> [[170]] #> SeqRec [ID: KC761836.1] #> [[171]] #> SeqRec [ID: KC761816.1] #> [[172]] #> SeqRec [ID: KC761785.1] #> [[173]] #> SeqRec [ID: KC761698.1] #> [[174]] #> SeqRec [ID: KC761635.1] #> [[175]] #> SeqRec [ID: KC761604.1] #> [[176]] #> SeqRec [ID: KC761572.1] #> [[177]] #> SeqRec [ID: KC761540.1] #> [[178]] #> SeqRec [ID: KC761507.1] #> [[179]] #> SeqRec [ID: KC761473.1] #> [[180]] #> SeqRec [ID: KC761408.1] #> [[181]] #> SeqRec [ID: KC761373.1] #> [[182]] #> SeqRec [ID: KC761279.1] #> [[183]] #> SeqRec [ID: KC761245.1] #> [[184]] #> SeqRec [ID: KC761212.1] #> [[185]] #> SeqRec [ID: KC761180.1] #> [[186]] #> SeqRec [ID: KC761083.1] #> [[187]] #> SeqRec [ID: KC761053.1] #> [[188]] #> SeqRec [ID: KC761019.1] #> [[189]] #> SeqRec [ID: KC760991.1] #> [[190]] #> SeqRec [ID: MW736163.1] #> [[191]] #> SeqRec [ID: MT489140.1] #> [[192]] #> SeqRec [ID: MT489139.1] #> [[193]] #> SeqRec [ID: MT489137.1] #> [[194]] #> SeqRec [ID: MT489136.1] #> [[195]] #> SeqRec [ID: MT489135.1] #> [[196]] #> SeqRec [ID: MT489134.1] #> [[197]] #> SeqRec [ID: MT489095.1] #> [[198]] #> SeqRec [ID: MT489094.1] #> [[199]] #> SeqRec [ID: MT489092.1] #> [[200]] #> SeqRec [ID: MT489091.1] #> [[201]] #> SeqRec [ID: MT489053.1] #> [[202]] #> SeqRec [ID: MT489052.1] #> [[203]] #> SeqRec [ID: MT489050.1] #> [[204]] #> SeqRec [ID: MT489049.1] #> [[205]] #> SeqRec [ID: MT489048.1] #> [[206]] #> SeqRec [ID: MT489010.1] #> [[207]] #> SeqRec [ID: MT489009.1] #> [[208]] #> SeqRec [ID: MT489007.1] #> [[209]] #> SeqRec [ID: MT489006.1] #> [[210]] #> SeqRec [ID: MT488968.1] #> [[211]] #> SeqRec [ID: MT488967.1] #> [[212]] #> SeqRec [ID: MT488965.1] #> [[213]] #> SeqRec [ID: MT488964.1] #> [[214]] #> SeqRec [ID: MT488963.1] #> [[215]] #> SeqRec [ID: MT488925.1] #> [[216]] #> SeqRec [ID: MT488924.1] #> [[217]] #> SeqRec [ID: MT488922.1] #> [[218]] #> SeqRec [ID: MT488921.1] #> [[219]] #> SeqRec [ID: MT488920.1] #> [[220]] #> SeqRec [ID: MT488882.1] #> [[221]] #> SeqRec [ID: MT488881.1] #> [[222]] #> SeqRec [ID: MT488879.1] #> [[223]] #> SeqRec [ID: MT488878.1] #> [[224]] #> SeqRec [ID: MT488839.1] #> [[225]] #> SeqRec [ID: MT488838.1] #> [[226]] #> SeqRec [ID: MT488800.1] #> [[227]] #> SeqRec [ID: MT488799.1] #> [[228]] #> SeqRec [ID: MT488797.1] #> [[229]] #> SeqRec [ID: MT488796.1] #> [[230]] #> SeqRec [ID: MT488795.1] #> [[231]] #> SeqRec [ID: MT488756.1] #> [[232]] #> SeqRec [ID: MT488755.1] #> [[233]] #> SeqRec [ID: MT488753.1] #> [[234]] #> SeqRec [ID: MT488752.1] #> [[235]] #> SeqRec [ID: MT488751.1] #> [[236]] #> SeqRec [ID: MT488681.1] #> [[237]] #> SeqRec [ID: MT488680.1] #> [[238]] #> SeqRec [ID: MT488679.1] #> [[239]] #> SeqRec [ID: MT488678.1] #> [[240]] #> SeqRec [ID: MT488677.1] #> [[241]] #> SeqRec [ID: MT488676.1] #> [[242]] #> SeqRec [ID: MT488592.1] #> [[243]] #> SeqRec [ID: MT488591.1] #> [[244]] #> SeqRec [ID: MT488589.1] #> [[245]] #> SeqRec [ID: MT488588.1] #> [[246]] #> SeqRec [ID: MT488587.1] #> [[247]] #> SeqRec [ID: MT488586.1] #> [[248]] #> SeqRec [ID: MT492189.1] #> [[249]] #> SeqRec [ID: MT492188.1] #> [[250]] #> SeqRec [ID: MT483740.1] #> [[251]] #> SeqRec [ID: MT483739.1] #> [[252]] #> SeqRec [ID: MT483737.1] #> [[253]] #> SeqRec [ID: MT483736.1] #> [[254]] #> SeqRec [ID: MT483735.1] #> [[255]] #> SeqRec [ID: MT483734.1] #> [[256]] #> SeqRec [ID: MF615381.1] #> [[257]] #> SeqRec [ID: MF615380.1] #> [[258]] #> SeqRec [ID: MF615379.1] #> [[259]] #> SeqRec [ID: MF615378.1] #> [[260]] #> SeqRec [ID: MF615377.1] #> [[261]] #> SeqRec [ID: MF615376.1] #> [[262]] #> SeqRec [ID: MK205145.1] #> [[263]] #> SeqRec [ID: MF632285.1] #> [[264]] #> SeqRec [ID: MF632284.1] #> [[265]] #> SeqRec [ID: MF632283.1] #> [[266]] #> SeqRec [ID: MF632282.1] #> [[267]] #> SeqRec [ID: MW736164.1] #> [[268]] #> SeqRec [ID: MT489147.1] #> [[269]] #> SeqRec [ID: MT489141.1] #> [[270]] #> SeqRec [ID: MT489126.1] #> [[271]] #> SeqRec [ID: MT489106.1] #> [[272]] #> SeqRec [ID: MT489102.1] #> [[273]] #> SeqRec [ID: MT489096.1] #> [[274]] #> SeqRec [ID: MT489083.1] #> [[275]] #> SeqRec [ID: MT489064.1] #> [[276]] #> SeqRec [ID: MT489060.1] #> [[277]] #> SeqRec [ID: MT489054.1] #> [[278]] #> SeqRec [ID: MT489040.1] #> [[279]] #> SeqRec [ID: MT489021.1] #> [[280]] #> SeqRec [ID: MT489017.1] #> [[281]] #> SeqRec [ID: MT489011.1] #> [[282]] #> SeqRec [ID: MT488998.1] #> [[283]] #> SeqRec [ID: MT488979.1] #> [[284]] #> SeqRec [ID: MT488975.1] #> [[285]] #> SeqRec [ID: MT488969.1] #> [[286]] #> SeqRec [ID: MT488955.1] #> [[287]] #> SeqRec [ID: MT488936.1] #> [[288]] #> SeqRec [ID: MT488926.1] #> [[289]] #> SeqRec [ID: MT488912.1] #> [[290]] #> SeqRec [ID: MT488893.1] #> [[291]] #> SeqRec [ID: MT488889.1] #> [[292]] #> SeqRec [ID: MT488883.1] #> [[293]] #> SeqRec [ID: MT488870.1] #> [[294]] #> SeqRec [ID: MT488850.1] #> [[295]] #> SeqRec [ID: MT488846.1] #> [[296]] #> SeqRec [ID: MT488840.1] #> [[297]] #> SeqRec [ID: MT488831.1] #> [[298]] #> SeqRec [ID: MT488807.1] #> [[299]] #> SeqRec [ID: MT488801.1] #> [[300]] #> SeqRec [ID: MT488787.1] #> [[301]] #> SeqRec [ID: MT488767.1] #> [[302]] #> SeqRec [ID: MT488763.1] #> [[303]] #> SeqRec [ID: MT488757.1] #> [[304]] #> SeqRec [ID: MT488743.1] #> [[305]] #> SeqRec [ID: MT488723.1] #> [[306]] #> SeqRec [ID: MT488675.1] #> [[307]] #> SeqRec [ID: MT488655.1] #> [[308]] #> SeqRec [ID: MT488599.1] #> [[309]] #> SeqRec [ID: MT488593.1] #> [[310]] #> SeqRec [ID: MT488578.1] #> [[311]] #> SeqRec [ID: MT488558.1] #> [[312]] #> SeqRec [ID: MT492196.1] #> [[313]] #> SeqRec [ID: MT492190.1] #> [[314]] #> SeqRec [ID: MT492179.1] #> [[315]] #> SeqRec [ID: MT483747.1] #> [[316]] #> SeqRec [ID: MT483741.1] #> [[317]] #> SeqRec [ID: MT483726.1] #> [[318]] #> SeqRec [ID: MT483706.1] #> [[319]] #> SeqRec [ID: DQ321664.1] #> [[320]] #> SeqRec [ID: DQ162736.1] #> [[321]] #> SeqRec [ID: DQ162732.1] #> [[322]] #> SeqRec [ID: DQ162729.1] #> [[323]] #> SeqRec [ID: DQ162727.1] #> [[324]] #> SeqRec [ID: DQ162719.1] #> [[325]] #> SeqRec [ID: DQ162718.1] #> [[326]] #> SeqRec [ID: DQ162711.1] #> [[327]] #> SeqRec [ID: DQ162710.1] #> [[328]] #> SeqRec [ID: AY563262.2] #> [[329]] #> SeqRec [ID: AY563261.2] #> [[330]] #> SeqRec [ID: AY563260.2] #> [[331]] #> SeqRec [ID: AY563259.2] #> [[332]] #> SeqRec [ID: AY563257.2] #> [[333]] #> SeqRec [ID: AY563256.2] #> [[334]] #> SeqRec [ID: AY563254.2] #> [[335]] #> SeqRec [ID: AY563253.2] #> [[336]] #> SeqRec [ID: AY563252.2] #> [[337]] #> SeqRec [ID: AY563251.2] #> [[338]] #> SeqRec [ID: AY563250.2] #> [[339]] #> SeqRec [ID: AY563249.2] #> [[340]] #> SeqRec [ID: AY563248.2] #> [[341]] #> SeqRec [ID: AY563247.2] #> [[342]] #> SeqRec [ID: AY563246.2] #> [[343]] #> SeqRec [ID: AY563245.2] #> [[344]] #> SeqRec [ID: AY563244.2] #> [[345]] #> SeqRec [ID: AY563243.2] #> [[346]] #> SeqRec [ID: AY563242.2] #> [[347]] #> SeqRec [ID: AY563241.2] #> [[348]] #> SeqRec [ID: AY563229.2] #> [[349]] #> SeqRec [ID: AY563226.2] #> [[350]] #> SeqRec [ID: AY659828.1] #> [[351]] #> SeqRec [ID: AY659827.1] #> [[352]] #> SeqRec [ID: AY659826.1] #> [[353]] #> SeqRec [ID: AF352258.1] #> [[354]] #> SeqRec [ID: AF352257.1] #> [[355]] #> SeqRec [ID: AF352256.1] #> [[356]] #> SeqRec [ID: AF132757.1] #> [[357]] #> SeqRec [ID: AF129797.1] #> [[358]] #> SeqRec [ID: AF097328.1] #> [[359]] #> SeqRec [ID: AF097326.1] #> [[360]] #> SeqRec [ID: AF097324.1] #> [[361]] #> SeqRec [ID: JQ932319.1] #> [[362]] #> SeqRec [ID: JQ932318.1] #> [[363]] #> SeqRec [ID: JQ932310.1] #> [[364]] #> SeqRec [ID: JQ932304.1] #> [[365]] #> SeqRec [ID: JQ932303.1] #> [[366]] #> SeqRec [ID: JQ932293.1] #> [[367]] #> SeqRec [ID: JQ932280.1] #> [[368]] #> SeqRec [ID: JQ932259.1] #> [[369]] #> SeqRec [ID: JQ932255.1] #> [[370]] #> SeqRec [ID: JQ932245.1] #> [[371]] #> SeqRec [ID: JQ932232.1] #> [[372]] #> SeqRec [ID: JQ932362.1] #> [[373]] #> SeqRec [ID: JQ932359.1] #> [[374]] #> SeqRec [ID: JQ932356.1] #> [[375]] #> SeqRec [ID: JQ932605.1] #> [[376]] #> SeqRec [ID: JQ932597.1] #> [[377]] #> SeqRec [ID: JQ932590.1] #> [[378]] #> SeqRec [ID: JQ932717.1] #> [[379]] #> SeqRec [ID: JQ932662.1] #> [[380]] #> SeqRec [ID: JQ932636.1] #> [[381]] #> SeqRec [ID: JQ932630.1] #> [[382]] #> SeqRec [ID: JQ932822.1] #> [[383]] #> SeqRec [ID: JQ932821.1] #> [[384]] #> SeqRec [ID: JQ932818.1] #> [[385]] #> SeqRec [ID: JQ932817.1] #> [[386]] #> SeqRec [ID: JQ932816.1] #> [[387]] #> SeqRec [ID: JQ932815.1] #> [[388]] #> SeqRec [ID: JQ932814.1] #> [[389]] #> SeqRec [ID: JQ932813.1] #> [[390]] #> SeqRec [ID: JQ932812.1] #> [[391]] #> SeqRec [ID: JQ932809.1] #> [[392]] #> SeqRec [ID: JQ932807.1] #> [[393]] #> SeqRec [ID: JQ932806.1] #> [[394]] #> SeqRec [ID: JQ932805.1] #> [[395]] #> SeqRec [ID: JQ932804.1] #> [[396]] #> SeqRec [ID: JQ932803.1] #> [[397]] #> SeqRec [ID: JQ932802.1] #> [[398]] #> SeqRec [ID: JQ932801.1] #> [[399]] #> SeqRec [ID: JQ932800.1] #> [[400]] #> SeqRec [ID: JQ932799.1] #> [[401]] #> SeqRec [ID: JQ932794.1] #> [[402]] #> SeqRec [ID: JQ932775.1] #> [[403]] #> SeqRec [ID: JQ932756.1] #> [[404]] #> SeqRec [ID: JQ932751.1] #> [[405]] #> SeqRec [ID: JQ932724.1] #> [[406]] #> SeqRec [ID: JQ932932.1] #> [[407]] #> SeqRec [ID: JQ932931.1] #> [[408]] #> SeqRec [ID: JQ932930.1] #> [[409]] #> SeqRec [ID: JQ932929.1] #> [[410]] #> SeqRec [ID: JQ932928.1] #> [[411]] #> SeqRec [ID: JQ932927.1] #> [[412]] #> SeqRec [ID: JQ932926.1] #> [[413]] #> SeqRec [ID: JQ932925.1] #> [[414]] #> SeqRec [ID: JQ932924.1] #> [[415]] #> SeqRec [ID: JQ932923.1] #> [[416]] #> SeqRec [ID: JQ932922.1] #> [[417]] #> SeqRec [ID: JQ932921.1] #> [[418]] #> SeqRec [ID: JQ932920.1] #> [[419]] #> SeqRec [ID: JQ932918.1] #> [[420]] #> SeqRec [ID: JQ932916.1] #> [[421]] #> SeqRec [ID: JQ932914.1] #> [[422]] #> SeqRec [ID: JQ932913.1] #> [[423]] #> SeqRec [ID: JQ932909.1] #> [[424]] #> SeqRec [ID: JQ932908.1] #> [[425]] #> SeqRec [ID: JQ932905.1] #> [[426]] #> SeqRec [ID: JQ932903.1] #> [[427]] #> SeqRec [ID: JQ932897.1] #> [[428]] #> SeqRec [ID: JQ932896.1] #> [[429]] #> SeqRec [ID: JQ932895.1] #> [[430]] #> SeqRec [ID: JQ932892.1] #> [[431]] #> SeqRec [ID: JQ932891.1] #> [[432]] #> SeqRec [ID: JQ932890.1] #> [[433]] #> SeqRec [ID: JQ932889.1] #> [[434]] #> SeqRec [ID: JQ932888.1] #> [[435]] #> SeqRec [ID: JQ932887.1] #> [[436]] #> SeqRec [ID: JQ932886.1] #> [[437]] #> SeqRec [ID: JQ932885.1] #> [[438]] #> SeqRec [ID: JQ932884.1] #> [[439]] #> SeqRec [ID: JQ932882.1] #> [[440]] #> SeqRec [ID: JQ932881.1] #> [[441]] #> SeqRec [ID: JQ932880.1] #> [[442]] #> SeqRec [ID: JQ932879.1] #> [[443]] #> SeqRec [ID: JQ932877.1] #> [[444]] #> SeqRec [ID: JQ932874.1] #> [[445]] #> SeqRec [ID: JQ932873.1] #> [[446]] #> SeqRec [ID: JQ932872.1] #> [[447]] #> SeqRec [ID: JQ932870.1] #> [[448]] #> SeqRec [ID: JQ932869.1] #> [[449]] #> SeqRec [ID: JQ932868.1] #> [[450]] #> SeqRec [ID: JQ932867.1] #> [[451]] #> SeqRec [ID: JQ932866.1] #> [[452]] #> SeqRec [ID: JQ932865.1] #> [[453]] #> SeqRec [ID: JQ932864.1] #> [[454]] #> SeqRec [ID: JQ932863.1] #> [[455]] #> SeqRec [ID: JQ932862.1] #> [[456]] #> SeqRec [ID: JQ932861.1] #> [[457]] #> SeqRec [ID: JQ932859.1] #> [[458]] #> SeqRec [ID: JQ932857.1] #> [[459]] #> SeqRec [ID: JQ932856.1] #> [[460]] #> SeqRec [ID: JQ932855.1] #> [[461]] #> SeqRec [ID: JQ932854.1] #> [[462]] #> SeqRec [ID: JQ932853.1] #> [[463]] #> SeqRec [ID: JQ932852.1] #> [[464]] #> SeqRec [ID: JQ932851.1] #> [[465]] #> SeqRec [ID: JQ932850.1] #> [[466]] #> SeqRec [ID: JQ932849.1] #> [[467]] #> SeqRec [ID: JQ932847.1] #> [[468]] #> SeqRec [ID: JQ932846.1] #> [[469]] #> SeqRec [ID: JQ932845.1] #> [[470]] #> SeqRec [ID: JQ932844.1] #> [[471]] #> SeqRec [ID: JQ932843.1] #> [[472]] #> SeqRec [ID: JQ932842.1] #> [[473]] #> SeqRec [ID: JQ932841.1] #> [[474]] #> SeqRec [ID: JQ932840.1] #> [[475]] #> SeqRec [ID: JQ932839.1] #> [[476]] #> SeqRec [ID: JQ932838.1] #> [[477]] #> SeqRec [ID: JQ932837.1] #> [[478]] #> SeqRec [ID: JQ932836.1] #> [[479]] #> SeqRec [ID: JQ932835.1] #> [[480]] #> SeqRec [ID: JQ932833.1] #> [[481]] #> SeqRec [ID: JQ932831.1] #> [[482]] #> SeqRec [ID: JQ932830.1] #> [[483]] #> SeqRec [ID: JQ932829.1] #> [[484]] #> SeqRec [ID: JQ932827.1] #> [[485]] #> SeqRec [ID: JQ932823.1] #> [[486]] #> SeqRec [ID: JQ933029.1] #> [[487]] #> SeqRec [ID: JQ933028.1] #> [[488]] #> SeqRec [ID: JQ933027.1] #> [[489]] #> SeqRec [ID: JQ933026.1] #> [[490]] #> SeqRec [ID: JQ933023.1] #> [[491]] #> SeqRec [ID: JQ933020.1] #> [[492]] #> SeqRec [ID: JQ933011.1] #> [[493]] #> SeqRec [ID: JQ933006.1] #> [[494]] #> SeqRec [ID: JQ933005.1] #> [[495]] #> SeqRec [ID: JQ933004.1] #> [[496]] #> SeqRec [ID: JQ933001.1] #> [[497]] #> SeqRec [ID: JQ933000.1] #> [[498]] #> SeqRec [ID: JQ932999.1] #> [[499]] #> SeqRec [ID: JQ932998.1] #> [[500]] #> SeqRec [ID: JQ932997.1] #> [[501]] #> SeqRec [ID: JQ932996.1] #> [[502]] #> SeqRec [ID: JQ932995.1] #> [[503]] #> SeqRec [ID: JQ932994.1] #> [[504]] #> SeqRec [ID: JQ932993.1] #> [[505]] #> SeqRec [ID: JQ932992.1] #> [[506]] #> SeqRec [ID: JQ932991.1] #> [[507]] #> SeqRec [ID: JQ932990.1] #> [[508]] #> SeqRec [ID: JQ932989.1] #> [[509]] #> SeqRec [ID: JQ932988.1] #> [[510]] #> SeqRec [ID: JQ932987.1] #> [[511]] #> SeqRec [ID: JQ932986.1] #> [[512]] #> SeqRec [ID: JQ932985.1] #> [[513]] #> SeqRec [ID: JQ932984.1] #> [[514]] #> SeqRec [ID: JQ932983.1] #> [[515]] #> SeqRec [ID: JQ932982.1] #> [[516]] #> SeqRec [ID: JQ932981.1] #> [[517]] #> SeqRec [ID: JQ932980.1] #> [[518]] #> SeqRec [ID: JQ932979.1] #> [[519]] #> SeqRec [ID: JQ932978.1] #> [[520]] #> SeqRec [ID: JQ932977.1] #> [[521]] #> SeqRec [ID: JQ932976.1] #> [[522]] #> SeqRec [ID: JQ932975.1] #> [[523]] #> SeqRec [ID: JQ932974.1] #> [[524]] #> SeqRec [ID: JQ932973.1] #> [[525]] #> SeqRec [ID: JQ932972.1] #> [[526]] #> SeqRec [ID: JQ932971.1] #> [[527]] #> SeqRec [ID: JQ932970.1] #> [[528]] #> SeqRec [ID: JQ932969.1] #> [[529]] #> SeqRec [ID: JQ932967.1] #> [[530]] #> SeqRec [ID: JQ932966.1] #> [[531]] #> SeqRec [ID: JQ932965.1] #> [[532]] #> SeqRec [ID: JQ932964.1] #> [[533]] #> SeqRec [ID: JQ932963.1] #> [[534]] #> SeqRec [ID: JQ932962.1] #> [[535]] #> SeqRec [ID: JQ932961.1] #> [[536]] #> SeqRec [ID: JQ932960.1] #> [[537]] #> SeqRec [ID: JQ932959.1] #> [[538]] #> SeqRec [ID: JQ932958.1] #> [[539]] #> SeqRec [ID: JQ932957.1] #> [[540]] #> SeqRec [ID: JQ932956.1] #> [[541]] #> SeqRec [ID: JQ932955.1] #> [[542]] #> SeqRec [ID: JQ932954.1] #> [[543]] #> SeqRec [ID: JQ932953.1] #> [[544]] #> SeqRec [ID: JQ932934.1] #> [[545]] #> SeqRec [ID: JQ932933.1] #> [[546]] #> SeqRec [ID: JQ963361.1] #> [[547]] #> SeqRec [ID: JQ963360.1] #> [[548]] #> SeqRec [ID: JQ963351.1] #> [[549]] #> SeqRec [ID: JQ963350.1] #> [[550]] #> SeqRec [ID: JQ963349.1] #> [[551]] #> SeqRec [ID: JQ963348.1] #> [[552]] #> SeqRec [ID: JQ963347.1] #> [[553]] #> SeqRec [ID: JQ963346.1] #> [[554]] #> SeqRec [ID: JQ933101.1] #> [[555]] #> SeqRec [ID: JQ933099.1] #> [[556]] #> SeqRec [ID: JQ933082.1] #> [[557]] #> SeqRec [ID: JQ933076.1] #> [[558]] #> SeqRec [ID: JQ933075.1] #> [[559]] #> SeqRec [ID: JQ933053.1] #> [[560]] #> SeqRec [ID: MT489118.1] #> [[561]] #> SeqRec [ID: MT489076.1] #> [[562]] #> SeqRec [ID: MT489033.1] #> [[563]] #> SeqRec [ID: MT488991.1] #> [[564]] #> SeqRec [ID: MT488948.1] #> [[565]] #> SeqRec [ID: MT488905.1] #> [[566]] #> SeqRec [ID: MT488862.1] #> [[567]] #> SeqRec [ID: MT488816.1] #> [[568]] #> SeqRec [ID: MT488779.1] #> [[569]] #> SeqRec [ID: MT488735.1] #> [[570]] #> SeqRec [ID: MT488656.1] #> [[571]] #> SeqRec [ID: MT488570.1] #> [[572]] #> SeqRec [ID: MT492172.1] #> [[573]] #> SeqRec [ID: MT483718.1] #> [[574]] #> SeqRec [ID: MT253565.1] #> [[575]] #> SeqRec [ID: MT232916.1] #> [[576]] #> SeqRec [ID: MT232915.1] #> [[577]] #> SeqRec [ID: LR699078.1] #> [[578]] #> SeqRec [ID: LR699077.1] #> [[579]] #> SeqRec [ID: LR699076.1] #> [[580]] #> SeqRec [ID: LS481196.1] #> [[581]] #> SeqRec [ID: LS481195.1] #> [[582]] #> SeqRec [ID: LS481194.1] #> [[583]] #> SeqRec [ID: LS481193.1] #> [[584]] #> SeqRec [ID: LS481192.1] #> [[585]] #> SeqRec [ID: AF097329.1] #> [[586]] #> SeqRec [ID: AF097327.1] #> [[587]] #> SeqRec [ID: AF097325.1] #> [[588]] #> SeqRec [ID: AF097321.1] #> [[589]] #> SeqRec [ID: JN161047.1] #> [[590]] #> SeqRec [ID: HQ005506.1] #> [[591]] #> SeqRec [ID: HQ018927.1] #> [[592]] #> SeqRec [ID: KC762193.1] #> [[593]] #> SeqRec [ID: KC762160.1] #> [[594]] #> SeqRec [ID: KC762127.1] #> [[595]] #> SeqRec [ID: KC762104.1] #> [[596]] #> SeqRec [ID: KC762072.1] #> [[597]] #> SeqRec [ID: KC762014.1] #> [[598]] #> SeqRec [ID: KC761980.1] #> [[599]] #> SeqRec [ID: KC761951.1] #> [[600]] #> SeqRec [ID: KC761918.1] #> [[601]] #> SeqRec [ID: KC761889.1] #> [[602]] #> SeqRec [ID: KC761833.1] #> [[603]] #> SeqRec [ID: KC761813.1] #> [[604]] #> SeqRec [ID: KC761782.1] #> [[605]] #> SeqRec [ID: KC761755.1] #> [[606]] #> SeqRec [ID: KC761695.1] #> [[607]] #> SeqRec [ID: KC761632.1] #> [[608]] #> SeqRec [ID: KC761601.1] #> [[609]] #> SeqRec [ID: KC761569.1] #> [[610]] #> SeqRec [ID: KC761537.1] #> [[611]] #> SeqRec [ID: KC761504.1] #> [[612]] #> SeqRec [ID: KC761470.1] #> [[613]] #> SeqRec [ID: KC761438.1] #> [[614]] #> SeqRec [ID: KC761405.1] #> [[615]] #> SeqRec [ID: KC761371.1] #> [[616]] #> SeqRec [ID: KC761338.1] #> [[617]] #> SeqRec [ID: KC761242.1] #> [[618]] #> SeqRec [ID: KC761210.1] #> [[619]] #> SeqRec [ID: KC761177.1] #> [[620]] #> SeqRec [ID: KC761144.1] #> [[621]] #> SeqRec [ID: KC761111.1] #> [[622]] #> SeqRec [ID: KC761080.1] #> [[623]] #> SeqRec [ID: KC761050.1] #> [[624]] #> SeqRec [ID: KC761016.1] #> [[625]] #> SeqRec [ID: KC760988.1] #> [[626]] #> SeqRec [ID: KC760954.1] #> [[627]] #> SeqRec [ID: KC760891.1] #> [[628]] #> SeqRec [ID: KC760866.1] #> [[629]] #> SeqRec [ID: KC760833.1] #> [[630]] #> SeqRec [ID: KC760802.1] #> [[631]] #> SeqRec [ID: KC760770.1] #> [[632]] #> SeqRec [ID: KC760738.1] #> [[633]] #> SeqRec [ID: KC760712.1] #> [[634]] #> SeqRec [ID: KC760681.1] #> [[635]] #> SeqRec [ID: KC760646.1] #> [[636]] #> SeqRec [ID: KC760611.1] #> [[637]] #> SeqRec [ID: KC760576.1] #> [[638]] #> SeqRec [ID: KC760514.1] #> [[639]] #> SeqRec [ID: KC760483.1] #> [[640]] #> SeqRec [ID: KC760450.1] #> [[641]] #> SeqRec [ID: KC760417.1] #> [[642]] #> SeqRec [ID: KC760385.1] #> [[643]] #> SeqRec [ID: KC760326.1] #> [[644]] #> SeqRec [ID: KC760263.1] #> [[645]] #> SeqRec [ID: KC760228.1] #> [[646]] #> SeqRec [ID: KC761952.1] #> [[647]] #> SeqRec [ID: KC761919.1] #> [[648]] #> SeqRec [ID: KC761890.1] #> [[649]] #> SeqRec [ID: KC761834.1] #> [[650]] #> SeqRec [ID: KC761814.1] #> [[651]] #> SeqRec [ID: KC761783.1] #> [[652]] #> SeqRec [ID: KC761756.1] #> [[653]] #> SeqRec [ID: KC761696.1] #> [[654]] #> SeqRec [ID: KC761633.1] #> [[655]] #> SeqRec [ID: KC761602.1] #> [[656]] #> SeqRec [ID: KC761570.1] #> [[657]] #> SeqRec [ID: KC761538.1] #> [[658]] #> SeqRec [ID: KC761505.1] #> [[659]] #> SeqRec [ID: KC761471.1] #> [[660]] #> SeqRec [ID: KC761439.1] #> [[661]] #> SeqRec [ID: KC761406.1] #> [[662]] #> SeqRec [ID: KC761339.1] #> [[663]] #> SeqRec [ID: KC761277.1] #> [[664]] #> SeqRec [ID: KC761243.1] #> [[665]] #> SeqRec [ID: KC761178.1] #> [[666]] #> SeqRec [ID: KC761145.1] #> [[667]] #> SeqRec [ID: KC761081.1] #> [[668]] #> SeqRec [ID: KC761051.1] #> [[669]] #> SeqRec [ID: KC761017.1] #> [[670]] #> SeqRec [ID: KC760989.1] #> [[671]] #> SeqRec [ID: KC760955.1] #> [[672]] #> SeqRec [ID: KC760892.1] #> [[673]] #> SeqRec [ID: KC760867.1] #> [[674]] #> SeqRec [ID: KC760834.1] #> [[675]] #> SeqRec [ID: KC760803.1] #> [[676]] #> SeqRec [ID: KC760771.1] #> [[677]] #> SeqRec [ID: KC760739.1] #> [[678]] #> SeqRec [ID: KC760713.1] #> [[679]] #> SeqRec [ID: KC760682.1] #> [[680]] #> SeqRec [ID: KC760647.1] #> [[681]] #> SeqRec [ID: KC760612.1] #> [[682]] #> SeqRec [ID: KC760577.1] #> [[683]] #> SeqRec [ID: KC760515.1] #> [[684]] #> SeqRec [ID: KC760484.1] #> [[685]] #> SeqRec [ID: KC760451.1] #> [[686]] #> SeqRec [ID: KC760418.1] #> [[687]] #> SeqRec [ID: KC760386.1] #> [[688]] #> SeqRec [ID: KC760327.1] #> [[689]] #> SeqRec [ID: KC760264.1] #> [[690]] #> SeqRec [ID: KC760229.1] #> [[691]] #> SeqRec [ID: AY225808.2] #> [[692]] #> SeqRec [ID: AY225809.2] #> [[693]] #> SeqRec [ID: AF169487.1] #> [[694]] #> SeqRec [ID: AF169486.1] #> [[695]] #> SeqRec [ID: AF169485.1] #> [[696]] #> SeqRec [ID: U36770.1] #> [[697]] #> SeqRec [ID: HM756840.1] #> [[698]] #> SeqRec [ID: HM757383.1] #> [[699]] #> SeqRec [ID: HM757558.1] #> [[700]] #> SeqRec [ID: HM757724.1] #> [[701]] #> SeqRec [ID: HM758216.1] #> [[702]] #> SeqRec [ID: HM758297.1] #> [[703]] #> SeqRec [ID: HM758465.1] #> [[704]] #> SeqRec [ID: HM758650.1] #> [[705]] #> SeqRec [ID: HM758934.1] #> [[706]] #> SeqRec [ID: HM759105.1] #> [[707]] #> SeqRec [ID: HM759278.1] #> [[708]] #> SeqRec [ID: HM759372.1] #> [[709]] #> SeqRec [ID: HM759646.1] #> [[710]] #> SeqRec [ID: HM759729.1] #> [[711]] #> SeqRec [ID: HM759896.1] #> [[712]] #> SeqRec [ID: HM760080.1] #> [[713]] #> SeqRec [ID: HM760256.1] #> [[714]] #> SeqRec [ID: HM760529.1] #> [[715]] #> SeqRec [ID: HM760608.1] #> [[716]] #> SeqRec [ID: HM760775.1] #> [[717]] #> SeqRec [ID: HM761013.1] #> [[718]] #> SeqRec [ID: HM761145.1] #> [[719]] #> SeqRec [ID: HM761195.1] #> [[720]] #> SeqRec [ID: HM761507.1] #> [[721]] #> SeqRec [ID: HM761772.1] #> [[722]] #> SeqRec [ID: HM761929.1] #> [[723]] #> SeqRec [ID: HM762096.1] #> [[724]] #> SeqRec [ID: HM762207.1] #> [[725]] #> SeqRec [ID: HM762431.1] #> [[726]] #> SeqRec [ID: HM762511.1] #> [[727]] #> SeqRec [ID: HM762768.1] #> [[728]] #> SeqRec [ID: HM762858.1] #> [[729]] #> SeqRec [ID: HM763021.1] #> [[730]] #> SeqRec [ID: HM763265.1] #> [[731]] #> SeqRec [ID: HM763433.1] #> [[732]] #> SeqRec [ID: HM763726.1] #> [[733]] #> SeqRec [ID: HM763996.1] #> [[734]] #> SeqRec [ID: HM764104.1] #> [[735]] #> SeqRec [ID: HM764321.1] #> [[736]] #> SeqRec [ID: HM764396.1] #> [[737]] #> SeqRec [ID: HM764648.1] #> [[738]] #> SeqRec [ID: AF185631.1] #> [[739]] #> SeqRec [ID: AF185630.1] #> [[740]] #> SeqRec [ID: AF185629.1] #> [[741]] #> SeqRec [ID: AF185628.1] #> [[742]] #> SeqRec [ID: AF185627.1] #> [[743]] #> SeqRec [ID: AF185625.1] #> [[744]] #> SeqRec [ID: AF185624.1] #> [[745]] #> SeqRec [ID: AF185623.1] #> [[746]] #> SeqRec [ID: AF107758.1] #> [[747]] #> SeqRec [ID: AF107755.1] #> [[748]] #> SeqRec [ID: AF107753.1] #> [[749]] #> SeqRec [ID: AF107750.1] #> [[750]] #> SeqRec [ID: AF107749.1] #> [[751]] #> SeqRec [ID: AF107748.1] #> [[752]] #> SeqRec [ID: AF107742.1] #> [[753]] #> SeqRec [ID: AF107741.1] #> [[754]] #> SeqRec [ID: AF107740.1] #> [[755]] #> SeqRec [ID: AF107738.1] #> [[756]] #> SeqRec [ID: AF107736.1] #> [[757]] #> SeqRec [ID: AF014513.1] #> [[758]] #> SeqRec [ID: AF014512.1] #> [[759]] #> SeqRec [ID: AF014511.1] #> [[760]] #> SeqRec [ID: AF014509.1] #> [[761]] #> SeqRec [ID: JN161054.1] #> [[762]] #> SeqRec [ID: JN161053.1] #> [[763]] #> SeqRec [ID: JN161052.1] #> [[764]] #> SeqRec [ID: JN161051.1] #> [[765]] #> SeqRec [ID: JN161050.1] #> [[766]] #> SeqRec [ID: JN161049.1] #> [[767]] #> SeqRec [ID: HQ005509.1] #> [[768]] #> SeqRec [ID: HQ005508.1] #> [[769]] #> SeqRec [ID: HQ005507.1] #> [[770]] #> SeqRec [ID: AY114521.1] #> [[771]] #> SeqRec [ID: AY114520.1] #> [[772]] #> SeqRec [ID: AY114519.1] #> [[773]] #> SeqRec [ID: AY114518.1] #> [[774]] #> SeqRec [ID: AY114517.1] #> [[775]] #> SeqRec [ID: AY114516.1] #> [[776]] #> SeqRec [ID: AY114515.1] #> [[777]] #> SeqRec [ID: AY114514.1] #> [[778]] #> SeqRec [ID: AF027569.1] #> [[779]] #> SeqRec [ID: AF027567.1] #> [[780]] #> SeqRec [ID: AF027566.1] #> [[781]] #> SeqRec [ID: AF027565.1] #> [[782]] #> SeqRec [ID: AF027564.1] #> [[783]] #> SeqRec [ID: AF027563.1] #> [[784]] #> SeqRec [ID: AF027562.1] #> [[785]] #> SeqRec [ID: AF027561.1] #> [[786]] #> SeqRec [ID: AF027560.1] #> [[787]] #> SeqRec [ID: AF027559.1] #> [[788]] #> SeqRec [ID: AF027554.1] #> [[789]] #> SeqRec [ID: AF027553.1] #> [[790]] #> SeqRec [ID: AF027552.1] #> [[791]] #> SeqRec [ID: AF027551.1] #> [[792]] #> SeqRec [ID: AF027549.1] #> [[793]] #> SeqRec [ID: AF027548.1] #> [[794]] #> SeqRec [ID: AF027547.1] #> [[795]] #> SeqRec [ID: AF027546.1] #> [[796]] #> SeqRec [ID: AF027545.1] #> [[797]] #> SeqRec [ID: AF027544.1] #> [[798]] #> SeqRec [ID: AF027543.1] #> [[799]] #> SeqRec [ID: AF027542.1] #> [[800]] #> SeqRec [ID: AF286382.1] #> [[801]] #> SeqRec [ID: AF286380.1] #> [[802]] #> SeqRec [ID: KC762194.1] #> [[803]] #> SeqRec [ID: KC762161.1] #> [[804]] #> SeqRec [ID: KC762128.1] #> [[805]] #> SeqRec [ID: KC762073.1] #> [[806]] #> SeqRec [ID: KC762015.1] #> [[807]] #> SeqRec [ID: KC761981.1] #> [[808]] #> SeqRec [ID: AY245679.1] #> [[809]] #> SeqRec [ID: AY245678.1] #> [[810]] #> SeqRec [ID: AY245677.1] #> [[811]] #> SeqRec [ID: AY245676.1] #> [[812]] #> SeqRec [ID: AY245675.1] #> [[813]] #> SeqRec [ID: AY283262.1] #> [[814]] #> SeqRec [ID: AY225807.1] #> [[815]] #> SeqRec [ID: AY225804.1] #> [[816]] #> SeqRec [ID: AY225803.1] #> [[817]] #> SeqRec [ID: AY225799.1] #> [[818]] #> SeqRec [ID: AF352255.1] #> [[819]] #> SeqRec [ID: AF352254.1] #> [[820]] #> SeqRec [ID: AF333732.1] #> [[821]] #> SeqRec [ID: AF333731.1] #> [[822]] #> SeqRec [ID: AF333730.1] #> [[823]] #> SeqRec [ID: AF333729.1] #> [[824]] #> SeqRec [ID: AF333728.1] #> [[825]] #> SeqRec [ID: AF333727.1] #> [[826]] #> SeqRec [ID: AF333726.1] #> [[827]] #> SeqRec [ID: AF333725.1] #> [[828]] #> SeqRec [ID: AF333724.1] #> [[829]] #> SeqRec [ID: AF333723.1] #> [[830]] #> SeqRec [ID: AF333722.1] #> [[831]] #> SeqRec [ID: AF333721.1] #> [[832]] #> SeqRec [ID: AF333720.1] #> [[833]] #> SeqRec [ID: AF333719.1] #> [[834]] #> SeqRec [ID: AF333718.1] #> [[835]] #> SeqRec [ID: AF333717.1] #> [[836]] #> SeqRec [ID: AF333716.1] #> [[837]] #> SeqRec [ID: AF333715.1] #> [[838]] #> SeqRec [ID: AF333714.1] #> [[839]] #> SeqRec [ID: AF333713.1] #> [[840]] #> SeqRec [ID: AF333712.1] #> [[841]] #> SeqRec [ID: AF333711.1] #> [[842]] #> SeqRec [ID: AF333710.1] #> [[843]] #> SeqRec [ID: AF333709.1] #> [[844]] #> SeqRec [ID: AF378750.1] #> [[845]] #> SeqRec [ID: AF378749.1] #> [[846]] #> SeqRec [ID: AF378748.1] #> [[847]] #> SeqRec [ID: AF378747.1] #> [[848]] #> SeqRec [ID: AF378746.1] #> [[849]] #> SeqRec [ID: AF378745.1] #> [[850]] #> SeqRec [ID: AF378744.1] #> [[851]] #> SeqRec [ID: AF378743.1] #> [[852]] #> SeqRec [ID: AF378742.1] #> [[853]] #> SeqRec [ID: AF378741.1] #> [[854]] #> SeqRec [ID: AF336946.1] #> [[855]] #> SeqRec [ID: AF336945.1] #> [[856]] #> SeqRec [ID: AF336944.1] #> [[857]] #> SeqRec [ID: AF336943.1] #> [[858]] #> SeqRec [ID: AF336942.1] #> [[859]] #> SeqRec [ID: AF336941.1] #> [[860]] #> SeqRec [ID: AF336940.1] #> [[861]] #> SeqRec [ID: AF336939.1] #> [[862]] #> SeqRec [ID: AF336938.1] #> [[863]] #> SeqRec [ID: AF336937.1] #> [[864]] #> SeqRec [ID: AF336936.1] #> [[865]] #> SeqRec [ID: AF336935.1] #> [[866]] #> SeqRec [ID: AF336934.1] #> [[867]] #> SeqRec [ID: AF336933.1] #> [[868]] #> SeqRec [ID: AF336932.1] #> [[869]] #> SeqRec [ID: AF336931.1] #> [[870]] #> SeqRec [ID: AF336930.1] #> [[871]] #> SeqRec [ID: AF440688.1] #> [[872]] #> SeqRec [ID: AF132770.1] #> [[873]] #> SeqRec [ID: AF132769.1] #> [[874]] #> SeqRec [ID: AF132768.1] #> [[875]] #> SeqRec [ID: AF132767.1] #> [[876]] #> SeqRec [ID: AF132766.1] #> [[877]] #> SeqRec [ID: AF132765.1] #> [[878]] #> SeqRec [ID: AF132764.1] #> [[879]] #> SeqRec [ID: AF132763.1] #> [[880]] #> SeqRec [ID: AF132762.1] #> [[881]] #> SeqRec [ID: AF132761.1] #> [[882]] #> SeqRec [ID: AF132760.1] #> [[883]] #> SeqRec [ID: AF132759.1] #> [[884]] #> SeqRec [ID: AF132758.1] #> [[885]] #> SeqRec [ID: AF132756.1] #> [[886]] #> SeqRec [ID: AF132755.1] #> [[887]] #> SeqRec [ID: AF129808.1] #> [[888]] #> SeqRec [ID: AF129807.1] #> [[889]] #> SeqRec [ID: AF129806.1] #> [[890]] #> SeqRec [ID: AF129805.1] #> [[891]] #> SeqRec [ID: AF129804.1] #> [[892]] #> SeqRec [ID: AF129803.1] #> [[893]] #> SeqRec [ID: AF129802.1] #> [[894]] #> SeqRec [ID: AF129801.1] #> [[895]] #> SeqRec [ID: AF129800.1] #> [[896]] #> SeqRec [ID: AF129799.1] #> [[897]] #> SeqRec [ID: AF129798.1] #> [[898]] #> SeqRec [ID: AF129796.1] #> [[899]] #> SeqRec [ID: AF129795.1] #> [[900]] #> SeqRec [ID: AF129794.1] #> [[901]] #> SeqRec [ID: AF129793.1] #> [[902]] #> SeqRec [ID: AF129792.1] #> [[903]] #> SeqRec [ID: AF185633.1] #> [[904]] #> SeqRec [ID: AF185632.1] #> [[905]] #> SeqRec [ID: AY563202.2] #> [[906]] #> SeqRec [ID: AY563201.2] #> [[907]] #> SeqRec [ID: AY563200.2] #> [[908]] #> SeqRec [ID: AY563199.2] #> [[909]] #> SeqRec [ID: AY563198.2] #> [[910]] #> SeqRec [ID: AY563197.2] #> [[911]] #> SeqRec [ID: AY563196.2] #> [[912]] #> SeqRec [ID: AY563195.2] #> [[913]] #> SeqRec [ID: AY563194.2] #> [[914]] #> SeqRec [ID: AY563193.2] #> [[915]] #> SeqRec [ID: AY563192.2] #> [[916]] #> SeqRec [ID: AY563191.2] #> [[917]] #> SeqRec [ID: AY563190.2] #> [[918]] #> SeqRec [ID: AY563189.2] #> [[919]] #> SeqRec [ID: AY563188.2] #> [[920]] #> SeqRec [ID: AY563186.2] #> [[921]] #> SeqRec [ID: AY563185.2] #> [[922]] #> SeqRec [ID: AY563184.2] #> [[923]] #> SeqRec [ID: AY563183.2] #> [[924]] #> SeqRec [ID: AY563182.2] #> [[925]] #> SeqRec [ID: AY563181.2] #> [[926]] #> SeqRec [ID: AY563180.2] #> [[927]] #> SeqRec [ID: AY972694.1] #> [[928]] #> SeqRec [ID: AY900570.1] #> [[929]] #> SeqRec [ID: AY900566.1] #> [[930]] #> SeqRec [ID: AY900565.1] #> [[931]] #> SeqRec [ID: AY900564.1] #> [[932]] #> SeqRec [ID: AY900561.1] #> [[933]] #> SeqRec [ID: AY900560.1] #> [[934]] #> SeqRec [ID: AY900559.1] #> [[935]] #> SeqRec [ID: AY900557.1] #> [[936]] #> SeqRec [ID: AY900556.1] #> [[937]] #> SeqRec [ID: AY900554.1] #> [[938]] #> SeqRec [ID: AY900553.1] #> [[939]] #> SeqRec [ID: AY900552.1] #> [[940]] #> SeqRec [ID: AY900550.1] #> [[941]] #> SeqRec [ID: AY900549.1] #> [[942]] #> SeqRec [ID: AY900548.1] #> [[943]] #> SeqRec [ID: AY900547.1] #> [[944]] #> SeqRec [ID: AY900546.1] #> [[945]] #> SeqRec [ID: AY900544.1] #> [[946]] #> SeqRec [ID: AY900539.1] #> [[947]] #> SeqRec [ID: AY900538.1] #> [[948]] #> SeqRec [ID: AY900537.1] #> [[949]] #> SeqRec [ID: AY900536.1] #> [[950]] #> SeqRec [ID: AY900535.1] #> [[951]] #> SeqRec [ID: AY900534.1] #> [[952]] #> SeqRec [ID: AY900533.1] #> [[953]] #> SeqRec [ID: AY900532.1] #> [[954]] #> SeqRec [ID: AY900531.1] #> [[955]] #> SeqRec [ID: AY900530.1] #> [[956]] #> SeqRec [ID: AY900529.1] #> [[957]] #> SeqRec [ID: AY900528.1] #> [[958]] #> SeqRec [ID: AY900527.1] #> [[959]] #> SeqRec [ID: AY900524.1] #> [[960]] #> SeqRec [ID: AY900520.1] #> [[961]] #> SeqRec [ID: AY659852.1] #> [[962]] #> SeqRec [ID: AY659851.1] #> [[963]] #> SeqRec [ID: AY659850.1] #> [[964]] #> SeqRec [ID: AY659849.1] #> [[965]] #> SeqRec [ID: AY659848.1] #> [[966]] #> SeqRec [ID: AY659847.1] #> [[967]] #> SeqRec [ID: AY659846.1] #> [[968]] #> SeqRec [ID: AY659845.1] #> [[969]] #> SeqRec [ID: AY659844.1] #> [[970]] #> SeqRec [ID: AY659843.1] #> [[971]] #> SeqRec [ID: AY659842.1] #> [[972]] #> SeqRec [ID: AY659841.1] #> [[973]] #> SeqRec [ID: AY659840.1] #> [[974]] #> SeqRec [ID: AY659839.1] #> [[975]] #> SeqRec [ID: AY659838.1] #> [[976]] #> SeqRec [ID: AY659837.1] #> [[977]] #> SeqRec [ID: AY659836.1] #> [[978]] #> SeqRec [ID: AY659835.1] #> [[979]] #> SeqRec [ID: AY493661.1] #> [[980]] #> SeqRec [ID: AY245688.1] #> [[981]] #> SeqRec [ID: AY245687.1] #> [[982]] #> SeqRec [ID: AY245686.1] #> [[983]] #> SeqRec [ID: AY245685.1] #> [[984]] #> SeqRec [ID: AY245684.1] #> [[985]] #> SeqRec [ID: AY245683.1] #> [[986]] #> SeqRec [ID: AY245682.1] #> [[987]] #> SeqRec [ID: AY245681.1] #> [[988]] #> SeqRec [ID: AY245680.1] #> [[989]] #> SeqRec [ID: MT483724.1] #> [[990]] #> SeqRec [ID: MT483722.1] #> [[991]] #> SeqRec [ID: MT483721.1] #> [[992]] #> SeqRec [ID: MT483720.1] #> [[993]] #> SeqRec [ID: MT483719.1] #> [[994]] #> SeqRec [ID: MF615384.1] #> [[995]] #> SeqRec [ID: MF615383.1] #> [[996]] #> SeqRec [ID: MF615382.1] #> [[997]] #> SeqRec [ID: MF615375.1] #> [[998]] #> SeqRec [ID: MF615374.1] #> [[999]] #> SeqRec [ID: MF615373.1] #> [[1000]] #> SeqRec [ID: MF615372.1] #> [[1001]] #> SeqRec [ID: MF615371.1] #> [[1002]] #> SeqRec [ID: MF632279.1] #> [[1003]] #> SeqRec [ID: KR902343.1] #> [[1004]] #> SeqRec [ID: DQ321660.1] #> [[1005]] #> SeqRec [ID: DQ321659.1] #> [[1006]] #> SeqRec [ID: DQ162705.1] #> [[1007]] #> SeqRec [ID: DQ162704.1] #> [[1008]] #> SeqRec [ID: DQ162699.1] #> [[1009]] #> SeqRec [ID: DQ162688.1] #> [[1010]] #> SeqRec [ID: DQ162683.1] #> [[1011]] #> SeqRec [ID: DQ162682.1] #> [[1012]] #> SeqRec [ID: DQ162679.1] #> [[1013]] #> SeqRec [ID: DQ162676.1] #> [[1014]] #> SeqRec [ID: DQ162668.1] #> [[1015]] #> SeqRec [ID: DQ162661.1] #> [[1016]] #> SeqRec [ID: DQ162660.1] #> [[1017]] #> SeqRec [ID: DQ162648.1] #> [[1018]] #> SeqRec [ID: DQ162647.1] #> [[1019]] #> SeqRec [ID: DQ162646.1] #> [[1020]] #> SeqRec [ID: DQ162645.1] #> [[1021]] #> SeqRec [ID: AY563255.2] #> [[1022]] #> SeqRec [ID: AY563239.2] #> [[1023]] #> SeqRec [ID: AY563237.2] #> [[1024]] #> SeqRec [ID: AY563236.2] #> [[1025]] #> SeqRec [ID: AY563234.2] #> [[1026]] #> SeqRec [ID: AY563233.2] #> [[1027]] #> SeqRec [ID: AY563232.2] #> [[1028]] #> SeqRec [ID: AY563231.2] #> [[1029]] #> SeqRec [ID: AY563230.2] #> [[1030]] #> SeqRec [ID: AY563228.2] #> [[1031]] #> SeqRec [ID: AY563225.2] #> [[1032]] #> SeqRec [ID: AY563224.2] #> [[1033]] #> SeqRec [ID: AY563223.2] #> [[1034]] #> SeqRec [ID: AY563222.2] #> [[1035]] #> SeqRec [ID: AY563221.2] #> [[1036]] #> SeqRec [ID: AY563220.2] #> [[1037]] #> SeqRec [ID: AY563218.2] #> [[1038]] #> SeqRec [ID: AY563217.2] #> [[1039]] #> SeqRec [ID: AY563216.2] #> [[1040]] #> SeqRec [ID: AY563215.2] #> [[1041]] #> SeqRec [ID: AY563214.2] #> [[1042]] #> SeqRec [ID: AY563213.2] #> [[1043]] #> SeqRec [ID: AY563212.2] #> [[1044]] #> SeqRec [ID: AY563211.2] #> [[1045]] #> SeqRec [ID: AY563210.2] #> [[1046]] #> SeqRec [ID: AY563209.2] #> [[1047]] #> SeqRec [ID: AY563208.2] #> [[1048]] #> SeqRec [ID: AY563207.2] #> [[1049]] #> SeqRec [ID: AY563206.2] #> [[1050]] #> SeqRec [ID: AY563204.2] #> [[1051]] #> SeqRec [ID: AY563203.2] #> [[1052]] #> SeqRec [ID: MW321654.1] #> [[1053]] #> SeqRec [ID: MW321653.1] #> [[1054]] #> SeqRec [ID: MT489138.1] #> [[1055]] #> SeqRec [ID: MT489125.1] #> [[1056]] #> SeqRec [ID: MT489124.1] #> [[1057]] #> SeqRec [ID: MT489122.1] #> [[1058]] #> SeqRec [ID: MT489121.1] #> [[1059]] #> SeqRec [ID: MT489120.1] #> [[1060]] #> SeqRec [ID: MT489119.1] #> [[1061]] #> SeqRec [ID: MT489093.1] #> [[1062]] #> SeqRec [ID: MT489082.1] #> [[1063]] #> SeqRec [ID: MT489081.1] #> [[1064]] #> SeqRec [ID: MT489079.1] #> [[1065]] #> SeqRec [ID: MT489078.1] #> [[1066]] #> SeqRec [ID: MT489077.1] #> [[1067]] #> SeqRec [ID: MT489051.1] #> [[1068]] #> SeqRec [ID: MT489039.1] #> [[1069]] #> SeqRec [ID: MT489038.1] #> [[1070]] #> SeqRec [ID: MT489036.1] #> [[1071]] #> SeqRec [ID: MT489035.1] #> [[1072]] #> SeqRec [ID: MT489034.1] #> [[1073]] #> SeqRec [ID: MT489008.1] #> [[1074]] #> SeqRec [ID: MT488997.1] #> [[1075]] #> SeqRec [ID: MT488996.1] #> [[1076]] #> SeqRec [ID: MT488994.1] #> [[1077]] #> SeqRec [ID: MT488993.1] #> [[1078]] #> SeqRec [ID: MT488992.1] #> [[1079]] #> SeqRec [ID: MT488966.1] #> [[1080]] #> SeqRec [ID: MT488954.1] #> [[1081]] #> SeqRec [ID: MT488953.1] #> [[1082]] #> SeqRec [ID: MT488951.1] #> [[1083]] #> SeqRec [ID: MT488950.1] #> [[1084]] #> SeqRec [ID: MT488949.1] #> [[1085]] #> SeqRec [ID: MT488923.1] #> [[1086]] #> SeqRec [ID: MT488911.1] #> [[1087]] #> SeqRec [ID: MT488910.1] #> [[1088]] #> SeqRec [ID: MT488908.1] #> [[1089]] #> SeqRec [ID: MT488907.1] #> [[1090]] #> SeqRec [ID: MT488906.1] #> [[1091]] #> SeqRec [ID: MT488880.1] #> [[1092]] #> SeqRec [ID: MT488869.1] #> [[1093]] #> SeqRec [ID: MT488868.1] #> [[1094]] #> SeqRec [ID: MT488866.1] #> [[1095]] #> SeqRec [ID: MT488865.1] #> [[1096]] #> SeqRec [ID: MT488864.1] #> [[1097]] #> SeqRec [ID: MT488863.1] #> [[1098]] #> SeqRec [ID: MT488837.1] #> [[1099]] #> SeqRec [ID: MT488828.1] #> [[1100]] #> SeqRec [ID: MT488827.1] #> [[1101]] #> SeqRec [ID: MT488825.1] #> [[1102]] #> SeqRec [ID: MT488824.1] #> [[1103]] #> SeqRec [ID: MT488823.1] #> [[1104]] #> SeqRec [ID: MT488798.1] #> [[1105]] #> SeqRec [ID: MT488786.1] #> [[1106]] #> SeqRec [ID: MT488785.1] #> [[1107]] #> SeqRec [ID: MT488783.1] #> [[1108]] #> SeqRec [ID: MT488782.1] #> [[1109]] #> SeqRec [ID: MT488781.1] #> [[1110]] #> SeqRec [ID: MT488780.1] #> [[1111]] #> SeqRec [ID: MT488754.1] #> [[1112]] #> SeqRec [ID: MT488742.1] #> [[1113]] #> SeqRec [ID: MT488741.1] #> [[1114]] #> SeqRec [ID: MT488739.1] #> [[1115]] #> SeqRec [ID: MT488738.1] #> [[1116]] #> SeqRec [ID: MT488737.1] #> [[1117]] #> SeqRec [ID: MT488736.1] #> [[1118]] #> SeqRec [ID: MT488654.1] #> [[1119]] #> SeqRec [ID: MT488653.1] #> [[1120]] #> SeqRec [ID: MT488652.1] #> [[1121]] #> SeqRec [ID: MT488650.1] #> [[1122]] #> SeqRec [ID: MT488649.1] #> [[1123]] #> SeqRec [ID: MT488648.1] #> [[1124]] #> SeqRec [ID: MT488590.1] #> [[1125]] #> SeqRec [ID: MT488577.1] #> [[1126]] #> SeqRec [ID: MT488576.1] #> [[1127]] #> SeqRec [ID: MT488574.1] #> [[1128]] #> SeqRec [ID: MT488573.1] #> [[1129]] #> SeqRec [ID: MT488572.1] #> [[1130]] #> SeqRec [ID: MT488571.1] #> [[1131]] #> SeqRec [ID: MT492187.1] #> [[1132]] #> SeqRec [ID: MT492178.1] #> [[1133]] #> SeqRec [ID: MT492177.1] #> [[1134]] #> SeqRec [ID: MT492175.1] #> [[1135]] #> SeqRec [ID: MT492174.1] #> [[1136]] #> SeqRec [ID: MT492173.1] #> [[1137]] #> SeqRec [ID: MT483738.1] #> [[1138]] #> SeqRec [ID: MT483725.1] #> [[1139]] #> SeqRec [ID: HM762767.1] #> [[1140]] #> SeqRec [ID: HM762766.1] #> [[1141]] #> SeqRec [ID: HM762765.1] #> [[1142]] #> SeqRec [ID: HM762863.1] #> [[1143]] #> SeqRec [ID: HM763019.1] #> [[1144]] #> SeqRec [ID: HM763263.1] #> [[1145]] #> SeqRec [ID: HM763262.1] #> [[1146]] #> SeqRec [ID: HM763261.1] #> [[1147]] #> SeqRec [ID: HM763431.1] #> [[1148]] #> SeqRec [ID: HM763430.1] #> [[1149]] #> SeqRec [ID: HM763429.1] #> [[1150]] #> SeqRec [ID: HM763724.1] #> [[1151]] #> SeqRec [ID: HM763723.1] #> [[1152]] #> SeqRec [ID: HM763722.1] #> [[1153]] #> SeqRec [ID: HM763994.1] #> [[1154]] #> SeqRec [ID: HM764188.1] #> [[1155]] #> SeqRec [ID: HM764187.1] #> [[1156]] #> SeqRec [ID: HM764102.1] #> [[1157]] #> SeqRec [ID: HM764319.1] #> [[1158]] #> SeqRec [ID: HM764318.1] #> [[1159]] #> SeqRec [ID: HM764317.1] #> [[1160]] #> SeqRec [ID: HM764402.1] #> [[1161]] #> SeqRec [ID: HM764646.1] #> [[1162]] #> SeqRec [ID: HM764645.1] #> [[1163]] #> SeqRec [ID: HM764814.1] #> [[1164]] #> SeqRec [ID: HM764813.1] #> [[1165]] #> SeqRec [ID: HM765068.1] #> [[1166]] #> SeqRec [ID: HM764910.1] #> [[1167]] #> SeqRec [ID: HM764909.1] #> [[1168]] #> SeqRec [ID: HM765177.1] #> [[1169]] #> SeqRec [ID: HM765176.1] #> [[1170]] #> SeqRec [ID: HM765175.1] #> [[1171]] #> SeqRec [ID: AF420045.1] #> [[1172]] #> SeqRec [ID: AY449080.1] #> [[1173]] #> SeqRec [ID: AY449079.1] #> [[1174]] #> SeqRec [ID: AY449071.1] #> [[1175]] #> SeqRec [ID: AY449070.1] #> [[1176]] #> SeqRec [ID: AY449069.1] #> [[1177]] #> SeqRec [ID: AY449065.1] #> [[1178]] #> SeqRec [ID: AY449059.1] #> [[1179]] #> SeqRec [ID: AY449058.1] #> [[1180]] #> SeqRec [ID: AY449057.1] #> [[1181]] #> SeqRec [ID: HM756917.1] #> [[1182]] #> SeqRec [ID: HM756916.1] #> [[1183]] #> SeqRec [ID: HM756838.1] #> [[1184]] #> SeqRec [ID: HM757001.1] #> [[1185]] #> SeqRec [ID: HM757000.1] #> [[1186]] #> SeqRec [ID: HM756999.1] #> [[1187]] #> SeqRec [ID: HM757381.1] #> [[1188]] #> SeqRec [ID: HM757380.1] #> [[1189]] #> SeqRec [ID: HM757379.1] #> [[1190]] #> SeqRec [ID: HM757556.1] #> [[1191]] #> SeqRec [ID: HM757555.1] #> [[1192]] #> SeqRec [ID: HM757554.1] #> [[1193]] #> SeqRec [ID: HM757722.1] #> [[1194]] #> SeqRec [ID: HM757721.1] #> [[1195]] #> SeqRec [ID: HM757720.1] #> [[1196]] #> SeqRec [ID: HM757999.1] #> [[1197]] #> SeqRec [ID: HM758214.1] #> [[1198]] #> SeqRec [ID: HM758213.1] #> [[1199]] #> SeqRec [ID: HM758212.1] #> [[1200]] #> SeqRec [ID: HM758450.1] #> [[1201]] #> SeqRec [ID: HM758304.1] #> [[1202]] #> SeqRec [ID: HM758303.1] #> [[1203]] #> SeqRec [ID: HM758476.1] #> [[1204]] #> SeqRec [ID: HM758475.1] #> [[1205]] #> SeqRec [ID: HM758463.1] #> [[1206]] #> SeqRec [ID: HM758660.1] #> [[1207]] #> SeqRec [ID: HM758659.1] #> [[1208]] #> SeqRec [ID: HM758658.1] #> [[1209]] #> SeqRec [ID: HM758657.1] #> [[1210]] #> SeqRec [ID: HM758656.1] #> [[1211]] #> SeqRec [ID: HM758932.1] #> [[1212]] #> SeqRec [ID: HM758931.1] #> [[1213]] #> SeqRec [ID: HM758930.1] #> [[1214]] #> SeqRec [ID: HM759103.1] #> [[1215]] #> SeqRec [ID: HM759102.1] #> [[1216]] #> SeqRec [ID: HM759101.1] #> [[1217]] #> SeqRec [ID: HM759276.1] #> [[1218]] #> SeqRec [ID: HM759275.1] #> [[1219]] #> SeqRec [ID: HM759274.1] #> [[1220]] #> SeqRec [ID: HM759273.1] #> [[1221]] #> SeqRec [ID: HM759535.1] #> [[1222]] #> SeqRec [ID: HM759379.1] #> [[1223]] #> SeqRec [ID: HM759378.1] #> [[1224]] #> SeqRec [ID: HM759644.1] #> [[1225]] #> SeqRec [ID: HM759643.1] #> [[1226]] #> SeqRec [ID: HM759641.1] #> [[1227]] #> SeqRec [ID: HM759836.1] #> [[1228]] #> SeqRec [ID: HM759777.1] #> [[1229]] #> SeqRec [ID: HM759775.1] #> [[1230]] #> SeqRec [ID: HM760059.1] #> [[1231]] #> SeqRec [ID: HM759903.1] #> [[1232]] #> SeqRec [ID: HM759902.1] #> [[1233]] #> SeqRec [ID: HM760239.1] #> [[1234]] #> SeqRec [ID: HM760087.1] #> [[1235]] #> SeqRec [ID: HM760086.1] #> [[1236]] #> SeqRec [ID: HM760421.1] #> [[1237]] #> SeqRec [ID: HM760263.1] #> [[1238]] #> SeqRec [ID: HM760262.1] #> [[1239]] #> SeqRec [ID: HM760527.1] #> [[1240]] #> SeqRec [ID: HM760526.1] #> [[1241]] #> SeqRec [ID: HM760525.1] #> [[1242]] #> SeqRec [ID: HM760615.1] #> [[1243]] #> SeqRec [ID: HM760614.1] #> [[1244]] #> SeqRec [ID: HM760759.1] #> [[1245]] #> SeqRec [ID: HM761011.1] #> [[1246]] #> SeqRec [ID: HM761143.1] #> [[1247]] #> SeqRec [ID: HM761207.1] #> [[1248]] #> SeqRec [ID: HM761206.1] #> [[1249]] #> SeqRec [ID: HM761193.1] #> [[1250]] #> SeqRec [ID: HM761664.1] #> [[1251]] #> SeqRec [ID: HM761514.1] #> [[1252]] #> SeqRec [ID: HM761513.1] #> [[1253]] #> SeqRec [ID: HM761770.1] #> [[1254]] #> SeqRec [ID: HM761769.1] #> [[1255]] #> SeqRec [ID: HM761768.1] #> [[1256]] #> SeqRec [ID: HM761927.1] #> [[1257]] #> SeqRec [ID: HM761926.1] #> [[1258]] #> SeqRec [ID: HM761925.1] #> [[1259]] #> SeqRec [ID: HM762094.1] #> [[1260]] #> SeqRec [ID: HM762093.1] #> [[1261]] #> SeqRec [ID: HM762092.1] #> [[1262]] #> SeqRec [ID: HM762324.1] #> [[1263]] #> SeqRec [ID: HM762181.1] #> [[1264]] #> SeqRec [ID: HM762180.1] #> [[1265]] #> SeqRec [ID: HM762429.1] #> [[1266]] #> SeqRec [ID: HM762428.1] #> [[1267]] #> SeqRec [ID: HM762427.1] #> [[1268]] #> SeqRec [ID: HM762674.1] #> [[1269]] #> SeqRec [ID: HM762517.1] #> [[1270]] #> SeqRec [ID: DQ098868.1] #> [[1271]] #> SeqRec [ID: DQ098867.1] #> [[1272]] #> SeqRec [ID: DQ098856.1] #> [[1273]] #> SeqRec [ID: DQ098855.1] #> [[1274]] #> SeqRec [ID: AY455159.1] #> [[1275]] #> SeqRec [ID: AY455158.1] #> [[1276]] #> SeqRec [ID: AY455153.1] #> [[1277]] #> SeqRec [ID: U36846.1] #> [[1278]] #> SeqRec [ID: JN161098.1] #> [[1279]] #> SeqRec [ID: JN161097.1] #> [[1280]] #> SeqRec [ID: JN161096.1] #> [[1281]] #> SeqRec [ID: JN161095.1] #> [[1282]] #> SeqRec [ID: JN161094.1] #> [[1283]] #> SeqRec [ID: JN161093.1] #> [[1284]] #> SeqRec [ID: JN161092.1] #> [[1285]] #> SeqRec [ID: JN161091.1] #> [[1286]] #> SeqRec [ID: JN161090.1] #> [[1287]] #> SeqRec [ID: JN161089.1] #> [[1288]] #> SeqRec [ID: JN161088.1] #> [[1289]] #> SeqRec [ID: JN161087.1] #> [[1290]] #> SeqRec [ID: JN161086.1] #> [[1291]] #> SeqRec [ID: JN161085.1] #> [[1292]] #> SeqRec [ID: JN161084.1] #> [[1293]] #> SeqRec [ID: JN161083.1] #> [[1294]] #> SeqRec [ID: JN161082.1] #> [[1295]] #> SeqRec [ID: JN161081.1] #> [[1296]] #> SeqRec [ID: JN161080.1] #> [[1297]] #> SeqRec [ID: JN161079.1] #> [[1298]] #> SeqRec [ID: JN161078.1] #> [[1299]] #> SeqRec [ID: JN161077.1] #> [[1300]] #> SeqRec [ID: JN161076.1] #> [[1301]] #> SeqRec [ID: JN161075.1] #> [[1302]] #> SeqRec [ID: JN161074.1] #> [[1303]] #> SeqRec [ID: JN161073.1] #> [[1304]] #> SeqRec [ID: JN161072.1] #> [[1305]] #> SeqRec [ID: JN161071.1] #> [[1306]] #> SeqRec [ID: JN161070.1] #> [[1307]] #> SeqRec [ID: JN161069.1] #> [[1308]] #> SeqRec [ID: EF658653.1] #> [[1309]] #> SeqRec [ID: EF658652.1] #> [[1310]] #> SeqRec [ID: DQ989366.1] #> [[1311]] #> SeqRec [ID: KC762195.1] #> [[1312]] #> SeqRec [ID: KC762162.1] #> [[1313]] #> SeqRec [ID: KC762129.1] #> [[1314]] #> SeqRec [ID: KC762105.1] #> [[1315]] #> SeqRec [ID: KC762074.1] #> [[1316]] #> SeqRec [ID: KC762016.1] #> [[1317]] #> SeqRec [ID: KC761982.1] #> [[1318]] #> SeqRec [ID: KC761953.1] #> [[1319]] #> SeqRec [ID: KC761920.1] #> [[1320]] #> SeqRec [ID: KC761891.1] #> [[1321]] #> SeqRec [ID: KC761835.1] #> [[1322]] #> SeqRec [ID: KC761815.1] #> [[1323]] #> SeqRec [ID: KC761784.1] #> [[1324]] #> SeqRec [ID: KC761757.1] #> [[1325]] #> SeqRec [ID: KC761697.1] #> [[1326]] #> SeqRec [ID: KC761634.1] #> [[1327]] #> SeqRec [ID: KC761603.1] #> [[1328]] #> SeqRec [ID: KC761571.1] #> [[1329]] #> SeqRec [ID: KC761539.1] #> [[1330]] #> SeqRec [ID: KC761506.1] #> [[1331]] #> SeqRec [ID: KC761472.1] #> [[1332]] #> SeqRec [ID: KC761440.1] #> [[1333]] #> SeqRec [ID: KC761407.1] #> [[1334]] #> SeqRec [ID: KC761372.1] #> [[1335]] #> SeqRec [ID: KC761340.1] #> [[1336]] #> SeqRec [ID: KC761278.1] #> [[1337]] #> SeqRec [ID: KC761244.1] #> [[1338]] #> SeqRec [ID: KC761211.1] #> [[1339]] #> SeqRec [ID: KC761179.1] #> [[1340]] #> SeqRec [ID: KC761146.1] #> [[1341]] #> SeqRec [ID: KC761112.1] #> [[1342]] #> SeqRec [ID: KC761082.1] #> [[1343]] #> SeqRec [ID: KC761052.1] #> [[1344]] #> SeqRec [ID: KC761018.1] #> [[1345]] #> SeqRec [ID: KC760990.1] #> [[1346]] #> SeqRec [ID: KC760956.1] #> [[1347]] #> SeqRec [ID: KC760893.1] #> [[1348]] #> SeqRec [ID: KC760868.1] #> [[1349]] #> SeqRec [ID: KC760835.1] #> [[1350]] #> SeqRec [ID: KC760804.1] #> [[1351]] #> SeqRec [ID: KC760772.1] #> [[1352]] #> SeqRec [ID: KC760740.1] #> [[1353]] #> SeqRec [ID: KC760714.1] #> [[1354]] #> SeqRec [ID: KC760683.1] #> [[1355]] #> SeqRec [ID: KC760648.1] #> [[1356]] #> SeqRec [ID: KC760613.1] #> [[1357]] #> SeqRec [ID: KC760578.1] #> [[1358]] #> SeqRec [ID: KC760516.1] #> [[1359]] #> SeqRec [ID: KC760485.1] #> [[1360]] #> SeqRec [ID: KC760452.1] #> [[1361]] #> SeqRec [ID: KC760419.1] #> [[1362]] #> SeqRec [ID: KC760387.1] #> [[1363]] #> SeqRec [ID: KC760328.1] #> [[1364]] #> SeqRec [ID: KC760265.1] #> [[1365]] #> SeqRec [ID: KC760230.1] #> [[1366]] #> SeqRec [ID: AB762011.1] #> [[1367]] #> SeqRec [ID: AB762010.1] #> [[1368]] #> SeqRec [ID: AB762009.1] #> [[1369]] #> SeqRec [ID: AB762008.1] #> [[1370]] #> SeqRec [ID: AB762007.1] #> [[1371]] #> SeqRec [ID: AB762006.1] #> [[1372]] #> SeqRec [ID: AB762005.1] #> [[1373]] #> SeqRec [ID: AB762004.1] #> [[1374]] #> SeqRec [ID: AB762003.1] #> [[1375]] #> SeqRec [ID: AB762002.1] #> [[1376]] #> SeqRec [ID: AB762001.1] #> [[1377]] #> SeqRec [ID: AB762000.1] #> [[1378]] #> SeqRec [ID: AB761999.1] #> [[1379]] #> SeqRec [ID: AB761998.1] #> [[1380]] #> SeqRec [ID: AB761997.1] #> [[1381]] #> SeqRec [ID: AB761996.1] #> [[1382]] #> SeqRec [ID: AB761995.1] #> [[1383]] #> SeqRec [ID: AB761994.1] #> [[1384]] #> SeqRec [ID: AB761993.1] #> [[1385]] #> SeqRec [ID: AB761992.1] #> [[1386]] #> SeqRec [ID: AB761991.1] #> [[1387]] #> SeqRec [ID: AB761990.1] #> [[1388]] #> SeqRec [ID: AB761989.1] #> [[1389]] #> SeqRec [ID: AB761988.1] #> [[1390]] #> SeqRec [ID: AB761987.1] #> [[1391]] #> SeqRec [ID: AB761986.1] #> [[1392]] #> SeqRec [ID: KY459145.1] #> [[1393]] #> SeqRec [ID: KY459130.1] #> [[1394]] #> SeqRec [ID: KY459090.1] #> [[1395]] #> SeqRec [ID: KY459079.1] #> [[1396]] #> SeqRec [ID: KY459060.1] #> [[1397]] #> SeqRec [ID: KY459033.1] #> [[1398]] #> SeqRec [ID: KY459012.1] #> [[1399]] #> SeqRec [ID: KY458997.1] #> [[1400]] #> SeqRec [ID: MF632278.1] #> [[1401]] #> SeqRec [ID: MF632277.1] #> [[1402]] #> SeqRec [ID: MF632276.1] #> [[1403]] #> SeqRec [ID: KR902342.1] #> [[1404]] #> SeqRec [ID: LC075899.1] #> [[1405]] #> SeqRec [ID: LC075898.1] #> [[1406]] #> SeqRec [ID: LC075897.1] #> [[1407]] #> SeqRec [ID: LC075896.1] #> [[1408]] #> SeqRec [ID: LC075895.1] #> [[1409]] #> SeqRec [ID: LC075894.1] #> [[1410]] #> SeqRec [ID: LC075893.1] #> [[1411]] #> SeqRec [ID: LC075892.1] #> [[1412]] #> SeqRec [ID: LC075891.1] #> [[1413]] #> SeqRec [ID: LC075890.1] #> [[1414]] #> SeqRec [ID: LC075889.1] #> [[1415]] #> SeqRec [ID: LC075888.1] #> [[1416]] #> SeqRec [ID: LC075887.1] #> [[1417]] #> SeqRec [ID: LC075886.1] #> [[1418]] #> SeqRec [ID: LC075885.1] #> [[1419]] #> SeqRec [ID: AF338376.1] #> [[1420]] #> SeqRec [ID: AF338375.1] #> [[1421]] #> SeqRec [ID: DQ321670.1] #> [[1422]] #> SeqRec [ID: DQ321668.1] #> [[1423]] #> SeqRec [ID: DQ321667.1] #> [[1424]] #> SeqRec [ID: DQ321663.1] #> [[1425]] #> SeqRec [ID: DQ321662.1] #> [[1426]] #> SeqRec [ID: DQ098866.1] #> [[1427]] #> SeqRec [ID: DQ098865.1] #> [[1428]] #> SeqRec [ID: DQ098864.1] #> [[1429]] #> SeqRec [ID: DQ098863.1] #> [[1430]] #> SeqRec [ID: DQ098854.1] #> [[1431]] #> SeqRec [ID: DQ098853.1] #> [[1432]] #> SeqRec [ID: DQ098852.1] #> [[1433]] #> SeqRec [ID: DQ098851.1] #> [[1434]] #> SeqRec [ID: AY429143.1] #> [[1435]] #> SeqRec [ID: AY429142.1] #> [[1436]] #> SeqRec [ID: JN161068.1] #> [[1437]] #> SeqRec [ID: JN161067.1] #> [[1438]] #> SeqRec [ID: JN161066.1] #> [[1439]] #> SeqRec [ID: JN161065.1] #> [[1440]] #> SeqRec [ID: JN161064.1] #> [[1441]] #> SeqRec [ID: JN161063.1] #> [[1442]] #> SeqRec [ID: JN161062.1] #> [[1443]] #> SeqRec [ID: HQ005496.1] #> [[1444]] #> SeqRec [ID: HQ005495.1] #> [[1445]] #> SeqRec [ID: HQ005494.1] #> [[1446]] #> SeqRec [ID: HQ005493.1] #> [[1447]] #> SeqRec [ID: HQ005492.1] #> [[1448]] #> SeqRec [ID: HQ018924.1] #> [[1449]] #> SeqRec [ID: HQ018923.1] #> [[1450]] #> SeqRec [ID: AF181085.1] #> [[1451]] #> SeqRec [ID: EF658656.1] #> [[1452]] #> SeqRec [ID: EF658655.1] #> [[1453]] #> SeqRec [ID: EF658654.1] #> [[1454]] #> SeqRec [ID: MT483707.1] #> [[1455]] #> SeqRec [ID: MT483705.1] #> [[1456]] #> SeqRec [ID: MT483704.1] #> [[1457]] #> SeqRec [ID: MT483703.1] #> [[1458]] #> SeqRec [ID: EU179517.1] #> [[1459]] #> SeqRec [ID: EU179516.1] #> [[1460]] #> SeqRec [ID: LC456056.1] #> [[1461]] #> SeqRec [ID: LC456052.1] #> [[1462]] #> SeqRec [ID: LC456048.1] #> [[1463]] #> SeqRec [ID: LC456044.1] #> [[1464]] #> SeqRec [ID: LC456040.1] #> [[1465]] #> SeqRec [ID: LC456036.1] #> [[1466]] #> SeqRec [ID: LC456032.1] #> [[1467]] #> SeqRec [ID: LC456028.1] #> [[1468]] #> SeqRec [ID: LC456024.1] #> [[1469]] #> SeqRec [ID: LC456020.1] #> [[1470]] #> SeqRec [ID: LC456016.1] #> [[1471]] #> SeqRec [ID: LC456012.1] #> [[1472]] #> SeqRec [ID: LC456008.1] #> [[1473]] #> SeqRec [ID: LC456004.1] #> [[1474]] #> SeqRec [ID: LC456000.1] #> [[1475]] #> SeqRec [ID: LC455994.1] #> [[1476]] #> SeqRec [ID: LC456057.1] #> [[1477]] #> SeqRec [ID: LC456053.1] #> [[1478]] #> SeqRec [ID: LC456049.1] #> [[1479]] #> SeqRec [ID: LC456045.1] #> [[1480]] #> SeqRec [ID: LC456041.1] #> [[1481]] #> SeqRec [ID: LC456037.1] #> [[1482]] #> SeqRec [ID: LC456033.1] #> [[1483]] #> SeqRec [ID: LC456029.1] #> [[1484]] #> SeqRec [ID: LC456025.1] #> [[1485]] #> SeqRec [ID: LC456021.1] #> [[1486]] #> SeqRec [ID: LC456017.1] #> [[1487]] #> SeqRec [ID: LC456013.1] #> [[1488]] #> SeqRec [ID: LC456009.1] #> [[1489]] #> SeqRec [ID: LC456005.1] #> [[1490]] #> SeqRec [ID: LC456001.1] #> [[1491]] #> SeqRec [ID: LC455995.1] #> [[1492]] #> SeqRec [ID: LC456054.1] #> [[1493]] #> SeqRec [ID: LC456050.1] #> [[1494]] #> SeqRec [ID: LC456046.1] #> [[1495]] #> SeqRec [ID: LC456042.1] #> [[1496]] #> SeqRec [ID: LC456038.1] #> [[1497]] #> SeqRec [ID: LC456034.1] #> [[1498]] #> SeqRec [ID: LC456030.1] #> [[1499]] #> SeqRec [ID: LC456026.1] #> [[1500]] #> SeqRec [ID: LC456022.1] #> [[1501]] #> SeqRec [ID: LC456018.1] #> [[1502]] #> SeqRec [ID: LC456014.1] #> [[1503]] #> SeqRec [ID: LC456010.1] #> [[1504]] #> SeqRec [ID: LC456006.1] #> [[1505]] #> SeqRec [ID: LC456002.1] #> [[1506]] #> SeqRec [ID: LC455998.1] #> [[1507]] #> SeqRec [ID: LC455996.1] #> [[1508]] #> SeqRec [ID: LC456055.1] #> [[1509]] #> SeqRec [ID: LC456051.1] #> [[1510]] #> SeqRec [ID: LC456047.1] #> [[1511]] #> SeqRec [ID: LC456043.1] #> [[1512]] #> SeqRec [ID: LC456039.1] #> [[1513]] #> SeqRec [ID: LC456035.1] #> [[1514]] #> SeqRec [ID: LC456031.1] #> [[1515]] #> SeqRec [ID: LC456027.1] #> [[1516]] #> SeqRec [ID: LC456023.1] #> [[1517]] #> SeqRec [ID: LC456019.1] #> [[1518]] #> SeqRec [ID: LC456015.1] #> [[1519]] #> SeqRec [ID: LC456011.1] #> [[1520]] #> SeqRec [ID: LC456007.1] #> [[1521]] #> SeqRec [ID: LC456003.1] #> [[1522]] #> SeqRec [ID: LC455999.1] #> [[1523]] #> SeqRec [ID: LC455997.1] #> [[1524]] #> SeqRec [ID: KY459979.1] #> [[1525]] #> SeqRec [ID: KY459959.1] #> [[1526]] #> SeqRec [ID: MT488684.1] #> [[1527]] #> SeqRec [ID: MT488683.1] #> [[1528]] #> SeqRec [ID: MT488682.1] #> [[1529]] #> SeqRec [ID: MT488673.1] #> [[1530]] #> SeqRec [ID: MT488668.1] #> [[1531]] #> SeqRec [ID: MT488667.1] #> [[1532]] #> SeqRec [ID: MT488666.1] #> [[1533]] #> SeqRec [ID: MT488665.1] #> [[1534]] #> SeqRec [ID: MT488664.1] #> [[1535]] #> SeqRec [ID: MT488663.1] #> [[1536]] #> SeqRec [ID: MT488662.1] #> [[1537]] #> SeqRec [ID: MT488661.1] #> [[1538]] #> SeqRec [ID: MT488660.1] #> [[1539]] #> SeqRec [ID: MT488651.1] #> [[1540]] #> SeqRec [ID: MT488647.1] #> [[1541]] #> SeqRec [ID: MT488646.1] #> [[1542]] #> SeqRec [ID: MT488645.1] #> [[1543]] #> SeqRec [ID: MT488598.1] #> [[1544]] #> SeqRec [ID: MT488597.1] #> [[1545]] #> SeqRec [ID: MT488596.1] #> [[1546]] #> SeqRec [ID: MT488595.1] #> [[1547]] #> SeqRec [ID: MT488585.1] #> [[1548]] #> SeqRec [ID: MT488584.1] #> [[1549]] #> SeqRec [ID: MT488583.1] #> [[1550]] #> SeqRec [ID: MT488582.1] #> [[1551]] #> SeqRec [ID: MT488581.1] #> [[1552]] #> SeqRec [ID: MT488580.1] #> [[1553]] #> SeqRec [ID: MT488579.1] #> [[1554]] #> SeqRec [ID: MT488575.1] #> [[1555]] #> SeqRec [ID: MT488561.1] #> [[1556]] #> SeqRec [ID: MT488560.1] #> [[1557]] #> SeqRec [ID: MT488559.1] #> [[1558]] #> SeqRec [ID: MT488557.1] #> [[1559]] #> SeqRec [ID: MT488556.1] #> [[1560]] #> SeqRec [ID: MT488555.1] #> [[1561]] #> SeqRec [ID: MT492195.1] #> [[1562]] #> SeqRec [ID: MT492194.1] #> [[1563]] #> SeqRec [ID: MT492193.1] #> [[1564]] #> SeqRec [ID: MT492192.1] #> [[1565]] #> SeqRec [ID: MT492186.1] #> [[1566]] #> SeqRec [ID: MT492185.1] #> [[1567]] #> SeqRec [ID: MT492184.1] #> [[1568]] #> SeqRec [ID: MT492183.1] #> [[1569]] #> SeqRec [ID: MT492182.1] #> [[1570]] #> SeqRec [ID: MT492181.1] #> [[1571]] #> SeqRec [ID: MT492180.1] #> [[1572]] #> SeqRec [ID: MT492176.1] #> [[1573]] #> SeqRec [ID: MT492163.1] #> [[1574]] #> SeqRec [ID: MT492162.1] #> [[1575]] #> SeqRec [ID: MT492161.1] #> [[1576]] #> SeqRec [ID: MT492160.1] #> [[1577]] #> SeqRec [ID: MT492159.1] #> [[1578]] #> SeqRec [ID: MT492158.1] #> [[1579]] #> SeqRec [ID: MT483795.1] #> [[1580]] #> SeqRec [ID: MT483794.1] #> [[1581]] #> SeqRec [ID: MT483793.1] #> [[1582]] #> SeqRec [ID: MT483792.1] #> [[1583]] #> SeqRec [ID: MT483782.1] #> [[1584]] #> SeqRec [ID: MT483781.1] #> [[1585]] #> SeqRec [ID: MT483780.1] #> [[1586]] #> SeqRec [ID: MT483779.1] #> [[1587]] #> SeqRec [ID: MT483778.1] #> [[1588]] #> SeqRec [ID: MT483776.1] #> [[1589]] #> SeqRec [ID: MT483775.1] #> [[1590]] #> SeqRec [ID: MT483772.1] #> [[1591]] #> SeqRec [ID: MT483768.1] #> [[1592]] #> SeqRec [ID: MT483767.1] #> [[1593]] #> SeqRec [ID: MT483766.1] #> [[1594]] #> SeqRec [ID: MT483764.1] #> [[1595]] #> SeqRec [ID: MT483763.1] #> [[1596]] #> SeqRec [ID: MT483753.1] #> [[1597]] #> SeqRec [ID: MT483746.1] #> [[1598]] #> SeqRec [ID: MT483745.1] #> [[1599]] #> SeqRec [ID: MT483744.1] #> [[1600]] #> SeqRec [ID: MT483743.1] #> [[1601]] #> SeqRec [ID: MT483733.1] #> [[1602]] #> SeqRec [ID: MT483732.1] #> [[1603]] #> SeqRec [ID: MT483731.1] #> [[1604]] #> SeqRec [ID: MT483730.1] #> [[1605]] #> SeqRec [ID: MT483729.1] #> [[1606]] #> SeqRec [ID: MT483728.1] #> [[1607]] #> SeqRec [ID: MT483727.1] #> [[1608]] #> SeqRec [ID: MT483723.1] #> [[1609]] #> SeqRec [ID: MT483709.1] #> [[1610]] #> SeqRec [ID: MT483708.1] #> [[1611]] #> SeqRec [ID: MT488939.1] #> [[1612]] #> SeqRec [ID: MT488938.1] #> [[1613]] #> SeqRec [ID: MT488937.1] #> [[1614]] #> SeqRec [ID: MT488935.1] #> [[1615]] #> SeqRec [ID: MT488934.1] #> [[1616]] #> SeqRec [ID: MT488933.1] #> [[1617]] #> SeqRec [ID: MT488931.1] #> [[1618]] #> SeqRec [ID: MT488930.1] #> [[1619]] #> SeqRec [ID: MT488929.1] #> [[1620]] #> SeqRec [ID: MT488928.1] #> [[1621]] #> SeqRec [ID: MT488919.1] #> [[1622]] #> SeqRec [ID: MT488918.1] #> [[1623]] #> SeqRec [ID: MT488916.1] #> [[1624]] #> SeqRec [ID: MT488915.1] #> [[1625]] #> SeqRec [ID: MT488914.1] #> [[1626]] #> SeqRec [ID: MT488913.1] #> [[1627]] #> SeqRec [ID: MT488909.1] #> [[1628]] #> SeqRec [ID: MT488896.1] #> [[1629]] #> SeqRec [ID: MT488894.1] #> [[1630]] #> SeqRec [ID: MT488892.1] #> [[1631]] #> SeqRec [ID: MT488891.1] #> [[1632]] #> SeqRec [ID: MT488890.1] #> [[1633]] #> SeqRec [ID: MT488888.1] #> [[1634]] #> SeqRec [ID: MT488887.1] #> [[1635]] #> SeqRec [ID: MT488886.1] #> [[1636]] #> SeqRec [ID: MT488885.1] #> [[1637]] #> SeqRec [ID: MT488877.1] #> [[1638]] #> SeqRec [ID: MT488876.1] #> [[1639]] #> SeqRec [ID: MT488875.1] #> [[1640]] #> SeqRec [ID: MT488874.1] #> [[1641]] #> SeqRec [ID: MT488873.1] #> [[1642]] #> SeqRec [ID: MT488872.1] #> [[1643]] #> SeqRec [ID: MT488871.1] #> [[1644]] #> SeqRec [ID: MT488867.1] #> [[1645]] #> SeqRec [ID: MT488853.1] #> [[1646]] #> SeqRec [ID: MT488852.1] #> [[1647]] #> SeqRec [ID: MT488851.1] #> [[1648]] #> SeqRec [ID: MT488849.1] #> [[1649]] #> SeqRec [ID: MT488848.1] #> [[1650]] #> SeqRec [ID: MT488847.1] #> [[1651]] #> SeqRec [ID: MT488845.1] #> [[1652]] #> SeqRec [ID: MT488844.1] #> [[1653]] #> SeqRec [ID: MT488843.1] #> [[1654]] #> SeqRec [ID: MT488842.1] #> [[1655]] #> SeqRec [ID: MT488836.1] #> [[1656]] #> SeqRec [ID: MT488835.1] #> [[1657]] #> SeqRec [ID: MT488834.1] #> [[1658]] #> SeqRec [ID: MT488833.1] #> [[1659]] #> SeqRec [ID: MT488832.1] #> [[1660]] #> SeqRec [ID: MT488830.1] #> [[1661]] #> SeqRec [ID: MT488829.1] #> [[1662]] #> SeqRec [ID: MT488826.1] #> [[1663]] #> SeqRec [ID: MT488822.1] #> [[1664]] #> SeqRec [ID: MT488821.1] #> [[1665]] #> SeqRec [ID: MT488820.1] #> [[1666]] #> SeqRec [ID: MT488819.1] #> [[1667]] #> SeqRec [ID: MT488818.1] #> [[1668]] #> SeqRec [ID: MT488817.1] #> [[1669]] #> SeqRec [ID: MT488806.1] #> [[1670]] #> SeqRec [ID: MT488805.1] #> [[1671]] #> SeqRec [ID: MT488804.1] #> [[1672]] #> SeqRec [ID: MT488803.1] #> [[1673]] #> SeqRec [ID: MT488794.1] #> [[1674]] #> SeqRec [ID: MT488793.1] #> [[1675]] #> SeqRec [ID: MT488792.1] #> [[1676]] #> SeqRec [ID: MT488791.1] #> [[1677]] #> SeqRec [ID: MT488790.1] #> [[1678]] #> SeqRec [ID: MT488789.1] #> [[1679]] #> SeqRec [ID: MT488788.1] #> [[1680]] #> SeqRec [ID: MT488784.1] #> [[1681]] #> SeqRec [ID: MT488770.1] #> [[1682]] #> SeqRec [ID: MT488769.1] #> [[1683]] #> SeqRec [ID: MT488768.1] #> [[1684]] #> SeqRec [ID: MT488766.1] #> [[1685]] #> SeqRec [ID: MT488765.1] #> [[1686]] #> SeqRec [ID: MT488764.1] #> [[1687]] #> SeqRec [ID: MT488762.1] #> [[1688]] #> SeqRec [ID: MT488761.1] #> [[1689]] #> SeqRec [ID: MT488760.1] #> [[1690]] #> SeqRec [ID: MT488759.1] #> [[1691]] #> SeqRec [ID: MT488750.1] #> [[1692]] #> SeqRec [ID: MT488749.1] #> [[1693]] #> SeqRec [ID: MT488748.1] #> [[1694]] #> SeqRec [ID: MT488747.1] #> [[1695]] #> SeqRec [ID: MT488746.1] #> [[1696]] #> SeqRec [ID: MT488745.1] #> [[1697]] #> SeqRec [ID: MT488744.1] #> [[1698]] #> SeqRec [ID: MT488740.1] #> [[1699]] #> SeqRec [ID: MT488726.1] #> [[1700]] #> SeqRec [ID: MT488725.1] #> [[1701]] #> SeqRec [ID: MT488724.1] #> [[1702]] #> SeqRec [ID: MT488722.1] #> [[1703]] #> SeqRec [ID: MT488721.1] #> [[1704]] #> SeqRec [ID: MT488720.1] #> [[1705]] #> SeqRec [ID: MT489146.1] #> [[1706]] #> SeqRec [ID: MT489145.1] #> [[1707]] #> SeqRec [ID: MT489144.1] #> [[1708]] #> SeqRec [ID: MT489143.1] #> [[1709]] #> SeqRec [ID: MT489133.1] #> [[1710]] #> SeqRec [ID: MT489132.1] #> [[1711]] #> SeqRec [ID: MT489131.1] #> [[1712]] #> SeqRec [ID: MT489130.1] #> [[1713]] #> SeqRec [ID: MT489129.1] #> [[1714]] #> SeqRec [ID: MT489128.1] #> [[1715]] #> SeqRec [ID: MT489127.1] #> [[1716]] #> SeqRec [ID: MT489123.1] #> [[1717]] #> SeqRec [ID: MT489109.1] #> [[1718]] #> SeqRec [ID: MT489108.1] #> [[1719]] #> SeqRec [ID: MT489107.1] #> [[1720]] #> SeqRec [ID: MT489105.1] #> [[1721]] #> SeqRec [ID: MT489104.1] #> [[1722]] #> SeqRec [ID: MT489103.1] #> [[1723]] #> SeqRec [ID: MT489101.1] #> [[1724]] #> SeqRec [ID: MT489100.1] #> [[1725]] #> SeqRec [ID: MT489099.1] #> [[1726]] #> SeqRec [ID: MT489098.1] #> [[1727]] #> SeqRec [ID: MT489090.1] #> [[1728]] #> SeqRec [ID: MT489089.1] #> [[1729]] #> SeqRec [ID: MT489088.1] #> [[1730]] #> SeqRec [ID: MT489087.1] #> [[1731]] #> SeqRec [ID: MT489086.1] #> [[1732]] #> SeqRec [ID: MT489085.1] #> [[1733]] #> SeqRec [ID: MT489084.1] #> [[1734]] #> SeqRec [ID: MT489080.1] #> [[1735]] #> SeqRec [ID: MT489067.1] #> [[1736]] #> SeqRec [ID: MT489066.1] #> [[1737]] #> SeqRec [ID: MT489065.1] #> [[1738]] #> SeqRec [ID: MT489063.1] #> [[1739]] #> SeqRec [ID: MT489062.1] #> [[1740]] #> SeqRec [ID: MT489061.1] #> [[1741]] #> SeqRec [ID: MT489059.1] #> [[1742]] #> SeqRec [ID: MT489058.1] #> [[1743]] #> SeqRec [ID: MT489057.1] #> [[1744]] #> SeqRec [ID: MT489056.1] #> [[1745]] #> SeqRec [ID: MT489047.1] #> [[1746]] #> SeqRec [ID: MT489046.1] #> [[1747]] #> SeqRec [ID: MT489045.1] #> [[1748]] #> SeqRec [ID: MT489044.1] #> [[1749]] #> SeqRec [ID: MT489043.1] #> [[1750]] #> SeqRec [ID: MT489042.1] #> [[1751]] #> SeqRec [ID: MT489041.1] #> [[1752]] #> SeqRec [ID: MT489037.1] #> [[1753]] #> SeqRec [ID: MT489024.1] #> [[1754]] #> SeqRec [ID: MT489023.1] #> [[1755]] #> SeqRec [ID: MT489022.1] #> [[1756]] #> SeqRec [ID: MT489020.1] #> [[1757]] #> SeqRec [ID: MT489019.1] #> [[1758]] #> SeqRec [ID: MT489018.1] #> [[1759]] #> SeqRec [ID: MT489016.1] #> [[1760]] #> SeqRec [ID: MT489015.1] #> [[1761]] #> SeqRec [ID: MT489014.1] #> [[1762]] #> SeqRec [ID: MT489013.1] #> [[1763]] #> SeqRec [ID: MT489005.1] #> [[1764]] #> SeqRec [ID: MT489004.1] #> [[1765]] #> SeqRec [ID: MT489003.1] #> [[1766]] #> SeqRec [ID: MT489002.1] #> [[1767]] #> SeqRec [ID: MT489001.1] #> [[1768]] #> SeqRec [ID: MT489000.1] #> [[1769]] #> SeqRec [ID: MT488999.1] #> [[1770]] #> SeqRec [ID: MT488995.1] #> [[1771]] #> SeqRec [ID: MT488982.1] #> [[1772]] #> SeqRec [ID: MT488981.1] #> [[1773]] #> SeqRec [ID: MT488980.1] #> [[1774]] #> SeqRec [ID: MT488978.1] #> [[1775]] #> SeqRec [ID: MT488977.1] #> [[1776]] #> SeqRec [ID: MT488976.1] #> [[1777]] #> SeqRec [ID: MT488974.1] #> [[1778]] #> SeqRec [ID: MT488973.1] #> [[1779]] #> SeqRec [ID: MT488972.1] #> [[1780]] #> SeqRec [ID: MT488971.1] #> [[1781]] #> SeqRec [ID: MT488962.1] #> [[1782]] #> SeqRec [ID: MT488961.1] #> [[1783]] #> SeqRec [ID: MT488960.1] #> [[1784]] #> SeqRec [ID: MT488959.1] #> [[1785]] #> SeqRec [ID: MT488958.1] #> [[1786]] #> SeqRec [ID: MT488957.1] #> [[1787]] #> SeqRec [ID: MT488956.1] #> [[1788]] #> SeqRec [ID: MT488952.1] #> [[1789]] #> SeqRec [ID: HM761930.1] #> [[1790]] #> SeqRec [ID: HM762097.1] #> [[1791]] #> SeqRec [ID: HM762245.1] #> [[1792]] #> SeqRec [ID: HM762432.1] #> [[1793]] #> SeqRec [ID: HM762516.1] #> [[1794]] #> SeqRec [ID: HM762770.1] #> [[1795]] #> SeqRec [ID: HM762862.1] #> [[1796]] #> SeqRec [ID: HM763022.1] #> [[1797]] #> SeqRec [ID: HM763266.1] #> [[1798]] #> SeqRec [ID: HM763434.1] #> [[1799]] #> SeqRec [ID: HM763727.1] #> [[1800]] #> SeqRec [ID: HM763997.1] #> [[1801]] #> SeqRec [ID: HM764105.1] #> [[1802]] #> SeqRec [ID: HM764322.1] #> [[1803]] #> SeqRec [ID: HM764401.1] #> [[1804]] #> SeqRec [ID: HM764649.1] #> [[1805]] #> SeqRec [ID: HM764817.1] #> [[1806]] #> SeqRec [ID: HM764908.1] #> [[1807]] #> SeqRec [ID: HM765180.1] #> [[1808]] #> SeqRec [ID: U38998.1] #> [[1809]] #> SeqRec [ID: AY684995.1] #> [[1810]] #> SeqRec [ID: AY684994.1] #> [[1811]] #> SeqRec [ID: AY684993.1] #> [[1812]] #> SeqRec [ID: AY684992.1] #> [[1813]] #> SeqRec [ID: AY684991.1] #> [[1814]] #> SeqRec [ID: AY646200.1] #> [[1815]] #> SeqRec [ID: AY646198.1] #> [[1816]] #> SeqRec [ID: DM461196.1] #> [[1817]] #> SeqRec [ID: DM461195.1] #> [[1818]] #> SeqRec [ID: DM461194.1] #> [[1819]] #> SeqRec [ID: DM461193.1] #> [[1820]] #> SeqRec [ID: DM461192.1] #> [[1821]] #> SeqRec [ID: DM461191.1] #> [[1822]] #> SeqRec [ID: DM367551.1] #> [[1823]] #> SeqRec [ID: DM367548.1] #> [[1824]] #> SeqRec [ID: DM367545.1] #> [[1825]] #> SeqRec [ID: DM367544.1] #> [[1826]] #> SeqRec [ID: DM367543.1] #> [[1827]] #> SeqRec [ID: DM367542.1] #> [[1828]] #> SeqRec [ID: DM367541.1] #> [[1829]] #> SeqRec [ID: DM367540.1] #> [[1830]] #> SeqRec [ID: DM371283.1] #> [[1831]] #> SeqRec [ID: DM371280.1] #> [[1832]] #> SeqRec [ID: DM371276.1] #> [[1833]] #> SeqRec [ID: DM371275.1] #> [[1834]] #> SeqRec [ID: DM371274.1] #> [[1835]] #> SeqRec [ID: DM371273.1] #> [[1836]] #> SeqRec [ID: DM371272.1] #> [[1837]] #> SeqRec [ID: DM371271.1] #> [[1838]] #> SeqRec [ID: DQ334827.1] #> [[1839]] #> SeqRec [ID: HW478258.1] #> [[1840]] #> SeqRec [ID: HW478257.1] #> [[1841]] #> SeqRec [ID: HW478256.1] #> [[1842]] #> SeqRec [ID: HW478255.1] #> [[1843]] #> SeqRec [ID: DI178960.1] #> [[1844]] #> SeqRec [ID: DI178959.1] #> [[1845]] #> SeqRec [ID: DI178958.1] #> [[1846]] #> SeqRec [ID: DI178957.1] #> [[1847]] #> SeqRec [ID: DI178956.1] #> [[1848]] #> SeqRec [ID: DI178955.1] #> [[1849]] #> SeqRec [ID: DI178127.1] #> [[1850]] #> SeqRec [ID: DI178124.1] #> [[1851]] #> SeqRec [ID: DI178120.1] #> [[1852]] #> SeqRec [ID: DI178119.1] #> [[1853]] #> SeqRec [ID: DI178118.1] #> [[1854]] #> SeqRec [ID: DI178117.1] #> [[1855]] #> SeqRec [ID: DI178116.1] #> [[1856]] #> SeqRec [ID: DI178115.1] #> [[1857]] #> SeqRec [ID: AB239248.1] #> [[1858]] #> SeqRec [ID: AB239247.1] #> [[1859]] #> SeqRec [ID: AB239246.1] #> [[1860]] #> SeqRec [ID: AB239228.1] #> [[1861]] #> SeqRec [ID: AB239227.1] #> [[1862]] #> SeqRec [ID: AB239226.1] #> [[1863]] #> SeqRec [ID: AB239203.1] #> [[1864]] #> SeqRec [ID: AB239202.1] #> [[1865]] #> SeqRec [ID: AB239201.1] #> [[1866]] #> SeqRec [ID: AB239200.1] #> [[1867]] #> SeqRec [ID: U59646.1] #> [[1868]] #> SeqRec [ID: U59645.1] #> [[1869]] #> SeqRec [ID: U59644.1] #> [[1870]] #> SeqRec [ID: AF161947.1] #> [[1871]] #> SeqRec [ID: AF161946.1] #> [[1872]] #> SeqRec [ID: HM756841.1] #> [[1873]] #> SeqRec [ID: HM757384.1] #> [[1874]] #> SeqRec [ID: HM757559.1] #> [[1875]] #> SeqRec [ID: HM757725.1] #> [[1876]] #> SeqRec [ID: HM758217.1] #> [[1877]] #> SeqRec [ID: HM758302.1] #> [[1878]] #> SeqRec [ID: HM758466.1] #> [[1879]] #> SeqRec [ID: HM758655.1] #> [[1880]] #> SeqRec [ID: HM758935.1] #> [[1881]] #> SeqRec [ID: HM759106.1] #> [[1882]] #> SeqRec [ID: HM759279.1] #> [[1883]] #> SeqRec [ID: HM759377.1] #> [[1884]] #> SeqRec [ID: HM759647.1] #> [[1885]] #> SeqRec [ID: HM759819.1] #> [[1886]] #> SeqRec [ID: HM759901.1] #> [[1887]] #> SeqRec [ID: HM760085.1] #> [[1888]] #> SeqRec [ID: HM760261.1] #> [[1889]] #> SeqRec [ID: HM760530.1] #> [[1890]] #> SeqRec [ID: HM760613.1] #> [[1891]] #> SeqRec [ID: HM760776.1] #> [[1892]] #> SeqRec [ID: HM761014.1] #> [[1893]] #> SeqRec [ID: HM761146.1] #> [[1894]] #> SeqRec [ID: HM761196.1] #> [[1895]] #> SeqRec [ID: HM761512.1] #> [[1896]] #> SeqRec [ID: HM761773.1] #> [[1897]] #> SeqRec [ID: MT489142.1] #> [[1898]] #> SeqRec [ID: MT489097.1] #> [[1899]] #> SeqRec [ID: MT489055.1] #> [[1900]] #> SeqRec [ID: MT489012.1] #> [[1901]] #> SeqRec [ID: MT488970.1] #> [[1902]] #> SeqRec [ID: MT488927.1] #> [[1903]] #> SeqRec [ID: MT488884.1] #> [[1904]] #> SeqRec [ID: MT488841.1] #> [[1905]] #> SeqRec [ID: MT488802.1] #> [[1906]] #> SeqRec [ID: MT488758.1] #> [[1907]] #> SeqRec [ID: MT488674.1] #> [[1908]] #> SeqRec [ID: MT488594.1] #> [[1909]] #> SeqRec [ID: MT492191.1] #> [[1910]] #> SeqRec [ID: MT483742.1] #> [[1911]] #> SeqRec [ID: KY508415.1] #> [[1912]] #> SeqRec [ID: KY508414.1] #> [[1913]] #> SeqRec [ID: KY508413.1] #> [[1914]] #> SeqRec [ID: KY508412.1] #> [[1915]] #> SeqRec [ID: KY508411.1] #> [[1916]] #> SeqRec [ID: KY508410.1] #> [[1917]] #> SeqRec [ID: KY508409.1] #> [[1918]] #> SeqRec [ID: KY508408.1] #> [[1919]] #> SeqRec [ID: KY508407.1] #> [[1920]] #> SeqRec [ID: KY508406.1] #> [[1921]] #> SeqRec [ID: KY508405.1] #> [[1922]] #> SeqRec [ID: KY508404.1] #> [[1923]] #> SeqRec [ID: FJ154795.1] #> [[1924]] #> SeqRec [ID: FJ154794.1] #> [[1925]] #> SeqRec [ID: FJ154793.1] #> [[1926]] #> SeqRec [ID: DQ098874.1] #> [[1927]] #> SeqRec [ID: DQ098873.1] #> [[1928]] #> SeqRec [ID: DQ098862.1] #> [[1929]] #> SeqRec [ID: DQ098861.1] #> [[1930]] #> SeqRec [ID: AY894656.1] #> [[1931]] #> SeqRec [ID: AY894655.1] #> [[1932]] #> SeqRec [ID: AY894654.1] #> [[1933]] #> SeqRec [ID: AY894653.1] #> [[1934]] #> SeqRec [ID: AY894652.1] #> [[1935]] #> SeqRec [ID: AY894651.1] #> [[1936]] #> SeqRec [ID: AY894650.1] #> [[1937]] #> SeqRec [ID: AY894649.1] #> [[1938]] #> SeqRec [ID: AY894648.1] #> [[1939]] #> SeqRec [ID: AY894647.1] #> [[1940]] #> SeqRec [ID: HQ005499.1] #> [[1941]] #> SeqRec [ID: HQ018926.1] #> [[1942]] #> SeqRec [ID: HM102288.1] #> [[1943]] #> SeqRec [ID: AF004921.1] #> [[1944]] #> SeqRec [ID: HW478260.1] #> [[1945]] #> SeqRec [ID: HW478259.1] # access sequence records [[ (seqarc[[seqarc@ids[[1]]]])  # first sequence record #> SeqRec [ID: KR528418.1] # generate new sequence archives with [ (seqarc[seqarc@ids[1:10]])  # first 10 sequences #> Archive of sequence record(s) #>  - [10] sequences #>  - [2] unique txids #>  - [269] median sequence length #>  - [0] median ambiguous nucleotides"},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqRec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence record — SeqRec-class","title":"Sequence record — SeqRec-class","text":"Sequence record contains sequence data.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqRec-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence record — SeqRec-class","text":"","code":"# S4 method for SeqRec as.character(x)  # S4 method for SeqRec show(object)  # S4 method for SeqRec print(x)  # S4 method for SeqRec str(object, max.level = 2L, ...)  # S4 method for SeqRec summary(object)"},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqRec-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence record — SeqRec-class","text":"x SeqRec object object SeqRec object max.level Maximum level nesting str() ... arguments str()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqRec-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequence record — SeqRec-class","text":"Sequence stored raw. Use rawToChar().","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqRec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Sequence record — SeqRec-class","text":"id Unique ID nm Best-guess sequence name accssn Accession vrsn Accession version url URL txid Taxonomic ID source taxon orgnsm Scientific name source taxon sq Sequence dfln Definition line ml_typ Molecule type, e.g. DNA rec_typ Record type: Whole feature nncltds Number nucleotides nambgs Number ambiguous nucleotides pambgs Proportion ambiguous nucleotides gcr GC ratio age Number days sequence upload running pipeline","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/SeqRec-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence record — SeqRec-class","text":"","code":"data('aotus') seqrec <- aotus@sqs@sqs[[1]] # this is a SeqRec object # it contains sequence records show(seqrec) #> SeqRec [ID: KR528418.1] # you can access its different data slots with @ seqrec@id       # sequence ID, accession + feature location #> [1] \"KR528418.1\" seqrec@nm       # feature name, '' if none #> [1] \"\" seqrec@accssn   # accession #> [1] \"KR528418\" seqrec@vrsn     # accession version #> [1] \"KR528418.1\" seqrec@url      # NCBI GenBank URL #> [1] \"https://www.ncbi.nlm.nih.gov/nuccore/KR528418.1\" seqrec@txid     # Taxonomic ID #> [1] \"231953\" seqrec@orgnsm   # free-text organism name #> [1] \"Aotus sp. (in: primates)\" seqrec@sq       # sequence, in raw format #>    [1] 41 54 47 41 43 54 54 43 43 43 43 43 43 47 43 41 41 41 41 43 41 43 41 43 #>   [25] 43 43 41 43 54 41 47 43 41 41 41 41 41 54 43 41 54 54 41 41 54 47 41 47 #>   [49] 54 43 41 54 54 54 41 54 54 47 41 54 43 54 43 43 43 43 41 43 41 43 43 41 #>   [73] 54 43 43 41 41 43 41 54 54 54 43 43 54 43 54 54 47 41 54 47 41 41 41 54 #>   [97] 54 54 54 47 47 43 54 43 41 43 54 43 54 54 41 47 47 43 41 54 54 54 47 43 #>  [121] 43 54 41 41 54 43 41 54 54 43 41 41 41 54 54 41 43 43 41 43 43 47 47 43 #>  [145] 43 54 41 54 54 43 54 54 41 47 43 54 41 54 41 43 41 54 54 41 43 41 43 41 #>  [169] 43 43 41 47 41 54 41 43 43 54 43 41 41 43 54 47 43 43 54 54 43 54 43 43 #>  [193] 54 43 54 47 54 43 47 43 43 43 41 54 41 54 43 41 43 43 43 47 41 47 41 43 #>  [217] 47 54 54 41 41 43 54 41 54 47 47 43 54 47 41 47 54 41 41 54 54 43 47 43 #>  [241] 54 41 54 41 54 41 43 41 54 47 43 43 41 41 43 47 47 43 47 43 54 54 43 43 #>  [265] 41 54 41 54 54 43 54 54 43 47 54 41 54 47 54 43 54 54 54 54 54 43 54 43 #>  [289] 43 41 54 41 54 54 47 47 54 43 47 47 47 47 41 43 54 54 54 41 43 54 41 43 #>  [313] 47 47 41 54 43 54 54 54 43 43 54 54 54 54 54 43 54 47 41 41 47 41 43 54 #>  [337] 54 47 41 41 41 54 41 54 43 47 47 54 41 54 54 41 54 43 43 54 41 43 54 41 #>  [361] 54 54 54 41 43 41 41 43 43 41 54 41 47 43 43 41 43 41 47 43 41 54 54 54 #>  [385] 41 54 41 47 47 43 54 41 54 47 54 54 43 54 54 43 43 41 54 47 41 47 47 43 #>  [409] 43 41 41 41 54 41 54 43 41 54 54 43 54 47 41 47 47 41 47 43 43 41 43 41 #>  [433] 47 54 41 41 54 54 41 43 41 41 41 43 43 54 54 43 54 41 54 43 41 47 43 54 #>  [457] 41 54 43 43 43 43 54 41 54 41 54 43 47 47 41 54 43 54 47 41 43 43 54 54 #>  [481] 47 54 41 43 41 41 54 47 41 41 54 54 54 47 41 47 47 54 47 47 43 54 54 43 #>  [505] 54 43 41 47 54 41 47 41 54 41 41 41 47 43 43 41 43 54 43 54 43 41 43 41 #>  [529] 43 47 41 54 54 43 54 54 54 41 43 54 54 54 54 43 41 43 54 54 54 41 54 43 #>  [553] 54 54 41 43 43 43 54 54 54 41 54 54 41 54 43 47 43 41 47 43 43 43 54 41 #>  [577] 47 43 41 47 43 43 41 54 54 43 41 43 43 54 43 54 54 41 54 54 54 54 54 41 #>  [601] 43 41 54 47 41 41 41 43 41 47 47 41 54 43 41 41 41 43 41 41 54 43 43 41 #>  [625] 54 43 41 47 47 41 41 54 41 47 54 41 54 43 54 47 41 43 43 43 43 47 41 43 #>  [649] 41 41 41 41 54 43 41 43 47 54 54 43 43 41 43 43 43 43 54 41 54 54 41 43 #>  [673] 41 43 41 47 43 54 41 41 41 47 41 54 41 54 54 43 54 41 47 47 41 54 54 47 #>  [697] 41 54 43 54 54 54 43 54 54 43 54 43 54 54 41 54 43 43 43 54 41 41 54 41 #>  [721] 41 47 43 43 54 41 41 43 43 43 54 41 54 54 54 41 54 41 43 43 43 47 41 43 #>  [745] 43 54 54 43 54 41 41 43 47 47 41 43 43 43 41 47 41 54 41 41 54 54 41 54 #>  [769] 41 43 41 43 54 41 47 43 43 41 41 43 43 43 54 43 54 43 41 41 43 41 43 43 #>  [793] 43 43 41 43 43 43 43 41 43 41 54 54 41 41 47 43 43 41 47 41 41 54 47 41 #>  [817] 54 41 54 54 54 54 43 54 41 54 54 54 47 43 41 54 41 54 47 43 41 41 54 54 #>  [841] 43 54 41 43 47 47 54 43 54 41 54 54 43 43 54 41 41 54 41 41 41 43 54 54 #>  [865] 47 47 41 47 47 47 47 54 41 43 54 41 47 43 54 43 54 41 47 54 41 43 54 54 #>  [889] 54 43 54 41 54 43 43 54 41 41 54 54 54 54 41 41 54 47 47 54 54 41 54 43 #>  [913] 43 43 43 41 54 41 43 54 41 43 41 54 54 54 43 54 43 43 41 41 41 43 41 47 #>  [937] 43 41 41 41 47 43 41 54 41 41 54 41 54 54 54 43 47 41 43 43 43 41 54 54 #>  [961] 41 43 54 43 41 41 41 54 54 43 54 41 54 54 43 54 47 41 41 43 54 43 54 41 #>  [985] 47 54 41 47 43 54 47 41 43 43 54 41 43 54 41 41 43 54 43 54 54 41 43 41 #> [1009] 54 47 41 41 54 54 47 47 41 47 47 54 43 41 41 43 43 41 47 54 54 47 41 47 #> [1033] 54 41 43 43 43 43 54 54 43 47 54 41 41 43 43 41 54 54 47 47 43 43 41 41 #> [1057] 41 43 43 47 43 41 54 43 43 41 54 54 41 54 41 54 41 43 54 54 43 54 54 43 #> [1081] 41 54 54 41 54 54 47 54 54 41 43 43 43 54 41 41 54 41 43 43 43 43 54 54 #> [1105] 54 54 43 47 43 43 54 54 41 41 54 54 47 41 41 41 41 54 41 41 41 54 54 41 #> [1129] 43 54 54 41 41 41 54 47 41 54 41 41 47 54 43 43 54 54 47 54 41 47 54 41 #> [1153] 54 41 41 43 54 54 41 41 54 41 43 43 43 54 47 47 54 43 54 54 47 54 41 41 #> [1177] 41 43 43 41 47 41 41 41 54 47 47 41 41 47 54 41 54 54 54 41 43 54 43 43 #> [1201] 43 54 41 47 47 41 43 41 43 54 43 41 47 47 47 41 41 41 47 41 41 54 54 43 #> [1225] 43 54 41 54 54 43 54 41 43 seqrec@dfln     # sequence definition #> [1] \"Aotus sp. (in: primates) isolate Z25 cytochrome b (cytb) gene, complete cds; mitochondrial\" seqrec@ml_typ   # molecule type #> [1] \"DNA-linear\" seqrec@rec_typ  # whole record or feature #> [1] \"whole\" seqrec@nncltds  # sequence length #> [1] 1233 seqrec@nambgs   # number of non-ATCGs #> [1] 0 seqrec@pambgs   # proportion of non-ATCGs #> [1] 0 seqrec@gcr      # GC-ratio #> [1] 0.6066504 seqrec@age      # days since being added to GenBank #> [1] 2749 # get the sequence like so.... (rawToChar(seqrec@sq)) #> [1] \"ATGACTTCCCCCCGCAAAACACACCCACTAGCAAAAATCATTAATGAGTCATTTATTGATCTCCCCACACCATCCAACATTTCCTCTTGATGAAATTTTGGCTCACTCTTAGGCATTTGCCTAATCATTCAAATTACCACCGGCCTATTCTTAGCTATACATTACACACCAGATACCTCAACTGCCTTCTCCTCTGTCGCCCATATCACCCGAGACGTTAACTATGGCTGAGTAATTCGCTATATACATGCCAACGGCGCTTCCATATTCTTCGTATGTCTTTTTCTCCATATTGGTCGGGGACTTTACTACGGATCTTTCCTTTTTCTGAAGACTTGAAATATCGGTATTATCCTACTATTTACAACCATAGCCACAGCATTTATAGGCTATGTTCTTCCATGAGGCCAAATATCATTCTGAGGAGCCACAGTAATTACAAACCTTCTATCAGCTATCCCCTATATCGGATCTGACCTTGTACAATGAATTTGAGGTGGCTTCTCAGTAGATAAAGCCACTCTCACACGATTCTTTACTTTTCACTTTATCTTACCCTTTATTATCGCAGCCCTAGCAGCCATTCACCTCTTATTTTTACATGAAACAGGATCAAACAATCCATCAGGAATAGTATCTGACCCCGACAAAATCACGTTCCACCCCTATTACACAGCTAAAGATATTCTAGGATTGATCTTTCTTCTCTTATCCCTAATAAGCCTAACCCTATTTATACCCGACCTTCTAACGGACCCAGATAATTATACACTAGCCAACCCTCTCAACACCCCACCCCACATTAAGCCAGAATGATATTTTCTATTTGCATATGCAATTCTACGGTCTATTCCTAATAAACTTGGAGGGGTACTAGCTCTAGTACTTTCTATCCTAATTTTAATGGTTATCCCCATACTACATTTCTCCAAACAGCAAAGCATAATATTTCGACCCATTACTCAAATTCTATTCTGAACTCTAGTAGCTGACCTACTAACTCTTACATGAATTGGAGGTCAACCAGTTGAGTACCCCTTCGTAACCATTGGCCAAACCGCATCCATTATATACTTCTTCATTATTGTTACCCTAATACCCCTTTTCGCCTTAATTGAAAATAAATTACTTAAATGATAAGTCCTTGTAGTATAACTTAATACCCTGGTCTTGTAAACCAGAAATGGAAGTATTTACTCCCTAGGACACTCAGGGAAAGAATTCCTATTCTAC\""},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxDict-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomic record dictionary — TaxDict-class","title":"Taxonomic record dictionary — TaxDict-class","text":"Taxonomic dictionary contains taxonomic tree NCBI taxonomy data taxonomic IDs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxDict-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomic record dictionary — TaxDict-class","text":"","code":"# S4 method for TaxDict as.character(x)  # S4 method for TaxDict show(object)  # S4 method for TaxDict print(x)  # S4 method for TaxDict str(object, max.level = 2L, ...)  # S4 method for TaxDict summary(object)"},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxDict-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxonomic record dictionary — TaxDict-class","text":"x TaxDict object object TaxDict object max.level Maximum level nesting str() ... arguments str()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxDict-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Taxonomic record dictionary — TaxDict-class","text":"txids Taxonomic IDs taxon records recs Environment records prnt Parent taxonomic ID txtr Taxonomic tree","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxDict-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonomic record dictionary — TaxDict-class","text":"","code":"data('aotus') txdct <- aotus@txdct # this is a TaxDict object # it contains taxonomic information, including records and tree show(txdct) #> Taxonomic dictionary [22] recs, parent [id 9504] # you can access its different data slots with @ txdct@txids  # taxonomic IDs #>  [1] \"2688256\" \"1263727\" \"1230482\" \"1090913\" \"1002694\" \"940829\"  \"867331\"  #>  [8] \"413234\"  \"361674\"  \"292213\"  \"280755\"  \"261316\"  \"231953\"  \"222417\"  #> [15] \"120088\"  \"57176\"   \"57175\"   \"43147\"   \"37293\"   \"30591\"   \"9505\"    #> [22] \"9504\"    txdct@recs   # taxonomic records environment #> <environment: 0x5f6434498908> txdct@txtr   # taxonomic tree #> TreeMan Object of [19] tips txdct@prnt   # MRCA #> [1] \"9504\" # access any record through the records environment txdct@recs[[txdct@txids[[1]]]] #> TaxRec [id 2688256 (unclassified Aotus (in: primates))] # for interacting with the taxonomic tree, see the treeman package summary(txdct@txtr) #> Tree (TreeMan Object): #>   + 19 tips #>   + 3 internal nodes #>   + Polytomous #>   + PD 22 #>   + Root node is \"9504\""},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxRec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomic record — TaxRec-class","title":"Taxonomic record — TaxRec-class","text":"Taxonomic dictionary contains taxonomic tree NCBI taxonomy data taxonomic IDs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxRec-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomic record — TaxRec-class","text":"","code":"# S4 method for TaxRec as.character(x)  # S4 method for TaxRec show(object)  # S4 method for TaxRec print(x)  # S4 method for TaxRec str(object, max.level = 2L, ...)  # S4 method for TaxRec summary(object)"},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxRec-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxonomic record — TaxRec-class","text":"x TaxRec object object TaxRec object max.level Maximum level nesting str() ... arguments str()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxRec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Taxonomic record — TaxRec-class","text":"id Taxonomic ID scnm Scientific name cmnm Common name rnk Rank lng Lineage prnt Parent","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/TaxRec-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonomic record — TaxRec-class","text":"","code":"data('aotus') taxrec <- aotus@txdct@recs[[aotus@txdct@txids[[1]]]] # this is a TaxRec object # it contains NCBI's taxonomic information for a single node show(taxrec) #> TaxRec [id 2688256 (unclassified Aotus (in: primates))] # you can access its different data slots with @ taxrec@id    # taxonomic ID #> [1] \"2688256\" taxrec@scnm  # scientific name #> [1] \"unclassified Aotus (in: primates)\" taxrec@cmnm  # common name, '' if none #> [1] \"\" taxrec@rnk   # rank #> [1] \"no rank\" taxrec@lng   # lineage information: list of IDs and ranks #> $ids #>  [1] \"131567\"  \"2759\"    \"33154\"   \"33208\"   \"6072\"    \"33213\"   \"33511\"   #>  [8] \"7711\"    \"89593\"   \"7742\"    \"7776\"    \"117570\"  \"117571\"  \"8287\"    #> [15] \"1338369\" \"32523\"   \"32524\"   \"40674\"   \"32525\"   \"9347\"    \"1437010\" #> [22] \"314146\"  \"9443\"    \"376913\"  \"314293\"  \"9479\"    \"376918\"  \"9504\"    #> [29] \"2688256\" #>  #> $rnks #>  [1] \"no rank\"      \"superkingdom\" \"clade\"        \"kingdom\"      \"clade\"        #>  [6] \"clade\"        \"clade\"        \"phylum\"       \"subphylum\"    \"clade\"        #> [11] \"clade\"        \"clade\"        \"clade\"        \"superclass\"   \"clade\"        #> [16] \"clade\"        \"clade\"        \"class\"        \"clade\"        \"clade\"        #> [21] \"clade\"        \"superorder\"   \"order\"        \"suborder\"     \"infraorder\"   #> [26] \"parvorder\"    \"family\"       \"genus\"        \"no rank\"      #>  taxrec@prnt  # parent ID #> [1] \"9504\""},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMan-class.html","id":null,"dir":"Reference","previous_headings":"","what":"TreeMan-class — TreeMan-class","title":"TreeMan-class — TreeMan-class","text":"S4 class representing phylogenetic trees list nodes.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMan-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TreeMan-class — TreeMan-class","text":"","code":"# S4 method for TreeMan,character [[(x, i)  # S4 method for TreeMan,character,missing,missing [(x, i, j, ..., drop = TRUE)  # S4 method for TreeMan as.character(x)  # S4 method for TreeMan show(object)  # S4 method for TreeMan print(x)  # S4 method for TreeMan str(object, max.level = 2L, ...)  # S4 method for TreeMan summary(object)  # S4 method for TreeMan cTrees(x, ...)"},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMan-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreeMan-class — TreeMan-class","text":"x TreeMan object node ID slot name j missing ... additional tree objects drop missing object TreeMan object max.level str() maximum number levels show","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMan-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TreeMan-class — TreeMan-class","text":"TreeMan object holds list nodes. idea TreeMan class make adding removing nodes similar possible adding removing elements list. Note internal nodes tips considered nodes. Trees can polytomous unrooted. node within TreeMan ndlst contains following data slots: id: character string node ID txnym: name taxonomic clade (optional) spn: length preceding branch prid: ID immediately preceding node, NULL root ptid: IDs immediately connecting nodes See 'Examples' methods use.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMan-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"TreeMan-class — TreeMan-class","text":"ndlst list nodes nds vector node ids internal nodes nnds numeric number internal nodes tree tips vector node ids tips ntips numeric number internal nodes tree vector node ids nall numeric number nodes tree pd numeric total branch length tree tinds indexes tip nodes tree prinds indexes pre-nodes tree wspn logical, nodes spans wtxnyms logical, nodes txnyms ply logical, tree bifurcating root character node id root, root empty character updtd logical, tree slots updated since initiation change othr_slt_nms vector, character list additional data slots added nodes ndmtrx matrix, T/Fs representing tree structure","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMan-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TreeMan-class — TreeMan-class","text":"","code":"# Generate random tree tree <- randTree(10) # Print to get basic stats summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 8.78 #>   + Root node is \"n1\" # Slots.... tree[\"tips\"] # return all tips IDs #>  [1] \"t1\"  \"t10\" \"t2\"  \"t3\"  \"t4\"  \"t5\"  \"t6\"  \"t7\"  \"t8\"  \"t9\"  tree[\"nds\"] # return all internal node IDs #> [1] \"n1\" \"n2\" \"n3\" \"n4\" \"n5\" \"n6\" \"n7\" \"n8\" \"n9\" tree[\"ntips\"] # count all tips #> [1] 10 tree[\"nnds\"] # count all internal nodes #> [1] 9 tree[\"root\"] # identify root node #> [1] \"n1\" tree[[\"t1\"]] # return t1 node object #> Node (tip node): #>   + ID: \"t1\" #>   + prid: \"n7\" #>   + spn: 0.031 #>   + predist: 3.3 #>   + pd: 0 tree[\"pd\"] # return phylogenetic diversity #> [1] 8.77691 tree[\"ply\"] # is polytomous? #> [1] FALSE # Additional special slots (calculated upon call) tree[\"age\"] # get tree's age #> [1] 4.567286 tree[\"ultr\"] # determine if tree is ultrametric #> [1] FALSE tree[\"spns\"] # get all the spans of the tree IDs #>         n1         n2         n3         n4         n5         n6         n7  #> 0.00000000 0.73531960 0.19595673 0.98053967 0.74152153 0.05144628 0.53021246  #>         n8         n9         t1         t2         t3         t4         t5  #> 0.69582388 0.68855600 0.03123033 0.22556253 0.30083081 0.63646561 0.47902455  #>         t6         t7         t8         t9        t10  #> 0.43217126 0.70643384 0.94857658 0.18033877 0.21689988  tree[\"prids\"] # get all the IDs of preceding nodes #>   n1   n2   n3   n4   n5   n6   n7   n8   n9   t1   t2   t3   t4   t5   t6   t7  #> \"n1\" \"n1\" \"n2\" \"n3\" \"n4\" \"n5\" \"n6\" \"n7\" \"n4\" \"n7\" \"n9\" \"n6\" \"n8\" \"n8\" \"n2\" \"n3\"  #>   t8   t9  t10  #> \"n9\" \"n1\" \"n5\"  tree[\"ptids\"] # get all the IDs of following nodes #> $n1 #> [1] \"n2\" \"t9\" #>  #> $n2 #> [1] \"n3\" \"t6\" #>  #> $n3 #> [1] \"n4\" \"t7\" #>  #> $n4 #> [1] \"n5\" \"n9\" #>  #> $n5 #> [1] \"n6\"  \"t10\" #>  #> $n6 #> [1] \"n7\" \"t3\" #>  #> $n7 #> [1] \"n8\" \"t1\" #>  #> $n8 #> [1] \"t4\" \"t5\" #>  #> $n9 #> [1] \"t2\" \"t8\" #>  #> $t1 #> character(0) #>  #> $t2 #> character(0) #>  #> $t3 #> character(0) #>  #> $t4 #> character(0) #>  #> $t5 #> character(0) #>  #> $t6 #> character(0) #>  #> $t7 #> character(0) #>  #> $t8 #> character(0) #>  #> $t9 #> character(0) #>  #> $t10 #> character(0) #>  tree[\"txnyms\"] # get all the taxonyms of all nodes #>  n1  n2  n3  n4  n5  n6  n7  n8  n9  t1  t2  t3  t4  t5  t6  t7  t8  t9 t10  #>  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  # In addition [] can be used for any user-defined slot # Because all nodes are lists with metadata we can readily #  get specific information on nodes of interest nd <- tree[[\"n2\"]] summary(nd) #> Node (internal node): #>   + ID: \"n2\" #>   + prid: \"n1\" #>   + ptid: \"n3\", \"t6\" #>   + nkids: 9 #>   + spn: 0.74 #>   + predist: 0.74 #>   + pd: 7.9 # And then use the same syntax for the tree nd[\"nkids\"] # .... nkids, pd, etc. #> [1] 9  # Convert to phylo and plot library(ape) tree <- as(tree, \"phylo\") plot(tree)"},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMan-to-phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert TreeMan to phylo — TreeMan-to-phylo","title":"Convert TreeMan to phylo — TreeMan-to-phylo","text":"Return ape's phylo TreeMan. preserve node labels different default labels (n#).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMan-to-phylo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert TreeMan to phylo — TreeMan-to-phylo","text":"","code":"library(ape) tree <- randTree(10) tree <- as(tree, \"phylo\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMen-class.html","id":null,"dir":"Reference","previous_headings":"","what":"TreeMen-class — TreeMen-class","title":"TreeMen-class — TreeMen-class","text":"S4 class multiple phylogenetic trees","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMen-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TreeMen-class — TreeMen-class","text":"","code":"# S4 method for TreeMen cTrees(x, ...)  # S4 method for TreeMen,ANY [[(x, i)  # S4 method for TreeMen,character,missing,missing [(x, i, j, ..., drop = TRUE)  # S4 method for TreeMen as.character(x)  # S4 method for TreeMen show(object)  # S4 method for TreeMen str(object, max.level = 2L, ...)  # S4 method for TreeMen print(x)  # S4 method for TreeMen summary(object)"},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMen-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TreeMen-class — TreeMen-class","text":"x TreeMen object ... additional tree objects tree index (integer character) j missing drop missing object TreeMen object max.level str() maximum level","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMen-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"TreeMen-class — TreeMen-class","text":"treelst list TreeMan objects ntips sum tips per tree ntrees total number trees","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMen-to-multiPhylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert TreeMen to multiPhylo — TreeMen-to-multiPhylo","title":"Convert TreeMen to multiPhylo — TreeMen-to-multiPhylo","text":"Return ape's multiPhylo TreeMen","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/TreeMen-to-multiPhylo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert TreeMen to multiPhylo — TreeMen-to-multiPhylo","text":"","code":"library(ape) trees <- cTrees(randTree(10), randTree(10), randTree(10)) trees <- as(trees, \"multiPhylo\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/addClade.html","id":null,"dir":"Reference","previous_headings":"","what":"Add clade to tree — addClade","title":"Add clade to tree — addClade","text":"Returns tree added clade","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/addClade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add clade to tree — addClade","text":"","code":"addClade(tree, id, clade)"},{"path":"https://docs.ropensci.org/phylotaR/reference/addClade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add clade to tree — addClade","text":"tree TreeMan object id tip/node ID tree clade added clade TreeMan object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/addClade.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add clade to tree — addClade","text":"Add TreeMan object existing TreeMan object specifying ID attach. id specified internal node, original clade descending node replaced. running, ensure IDs shared tree clade, except IDs clade tree replaced. Note, returned tree node matrix.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/addClade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add clade to tree — addClade","text":"","code":"t1 <- randTree(100) # extract a clade cld <- getSubtree(t1, \"n2\") # remove the same clade t2 <- rmClade(t1, \"n2\") # add the clade again t3 <- addClade(t2, \"n2\", cld) # t1 and t3 should be the same # note there is no need to remove a clade before adding t3 <- addClade(t1, \"n2\", cld) # same tree"},{"path":"https://docs.ropensci.org/phylotaR/reference/addNdmtrx.html","id":null,"dir":"Reference","previous_headings":"","what":"Add node matrix to a tree — addNdmtrx","title":"Add node matrix to a tree — addNdmtrx","text":"Return tree node matrix added.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/addNdmtrx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add node matrix to a tree — addNdmtrx","text":"","code":"addNdmtrx(tree, shared = FALSE, ...)"},{"path":"https://docs.ropensci.org/phylotaR/reference/addNdmtrx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add node matrix to a tree — addNdmtrx","text":"tree TreeMan object shared T/F, bigmatrix shared? See bigmemory documentation. ... .big.matrix() additional arguments","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/addNdmtrx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add node matrix to a tree — addNdmtrx","text":"node matrix makes 'enquiry'-type computations faster: determining node ages, number descendants etc. takes large amounts memory impact adding removing tips. Note, trees node matrix can written disk using 'serialization format' .e. save saveRDS. matrix generated bigmemory's `.big.matrix()`.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/addNdmtrx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add node matrix to a tree — addNdmtrx","text":"","code":"# tree <- randTree(10, wndmtrx = FALSE) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 10.2 #>   + Root node is \"n1\" tree <- addNdmtrx(tree) #> Note, trees with `ndmtrx` cannot be saved and loaded using `save()` or `savehistory()`. Loading from these files may cause unusual behaviour. summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + With node matrix #>   + Binary #>   + PD 10.2 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/addTip.html","id":null,"dir":"Reference","previous_headings":"","what":"Add tip to a tree — addTip","title":"Add tip to a tree — addTip","text":"Returns tree new tip ID added","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/addTip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add tip to a tree — addTip","text":"","code":"addTip(   tree,   tid,   sid,   strt_age = NULL,   end_age = 0,   tree_age = NULL,   pid = paste0(\"p_\", tid) )"},{"path":"https://docs.ropensci.org/phylotaR/reference/addTip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add tip to a tree — addTip","text":"tree TreeMan object tid tip ID sid ID node become new tip sisters strt_age timepoint new tips first appear tree end_age timepoint new tips end appear tree, default 0. tree_age age tree pid parent ID (default 'p_' + tid)","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/addTip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add tip to a tree — addTip","text":"User must provide new tip ID, ID node become new tip's sister, new branch lengths. tip ID must contain letters numbers underscores. Optionally, user can specify IDs new parental internal nodes. Ensure strt_age greater end_age, strt_age falls within age span sister ID. Otherwise, negative spns may produced leading error. Note, returned tree node matrix. Note, providing negative end ages increase age tree.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/addTip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add tip to a tree — addTip","text":"","code":"tree <- randTree(10) tree_age <- getAge(tree) possible_ages <- getSpnAge(tree, \"t1\", tree_age) start_age <- runif(1, possible_ages[[\"end\"]], possible_ages[[\"start\"]]) end_age <- possible_ages[[\"end\"]] tree <- addTip(tree,   tid = \"t11\", sid = \"t1\", strt_age = start_age,   end_age = end_age, tree_age = tree_age ) summary(tree) #> Tree (TreeMan Object): #>   + 11 tips #>   + 10 internal nodes #>   + Binary #>   + PD 8.72 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/aotus.html","id":null,"dir":"Reference","previous_headings":"","what":"aotus — aotus","title":"aotus — aotus","text":"aotus","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/aotus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"aotus — aotus","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/aotus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aotus — aotus","text":"","code":"data(\"aotus\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/batcher.html","id":null,"dir":"Reference","previous_headings":"","what":"Download in batches — batcher","title":"Download in batches — batcher","text":"Run downloader function batches sequences taxonomic records","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/batcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download in batches — batcher","text":"","code":"batcher(ids, func, ps, lvl = 0)"},{"path":"https://docs.ropensci.org/phylotaR/reference/batcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download in batches — batcher","text":"ids Vector record ids func Downloader function ps Parameters list, generated parameters() lvl Integer, number message indentations indicating code depth.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/batcher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download in batches — batcher","text":"Vector records vector rentrez function results","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/birds.html","id":null,"dir":"Reference","previous_headings":"","what":"birds — birds","title":"birds — birds","text":"birds","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/birds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"birds — birds","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/birds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"birds — birds","text":"","code":"data(\"birds\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_clstr.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster BLAST Results — blast_clstr","title":"Cluster BLAST Results — blast_clstr","text":"Find single-linkage clusters BLAST results. Identifies seed sequence.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_clstr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster BLAST Results — blast_clstr","text":"","code":"blast_clstr(blast_res)"},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_clstr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster BLAST Results — blast_clstr","text":"blast_res BLAST results","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_clstr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster BLAST Results — blast_clstr","text":"List list list cluster descriptions","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter BLAST results — blast_filter","title":"Filter BLAST results — blast_filter","text":"Given BLAST output, filters query-subject pairs HSPs coverage greater mncvrg (specified pipeline parameters) remain. Filters : query-subject subject-query pairs, one coverages insufficient. HSP coverage obtained BLAST column qcovs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter BLAST results — blast_filter","text":"","code":"blast_filter(blast_res, ps, lvl = 3)"},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter BLAST results — blast_filter","text":"blast_res BLAST results ps Parameters list, generated parameters() lvl Integer, number message indentations indicating code depth.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter BLAST results — blast_filter","text":"data.frame blast res","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensures NCBI BLAST tools are installed — blast_setup","title":"Ensures NCBI BLAST tools are installed — blast_setup","text":"Ensures NCBI BLAST executables installed system. Tests version number BLAST tools.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensures NCBI BLAST tools are installed — blast_setup","text":"","code":"blast_setup(d, v, wd, otsdr)"},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensures NCBI BLAST tools are installed — blast_setup","text":"d Directory NCBI BLAST tools v v, T/F wd Working directory otsdr Run outsider?","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensures NCBI BLAST tools are installed — blast_setup","text":"list","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ensures NCBI BLAST tools are installed — blast_setup","text":"BLAST tools must version >= 2.0","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_sqs.html","id":null,"dir":"Reference","previous_headings":"","what":"BLAST All vs All — blast_sqs","title":"BLAST All vs All — blast_sqs","text":"Return BLAST results BLASTing vs given sequences. Returns NULL BLAST results generated.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_sqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BLAST All vs All — blast_sqs","text":"","code":"blast_sqs(txid, typ, sqs, ps, lvl)"},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_sqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BLAST All vs All — blast_sqs","text":"txid Taxonomic node ID, numeric typ Cluster type, 'direct' 'subtree' sqs Sequences ps Parameters list, generated parameters() lvl Integer, number message indentations indicating code depth.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blast_sqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BLAST All vs All — blast_sqs","text":"blast_res data.frame NULL","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/blastcache_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load BLAST results from cache — blastcache_load","title":"Load BLAST results from cache — blastcache_load","text":"Run load cached BLAST results.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blastcache_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load BLAST results from cache — blastcache_load","text":"","code":"blastcache_load(sids, wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/blastcache_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load BLAST results from cache — blastcache_load","text":"sids Sequence IDs wd Working dir","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blastcache_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load BLAST results from cache — blastcache_load","text":"blast_res data.frame NULL","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/blastcache_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save BLAST results to cache — blastcache_save","title":"Save BLAST results to cache — blastcache_save","text":"Run whenever local BLAST runs made save results cache case pipeline run .","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blastcache_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save BLAST results to cache — blastcache_save","text":"","code":"blastcache_save(sids, wd, obj)"},{"path":"https://docs.ropensci.org/phylotaR/reference/blastcache_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save BLAST results to cache — blastcache_save","text":"sids Sequence IDs wd Working dir obj BLAST result","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/blastdb_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a BLAST database — blastdb_gen","title":"Generate a BLAST database — blastdb_gen","text":"Generate BLAST database wd given sequences.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blastdb_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a BLAST database — blastdb_gen","text":"","code":"blastdb_gen(sqs, dbfl, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/blastdb_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a BLAST database — blastdb_gen","text":"sqs Sequences dbfl Outfile database ps Parameters list, generated parameters()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/blastn_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch blastn — blastn_run","title":"Launch blastn — blastn_run","text":"Use blastn BLAST -vs-using BLAST database.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blastn_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch blastn — blastn_run","text":"","code":"blastn_run(dbfl, outfl, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/blastn_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch blastn — blastn_run","text":"dbfl Database file outfl Output file ps Parameters list, generated parameters()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/blncdTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a balanced tree — blncdTree","title":"Generate a balanced tree — blncdTree","text":"Returns balanced TreeMan tree n tips.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blncdTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a balanced tree — blncdTree","text":"","code":"blncdTree(n, wndmtrx = FALSE, parallel = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/blncdTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a balanced tree — blncdTree","text":"n number tips, integer, must 3 greater wndmtrx T/F add node matrix? Default FALSE. parallel T/F run parallel? Default FALSE.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/blncdTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a balanced tree — blncdTree","text":"Equivalent ape's stree(type='balanced') returns TreeMan tree. Tree always rooted bifurcating.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/blncdTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a balanced tree — blncdTree","text":"","code":"tree <- blncdTree(5)"},{"path":"https://docs.ropensci.org/phylotaR/reference/bromeliads.html","id":null,"dir":"Reference","previous_headings":"","what":"bromeliads — bromeliads","title":"bromeliads — bromeliads","text":"bromeliads","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/bromeliads.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"bromeliads — bromeliads","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/bromeliads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bromeliads — bromeliads","text":"","code":"data(\"bromeliads\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/cTrees.html","id":null,"dir":"Reference","previous_headings":"","what":"cTrees — cTrees","title":"cTrees — cTrees","text":"Return TreeMen concatenated trees.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cTrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cTrees — cTrees","text":"","code":"cTrees(x, ...)"},{"path":"https://docs.ropensci.org/phylotaR/reference/cTrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cTrees — cTrees","text":"x TreeMan TreeMen objects ... TreeMan TreeMen objects","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cTrees.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cTrees — cTrees","text":"Concatenate trees single TreeMen object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/cTrees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cTrees — cTrees","text":"","code":"trees <- cTrees(randTree(10), randTree(10))"},{"path":"https://docs.ropensci.org/phylotaR/reference/cache_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a cache — cache_rm","title":"Delete a cache — cache_rm","text":"Deletes cache wd.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cache_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a cache — cache_rm","text":"","code":"cache_rm(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/cache_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a cache — cache_rm","text":"wd Working directory","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/cache_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Set-up a cache — cache_setup","title":"Set-up a cache — cache_setup","text":"Creates cache parameters wd.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cache_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set-up a cache — cache_setup","text":"","code":"cache_setup(ps, ovrwrt = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/cache_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set-up a cache — cache_setup","text":"ps Parameters list, generated parameters() ovrwrt Overwrite existing cache? Default FALSE.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cache_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set-up a cache — cache_setup","text":"Warning: overwriting function delete existing cache.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstBLD.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the BLD between two trees — calcDstBLD","title":"Calculate the BLD between two trees — calcDstBLD","text":"Returns branch length distance two trees.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstBLD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the BLD between two trees — calcDstBLD","text":"","code":"calcDstBLD(tree_1, tree_2, nrmlsd = FALSE, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstBLD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the BLD between two trees — calcDstBLD","text":"tree_1 TreeMan object tree_2 TreeMan object nrmlsd Boolean, returned value 0 1? Default, FALSE. parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstBLD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the BLD between two trees — calcDstBLD","text":"BLD Robinson-Foulds distance weighted branch length. Instead summing differences partitions two trees, metric takes square root squared difference branch lengths. Parallelizable.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstBLD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the BLD between two trees — calcDstBLD","text":"Kuhner, M. K. Felsenstein, J. (1994) Simulation comparison phylogeny algorithms equal unequal evolutionary rates. Molecular Biology Evolution, 11, 459-468.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstBLD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the BLD between two trees — calcDstBLD","text":"","code":"tree_1 <- randTree(10) tree_2 <- randTree(10) calcDstBLD(tree_1, tree_2) #> [1] 2.1869"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstMtrx.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the distance matrix — calcDstMtrx","title":"Calculate the distance matrix — calcDstMtrx","text":"Returns distance matrix specified ids tree.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstMtrx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the distance matrix — calcDstMtrx","text":"","code":"calcDstMtrx(tree, ids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstMtrx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the distance matrix — calcDstMtrx","text":"tree TreeMan object ids IDs nodes/tips parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstMtrx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the distance matrix — calcDstMtrx","text":"distance every id tree calculated summing lengths branches connect . can useful testing distances trees, checking evoltuionary isolated tips etc. Parallelizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstMtrx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the distance matrix — calcDstMtrx","text":"","code":"# checking the distance between two trees  tree_1 <- randTree(10) tree_2 <- randTree(10) dmat1 <- calcDstMtrx(tree_1, tree_1[\"tips\"]) dmat2 <- calcDstMtrx(tree_2, tree_2[\"tips\"]) mdl <- cor.test(x = dmat1, y = dmat2) as.numeric(1 - mdl$estimate) # 1 - Pearson's r #> [1] 0.5503735"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstRF.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Robinson-Foulds distance between two trees — calcDstRF","title":"Calculate the Robinson-Foulds distance between two trees — calcDstRF","text":"Returns Robinson-Foulds distance two trees.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstRF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Robinson-Foulds distance between two trees — calcDstRF","text":"","code":"calcDstRF(tree_1, tree_2, nrmlsd = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstRF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Robinson-Foulds distance between two trees — calcDstRF","text":"tree_1 TreeMan object tree_2 TreeMan object nrmlsd Boolean, returned value 0 1? Default, FALSE.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstRF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Robinson-Foulds distance between two trees — calcDstRF","text":"RF distance calculated sum partitions one tree shared . maximum number split differences total number nodes trees (excluding roots). Trees assumed bifurcating, tested. metric calculated trees unrooted. Parallelizable.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstRF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the Robinson-Foulds distance between two trees — calcDstRF","text":"Robinson, D. R.; Foulds, L. R. (1981). \"Comparison phylogenetic trees\". Mathematical Biosciences 53: 131-147.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstRF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Robinson-Foulds distance between two trees — calcDstRF","text":"","code":"tree_1 <- randTree(10) tree_2 <- randTree(10) calcDstRF(tree_1, tree_2) #> [1] 14"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstTrp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the triplet distance between two trees — calcDstTrp","title":"Calculate the triplet distance between two trees — calcDstTrp","text":"Returns triplet distance two trees.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstTrp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the triplet distance between two trees — calcDstTrp","text":"","code":"calcDstTrp(tree_1, tree_2, nrmlsd = FALSE, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstTrp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the triplet distance between two trees — calcDstTrp","text":"tree_1 TreeMan object tree_2 TreeMan object nrmlsd Boolean, returned value 0 1? Default, FALSE. parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstTrp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the triplet distance between two trees — calcDstTrp","text":"triplet distance calculated sum different outgroups among every triplet tips two trees. Normalisation performed dividing resulting number total number triplets shared two trees. triplet distance calculated shared tips two trees. Parallelizable.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstTrp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the triplet distance between two trees — calcDstTrp","text":"Critchlow DE, Pearl DK, Qian C. (1996) Triples Distance rooted bifurcating phylogenetic trees. Systematic Biology, 45, 323-34.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcDstTrp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the triplet distance between two trees — calcDstTrp","text":"","code":"tree_1 <- randTree(10) tree_2 <- randTree(10) calcDstTrp(tree_1, tree_2) #> [1] 80"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcFrPrp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate evolutionary distinctness — calcFrPrp","title":"Calculate evolutionary distinctness — calcFrPrp","text":"Returns evolutationary distinctness ids using fair proportion metric.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcFrPrp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate evolutionary distinctness — calcFrPrp","text":"","code":"calcFrPrp(tree, tids, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcFrPrp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate evolutionary distinctness — calcFrPrp","text":"tree TreeMan object tids tip IDs progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcFrPrp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate evolutionary distinctness — calcFrPrp","text":"fair proportion metric calculates evolutionary distinctness tips tree summing total amount branch length tip represents, branch tree evenly divided descendants. Parallelizable.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcFrPrp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate evolutionary distinctness — calcFrPrp","text":"Isaac, N.J.B., Turvey, S.T., Collen, B., Waterman, C. Baillie, J.E.M. (2007).  Mammals EDGE: conservation priorities based threat phylogeny. PLoS ONE, 2, e296.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcFrPrp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate evolutionary distinctness — calcFrPrp","text":"","code":"tree <- randTree(10) calcFrPrp(tree, tree[\"tips\"]) #>         t1        t10         t2         t3         t4         t5         t6  #> 1.29316066 0.65100499 0.46602716 1.10509473 0.77772731 0.07540477 0.94844240  #>         t7         t8         t9  #> 0.68677047 1.27463660 1.32327011"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdBlnc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the balance of a node — calcNdBlnc","title":"Calculate the balance of a node — calcNdBlnc","text":"Returns balance node.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdBlnc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the balance of a node — calcNdBlnc","text":"","code":"calcNdBlnc(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdBlnc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the balance of a node — calcNdBlnc","text":"tree TreeMan object id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdBlnc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the balance of a node — calcNdBlnc","text":"Balance calculated absolute difference number descendents two bifurcating edges node expected value balanced tree. NA returned node polytomous tip.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdBlnc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the balance of a node — calcNdBlnc","text":"","code":"tree <- randTree(10) calcNdBlnc(tree, id = tree[\"root\"]) # root balance #> [1] 2"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdsBlnc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the balances of all nodes — calcNdsBlnc","title":"Calculate the balances of all nodes — calcNdsBlnc","text":"Returns absolute differences number descendants bifurcating branches every node","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdsBlnc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the balances of all nodes — calcNdsBlnc","text":"","code":"calcNdsBlnc(tree, ids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdsBlnc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the balances of all nodes — calcNdsBlnc","text":"tree TreeMan object ids node ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdsBlnc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the balances of all nodes — calcNdsBlnc","text":"Runs calcNdBlnc() across node IDs. NA returned node polytomous. Parallelizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcNdsBlnc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the balances of all nodes — calcNdsBlnc","text":"","code":"tree <- randTree(10) calcNdsBlnc(tree, ids = tree[\"nds\"]) #> [1] 1.0 2.0 0.5 1.0 0.0 0.5 0.5 0.0 0.0"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcOvrlp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate phylogenetic overlap — calcOvrlp","title":"Calculate phylogenetic overlap — calcOvrlp","text":"Returns sum branch lengths represented ids_1 ids_2 tree.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcOvrlp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate phylogenetic overlap — calcOvrlp","text":"","code":"calcOvrlp(   tree,   ids_1,   ids_2,   nrmlsd = FALSE,   parallel = FALSE,   progress = \"none\" )"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcOvrlp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate phylogenetic overlap — calcOvrlp","text":"tree TreeMan object ids_1 tip ids community 1 ids_2 tip ids community 2 nrmlsd Boolean, returned value 0 1? Default, FALSE. parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcOvrlp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate phylogenetic overlap — calcOvrlp","text":"Use calculate sum branch lengths represented two communities. measure also known unique fraction. can used measure concepts phylogenetic turnover. Parallelizable.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcOvrlp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate phylogenetic overlap — calcOvrlp","text":"Lozupone, C., & Knight, R. (2005). UniFrac: new phylogenetic method comparing microbial communities. Applied Environmental Microbiology, 71(12), 8228-35.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcOvrlp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate phylogenetic overlap — calcOvrlp","text":"","code":"tree <- randTree(10) ids_1 <- sample(tree[\"tips\"], 5) ids_2 <- sample(tree[\"tips\"], 5) calcOvrlp(tree, ids_1, ids_2) #> [1] 4.155736"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPhyDv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate phylogenetic diversity — calcPhyDv","title":"Calculate phylogenetic diversity — calcPhyDv","text":"Returns phylogenetic diversity tree tips specified.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPhyDv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate phylogenetic diversity — calcPhyDv","text":"","code":"calcPhyDv(tree, tids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPhyDv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate phylogenetic diversity — calcPhyDv","text":"tree TreeMan object tids tip ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPhyDv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate phylogenetic diversity — calcPhyDv","text":"Faith's phylogenetic diversity calculated sum connected branches specified tips tree. can used investigate biodviersity measured phylogeny changes. Parallelizable. function uses getCnntdNds().","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPhyDv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate phylogenetic diversity — calcPhyDv","text":"Faith, D. (1992). Conservation evaluation phylogenetic diversity.  Biological Conservation, 61, 1-10.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPhyDv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate phylogenetic diversity — calcPhyDv","text":"","code":"tree <- randTree(10) calcPhyDv(tree, tree[\"tips\"]) #> [1] 8.28878"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPrtFrPrp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate evolutionary distinctness for part of tree — calcPrtFrPrp","title":"Calculate evolutionary distinctness for part of tree — calcPrtFrPrp","text":"Returns evolutationary distinctness ids using fair proportion metric.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPrtFrPrp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate evolutionary distinctness for part of tree — calcPrtFrPrp","text":"","code":"calcPrtFrPrp(tree, tids, ignr = NULL, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPrtFrPrp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate evolutionary distinctness for part of tree — calcPrtFrPrp","text":"tree TreeMan object tids tip IDs ignr tips ignore calculation progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPrtFrPrp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate evolutionary distinctness for part of tree — calcPrtFrPrp","text":"Extension calcFrPrp() ignore argument. Use ignr ignore certain tips calculation. example, tips extinct may wish ignore .","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPrtFrPrp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate evolutionary distinctness for part of tree — calcPrtFrPrp","text":"Isaac, N.J.B., Turvey, S.T., Collen, B., Waterman, C. Baillie, J.E.M. (2007).  Mammals EDGE: conservation priorities based threat phylogeny. PLoS ONE, 2, e296.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calcPrtFrPrp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate evolutionary distinctness for part of tree — calcPrtFrPrp","text":"","code":"tree <- randTree(10) calcPrtFrPrp(tree, c(\"t1\", \"t3\"), ignr = \"t2\") #>        t1        t3  #> 1.2664055 0.7229127"},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_mad.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MAD score — calc_mad","title":"Calculate MAD score — calc_mad","text":"sequences cluster(s) MAD score.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_mad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MAD score — calc_mad","text":"","code":"calc_mad(phylota, cid)"},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_mad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MAD score — calc_mad","text":"phylota Phylota object cid Cluster ID(s)","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_mad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MAD score — calc_mad","text":"vector","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_mad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MAD score — calc_mad","text":"MAD measure deviation sequence length cluster. Values range 0 1. Clusters values close 1 sequences similar lengths.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_mad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MAD score — calc_mad","text":"","code":"data(\"bromeliads\") random_cids <- sample(bromeliads@cids, 10) (calc_mad(phylota = bromeliads, cid = random_cids)) #>      1061       577       911         7       207       296       551      1279  #> 0.9604403 0.9975728 0.8632116 0.7303475 0.8608540 0.5875619 0.9845506 0.9688013  #>        47      1217  #> 0.6698142 0.9363895"},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_wrdfrq.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate word frequencies — calc_wrdfrq","title":"Calculate word frequencies — calc_wrdfrq","text":"sequences cluster(s) calculate frequency separate words either sequence definitions reported feature name.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_wrdfrq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate word frequencies — calc_wrdfrq","text":"","code":"calc_wrdfrq(   phylota,   cid,   min_frq = 0.1,   min_nchar = 1,   type = c(\"dfln\", \"nm\"),   ignr_pttrn = \"[^a-z0-9]\" )"},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_wrdfrq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate word frequencies — calc_wrdfrq","text":"phylota Phylota object cid Cluster ID(s) min_frq Minimum frequency min_nchar Minimum number characters word type Definitions (dfln) features (nm) ignr_pttrn Ignore pattern, REGEX text ignore.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_wrdfrq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate word frequencies — calc_wrdfrq","text":"list","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_wrdfrq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate word frequencies — calc_wrdfrq","text":"default, anything alphanumeric  ignored. 'dfln' 'nm' match slot names SeqRec, see list_seqrec_slots().","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/calc_wrdfrq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate word frequencies — calc_wrdfrq","text":"","code":"data('dragonflies') # work out what gene region the cluster is likely representing with word freqs. random_cids <- sample(dragonflies@cids, 10) # most frequent words in definition line (calc_wrdfrq(phylota = dragonflies, cid = random_cids, type = 'dfln')) #> $`430` #> named numeric(0) #>  #> $`653` #> named numeric(0) #>  #> $`15` #> named numeric(0) #>  #> $`478` #> wrds #>      rrna       and  #> 0.1525424 0.1016949  #>  #> $`548` #> wrds #>      gene  sequence  #> 0.1411765 0.1294118  #>  #> $`161` #> named numeric(0) #>  #> $`498` #> wrds #>     gene sequence  #>     0.15     0.15  #>  #> $`413` #> named numeric(0) #>  #> $`222` #> wrds #>        h3       cds      gene   histone   partial  #> 0.1528384 0.1135371 0.1135371 0.1135371 0.1135371  #>  #> $`29` #> named numeric(0) #>  # most frequent words in feature name (calc_wrdfrq(phylota = dragonflies, cid = random_cids, type = 'nm')) #> $`430` #> numeric(0) #>  #> $`653` #> numeric(0) #>  #> $`15` #> barcode  #>       1  #>  #> $`478` #> numeric(0) #>  #> $`548` #> numeric(0) #>  #> $`161` #> numeric(0) #>  #> $`498` #> numeric(0) #>  #> $`413` #> barcode  #>       1  #>  #> $`222` #> numeric(0) #>  #> $`29` #> numeric(0) #>"},{"path":"https://docs.ropensci.org/phylotaR/reference/checkNdlst.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if ndlst is correct — checkNdlst","title":"Check if ndlst is correct — checkNdlst","text":"Return T/F fpr ndlst consistency","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/checkNdlst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if ndlst is correct — checkNdlst","text":"","code":"checkNdlst(ndlst, root)"},{"path":"https://docs.ropensci.org/phylotaR/reference/checkNdlst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if ndlst is correct — checkNdlst","text":"ndlst ndlst root root ID","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/checkNdlst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if ndlst is correct — checkNdlst","text":"Tests whether node tree points valid node IDs. Also ensures `spn` `root` correct. Reports nodes errors.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/checkNdlst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if ndlst is correct — checkNdlst","text":"","code":"tree <- randTree(100) (checkNdlst(tree@ndlst, tree@root)) #> [1] TRUE"},{"path":"https://docs.ropensci.org/phylotaR/reference/checkTreeMen.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if trees are correct — checkTreeMen","title":"Check if trees are correct — checkTreeMen","text":"Return T/F trees true TreeMen object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/checkTreeMen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if trees are correct — checkTreeMen","text":"","code":"checkTreeMen(object)"},{"path":"https://docs.ropensci.org/phylotaR/reference/checkTreeMen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if trees are correct — checkTreeMen","text":"object TreeMen object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/checkTreeMen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if trees are correct — checkTreeMen","text":"Tests whether trees object TreeMan objects","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clade_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all node IDs that will be processed — clade_select","title":"Get all node IDs that will be processed — clade_select","text":"nodes less maximum number nodes sequences.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clade_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all node IDs that will be processed — clade_select","text":"","code":"clade_select(txdct, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clade_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all node IDs that will be processed — clade_select","text":"txdct TxDct ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clade_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all node IDs that will be processed — clade_select","text":"vector txids","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr2_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster sets of clusters identified in cluster stage — clstr2_calc","title":"Cluster sets of clusters identified in cluster stage — clstr2_calc","text":"Loads cluster sets cache. Extracts seed sequences runs -v-BLAST seeds identify sister clusters. Sisters merged. object sequences clusters saved cache.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr2_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster sets of clusters identified in cluster stage — clstr2_calc","text":"","code":"clstr2_calc(ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr2_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster sets of clusters identified in cluster stage — clstr2_calc","text":"ps Parameters list, generated parameters()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchically cluster all sequences of a txid — clstr_all","title":"Hierarchically cluster all sequences of a txid — clstr_all","text":"Identifies direct subtree clusters taxonomic ID.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchically cluster all sequences of a txid — clstr_all","text":"","code":"clstr_all(txid, sqs, txdct, ps, lvl = 0)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchically cluster all sequences of a txid — clstr_all","text":"txid Taxonomic ID sqs Sequence object downloaded sequences txdct Taxonomic dictionary ps Parameters list, generated parameters() lvl Integer, number message indentations indicating code depth.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchically cluster all sequences of a txid — clstr_all","text":"ClstrArc","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster sequences directly associated with txid — clstr_direct","title":"Cluster sequences directly associated with txid — clstr_direct","text":"GenBank certain sequences may associated higher level taxon (e.g. genus, family ...). function generates clusters sequences, alone. function identifies sequences sequence object generates list clusters cl_type 'direct'.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster sequences directly associated with txid — clstr_direct","text":"","code":"clstr_direct(txid, sqs, txdct, ps, lvl)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster sequences directly associated with txid — clstr_direct","text":"txid Taxonomic ID sqs Sequence object downloaded sequences txdct Taxonomic dictionary ps Parameters list, generated parameters() lvl Integer, number message indentations indicating code depth.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_direct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster sequences directly associated with txid — clstr_direct","text":"ClstrArc","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_sqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify clusters from sequences — clstr_sqs","title":"Identify clusters from sequences — clstr_sqs","text":"Given sequence object, function generate list cluster objects using BLAST","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_sqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify clusters from sequences — clstr_sqs","text":"","code":"clstr_sqs(txid, sqs, ps, lvl, typ = c(\"direct\", \"subtree\", \"paraphyly\"))"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_sqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify clusters from sequences — clstr_sqs","text":"txid Taxonomic ID sqs Sequence object sequences BLASTed ps Parameters list, generated parameters() lvl Integer, number message indentations indicating code depth. typ Direct, subtree paraphyly?","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_subtree.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster all sequences descending from a txid — clstr_subtree","title":"Cluster all sequences descending from a txid — clstr_subtree","text":"Identifies clusters sequences associated txid descendants. Clusters returned function thus cl_type 'subtree'.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_subtree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster all sequences descending from a txid — clstr_subtree","text":"","code":"clstr_subtree(txid, sqs, txdct, dds, ps, lvl)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_subtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster all sequences descending from a txid — clstr_subtree","text":"txid Taxonomic ID sqs Sequence object downloaded sequences txdct Taxonomic dictionary dds Vector direct descendants ps Parameters list, generated parameters() lvl Integer, number message indentations indicating code depth.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstr_subtree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster all sequences descending from a txid — clstr_subtree","text":"ClstrArc","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrarc_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate cluster archive container class — clstrarc_gen","title":"Generate cluster archive container class — clstrarc_gen","text":"Takes list ClstrRecs, returns ClstrArc.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrarc_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate cluster archive container class — clstrarc_gen","text":"","code":"clstrarc_gen(clstrrecs)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrarc_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate cluster archive container class — clstrarc_gen","text":"clstrrecs list ClstrRecs","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrarc_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate cluster archive container class — clstrarc_gen","text":"ClstrArc","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrarc_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join two cluster archive — clstrarc_join","title":"Join two cluster archive — clstrarc_join","text":"Take two ClstrArc classes join single ClstrArc.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrarc_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join two cluster archive — clstrarc_join","text":"","code":"clstrarc_join(clstrarc_1, clstrarc_2)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrarc_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join two cluster archive — clstrarc_join","text":"clstrarc_1 ClstrArc clstrarc_2 ClstrArc","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrarc_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join two cluster archive — clstrarc_join","text":"ClstrArc","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrrec_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list of clusters — clstrrec_gen","title":"Generate list of clusters — clstrrec_gen","text":"Takes list lists cluster descriptions generates ClstrRecs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrrec_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list of clusters — clstrrec_gen","text":"","code":"clstrrec_gen(clstr_list, txid, sqs, typ)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrrec_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list of clusters — clstrrec_gen","text":"clstr_list List list cluster descriptions txid Taxonomic node ID sqs Sequence records typ Cluster type","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrrec_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate list of clusters — clstrrec_gen","text":"list ClstrRecs","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate clusters for all sequences in wd — clstrs_calc","title":"Calculate clusters for all sequences in wd — clstrs_calc","text":"Loop downloaded sequences clade hierarchically find clusters using BLAST.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate clusters for all sequences in wd — clstrs_calc","text":"","code":"clstrs_calc(txdct, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate clusters for all sequences in wd — clstrs_calc","text":"txdct Taxonomic dictionary ps Parameters list, generated parameters()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join clusters for merging — clstrs_join","title":"Join clusters for merging — clstrs_join","text":"Uses seed sequence BLAST results IDs join clusters identified sisters single clusters. Resulting object joined clusters, merging required reformat clusters subsequent analysis.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join clusters for merging — clstrs_join","text":"","code":"clstrs_join(blast_res, seed_ids, all_clstrs, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join clusters for merging — clstrs_join","text":"blast_res Seed sequence BLAST results seed_ids Seed sequence IDs all_clstrs List clusters ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join clusters for merging — clstrs_join","text":"list joined clusters","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge joined clusters — clstrs_merge","title":"Merge joined clusters — clstrs_merge","text":"Takes list joined clusters computes data slot create single merged cluster. txdct required parent look-.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge joined clusters — clstrs_merge","text":"","code":"clstrs_merge(jnd_clstrs, txdct)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge joined clusters — clstrs_merge","text":"jnd_clstrs List joined clusters txdct Taxonomic dictionary","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge joined clusters — clstrs_merge","text":"list ClstrRecs","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_renumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Renumber cluster IDs — clstrs_renumber","title":"Renumber cluster IDs — clstrs_renumber","text":"Returns ClstrArc ID determined number sequences cluster.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_renumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renumber cluster IDs — clstrs_renumber","text":"","code":"clstrs_renumber(clstrrecs)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_renumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renumber cluster IDs — clstrs_renumber","text":"clstrrecs List clusters","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_renumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Renumber cluster IDs — clstrs_renumber","text":"ClstrArc","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save clusters to cache — clstrs_save","title":"Save clusters to cache — clstrs_save","text":"Saves clusters generated clstr_all cache.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save clusters to cache — clstrs_save","text":"","code":"clstrs_save(wd, txid, clstrs)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clstrs_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save clusters to cache — clstrs_save","text":"wd Working directory txid Taxonomic ID, numeric clstrs cluster list","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clusters2_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the cluster2 stage — clusters2_run","title":"Run the cluster2 stage — clusters2_run","text":"Run fourth stage phylotaR pipeline, cluster2. Identify clusters higher taxonomic levels merging sister clusters.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clusters2_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the cluster2 stage — clusters2_run","text":"","code":"clusters2_run(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clusters2_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the cluster2 stage — clusters2_run","text":"wd Working directory","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clusters2_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the cluster2 stage — clusters2_run","text":"","code":"if (FALSE) {      # Note: this example requires BLAST and internet to run.      # example with temp folder   wd <- file.path(tempdir(), 'aotus')   # setup for aotus, make sure aotus/ folder already exists   if (!dir.exists(wd)) {     dir.create(wd)   }   ncbi_dr <- '[SET BLAST+ BIN PATH HERE]'   setup(wd = wd, txid = 9504, ncbi_dr = ncbi_dr)  # txid for Aotus primate genus   # individually run stages   taxise_run(wd = wd)   download_run(wd = wd)   clusters_run(wd = wd)   clusters2_run(wd = wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/clusters_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the cluster stage — clusters_run","title":"Run the cluster stage — clusters_run","text":"Run third stage phylotaR pipeline, cluster. stage hierarchically traverses taxonomy identifying direct subtree clusters downloaded sequences. taxonomic nodes small cluster identification placed paraphyletic clusters.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/clusters_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the cluster stage — clusters_run","text":"","code":"clusters_run(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/clusters_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the cluster stage — clusters_run","text":"wd Working directory","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/clusters_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the cluster stage — clusters_run","text":"","code":"if (FALSE) {      # Note: this example requires BLAST and internet to run.      # example with temp folder   wd <- file.path(tempdir(), 'aotus')   # setup for aotus, make sure aotus/ folder already exists   if (!dir.exists(wd)) {     dir.create(wd)   }   ncbi_dr <- '[SET BLAST+ BIN PATH HERE]'   setup(wd = wd, txid = 9504, ncbi_dr = ncbi_dr)  # txid for Aotus primate genus   # individually run stages   taxise_run(wd = wd)   download_run(wd = wd)   clusters_run(wd = wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/cmdln.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a command via terminal/command prompt — cmdln","title":"Run a command via terminal/command prompt — cmdln","text":"Provide command arguments vector. Also can take lgfl stdout stderr written. lgfl provided, list returned 'status', 'stdout' 'stderr'. Else status returned - 1 success, 0 failed.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cmdln.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a command via terminal/command prompt — cmdln","text":"","code":"cmdln(cmd, args, ps, lgfl = NULL)"},{"path":"https://docs.ropensci.org/phylotaR/reference/cmdln.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a command via terminal/command prompt — cmdln","text":"cmd Command run args Vector command arguments, parameter value must separate element ps Paramters lgfl File stdout/err written","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cmdln.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a command via terminal/command prompt — cmdln","text":"status, integer character","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cmdln.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run a command via terminal/command prompt — cmdln","text":"Note, stdout/err returned 'raw'. Use rawToChar() convert characters.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/cycads.html","id":null,"dir":"Reference","previous_headings":"","what":"cycads — cycads","title":"cycads — cycads","text":"cycads","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cycads.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"cycads — cycads","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/cycads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cycads — cycads","text":"","code":"data(\"cycads\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/descendants_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get descendants — descendants_get","title":"Get descendants — descendants_get","text":"Look-either direct taxonomic descendants node taxonomic dictionary.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/descendants_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get descendants — descendants_get","text":"","code":"descendants_get(id, txdct, direct = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/descendants_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get descendants — descendants_get","text":"id txid txdct TaxDict direct T/F, return direct descendants?","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/descendants_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get descendants — descendants_get","text":"vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/download_obj_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an object returned from rentrez function — download_obj_check","title":"Check an object returned from rentrez function — download_obj_check","text":"Returns T/F. Checks object returned rentrez function expected.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/download_obj_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an object returned from rentrez function — download_obj_check","text":"","code":"download_obj_check(obj)"},{"path":"https://docs.ropensci.org/phylotaR/reference/download_obj_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an object returned from rentrez function — download_obj_check","text":"obj Object returned rentrez function","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/download_obj_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an object returned from rentrez function — download_obj_check","text":"T/F","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/download_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run download stage — download_run","title":"Run download stage — download_run","text":"Run second stage phylotaR, download. stage downloads sequences nodes sequence numbers less mxsqs. hierarchically traverses taxonomy node downloads direct subtree sequences descendants.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/download_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run download stage — download_run","text":"","code":"download_run(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/download_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run download stage — download_run","text":"wd Working directory","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/download_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run download stage — download_run","text":"","code":"if (FALSE) {      # Note: this example requires BLAST and internet to run.      # example with temp folder   wd <- file.path(tempdir(), 'aotus')   # setup for aotus, make sure aotus/ folder already exists   if (!dir.exists(wd)) {     dir.create(wd)   }   ncbi_dr <- '[SET BLAST+ BIN PATH HERE]'   setup(wd = wd, txid = 9504, ncbi_dr = ncbi_dr)  # txid for Aotus primate genus   # individually run stages   taxise_run(wd = wd)   download_run(wd = wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/dragonflies.html","id":null,"dir":"Reference","previous_headings":"","what":"dragonflies — dragonflies","title":"dragonflies — dragonflies","text":"dragonflies","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/dragonflies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dragonflies — dragonflies","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/dragonflies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dragonflies — dragonflies","text":"","code":"data(\"dragonflies\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_by_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce clusters to specific rank — drop_by_rank","title":"Reduce clusters to specific rank — drop_by_rank","text":"Identifies higher level taxa sequence clusters given rank. Selects representative sequences unique taxon using choose_by functions. default, function choose top ten sequences first sorting fewest number ambiguous sequences, youngest, sequence length.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_by_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce clusters to specific rank — drop_by_rank","text":"","code":"drop_by_rank(   phylota,   rnk = \"species\",   keep_higher = FALSE,   n = 10,   choose_by = c(\"pambgs\", \"age\", \"nncltds\"),   greatest = c(FALSE, FALSE, TRUE) )"},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_by_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce clusters to specific rank — drop_by_rank","text":"phylota Phylota object rnk Taxonomic rank keep_higher Keep higher taxonomic ranks? n Number sequences per taxon choose_by Vector selection functions greatest Greatest lowest choose_by function","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_by_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce clusters to specific rank — drop_by_rank","text":"phylota","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_by_rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce clusters to specific rank — drop_by_rank","text":"","code":"data(\"dragonflies\") # For faster computations, let's only work with the 5 clusters. dragonflies <- drop_clstrs(phylota = dragonflies, cid = dragonflies@cids[10:15])   # We can use drop_by_rank() to reduce to 10 sequences per genus for each cluster (reduced_1 <- drop_by_rank(phylota = dragonflies, rnk = 'genus', n = 10,                            choose_by = c('pambgs', 'age', 'nncltds'),                            greatest = c(FALSE, FALSE, TRUE))) #> Phylota Table (Anisoptera) #> - [6] clusters #> - [411] sequences #> - [162] source taxa  # We can specify what aspects of the sequences we would like to select per genus # By default we select the sequences with fewest ambiguous nucleotides (e.g. # we avoid Ns), the youngest age and then longest sequence. # We can reverse the 'greatest' to get the opposite. (reduced_2 <- drop_by_rank(phylota = dragonflies, rnk = 'genus', n = 10,                            choose_by = c('pambgs', 'age', 'nncltds'),                            greatest = c(TRUE, TRUE, FALSE))) #> Phylota Table (Anisoptera) #> - [6] clusters #> - [411] sequences #> - [174] source taxa   # Leading to smaller sequnces ... r1_sqlngth <- mean(get_sq_slot(phylota = reduced_1,                                 sid = reduced_1@sids, slt_nm = 'nncltds')) r2_sqlngth <- mean(get_sq_slot(phylota = reduced_2,                                 sid = reduced_2@sids, slt_nm = 'nncltds')) (r1_sqlngth > r2_sqlngth) #> [1] FALSE # ... with more ambigous characters .... r1_pambgs <- mean(get_sq_slot(phylota = reduced_1, sid = reduced_1@sids,                               slt_nm = 'pambgs')) r2_pambgs <- mean(get_sq_slot(phylota = reduced_2, sid = reduced_2@sids,                               slt_nm = 'pambgs')) (r1_pambgs < r2_pambgs) #> [1] TRUE # .... and older ages (measured in days since being added to GenBank). r1_age <- mean(get_sq_slot(phylota = reduced_1, sid = reduced_1@sids,                            slt_nm = 'age')) r2_age <- mean(get_sq_slot(phylota = reduced_2, sid = reduced_2@sids,                            slt_nm = 'age')) (r1_age < r2_age) #> [1] FALSE   # Or... we can simply reduce the clusters to just one sequence per genus (dragonflies <- drop_by_rank(phylota = dragonflies, rnk = 'genus', n = 1)) #> Phylota Table (Anisoptera) #> - [6] clusters #> - [73] sequences #> - [72] source taxa"},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_clstrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop cluster records from phylota object — drop_clstrs","title":"Drop cluster records from phylota object — drop_clstrs","text":"Drops clusters except identified user.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_clstrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop cluster records from phylota object — drop_clstrs","text":"","code":"drop_clstrs(phylota, cid)"},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_clstrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop cluster records from phylota object — drop_clstrs","text":"phylota Phylota object cid Cluster ID(s) kept","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_clstrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop cluster records from phylota object — drop_clstrs","text":"phylota","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_clstrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop cluster records from phylota object — drop_clstrs","text":"","code":"data(\"dragonflies\") # specify cids to *keep* random_cids <- sample(dragonflies@cids, 100) # drop an entire cluster nbefore <- length(dragonflies@cids) dragonflies <- drop_clstrs(phylota = dragonflies, cid = random_cids) nafter <- length(dragonflies@cids) # now there are only 100 clusters (nafter < nbefore) #> [1] TRUE"},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_sqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop sequences in a cluster — drop_sqs","title":"Drop sequences in a cluster — drop_sqs","text":"Drop sequences cluster except identified user.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_sqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop sequences in a cluster — drop_sqs","text":"","code":"drop_sqs(phylota, cid, sid)"},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_sqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop sequences in a cluster — drop_sqs","text":"phylota Phylota object cid Cluster ID sid Sequence ID(s) kept","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_sqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop sequences in a cluster — drop_sqs","text":"phylota","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/drop_sqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop sequences in a cluster — drop_sqs","text":"","code":"data(\"dragonflies\") # drop random sequences from cluster 0 clstr <- dragonflies[['0']] # specify the sids to *keep* sids <- sample(clstr@sids, 100) (dragonflies <- drop_sqs(phylota = dragonflies, cid = '0', sid = sids)) #> Phylota Table (Anisoptera) #> - [811] clusters #> - [14714] sequences #> - [1609] source taxa # Note, sequences dropped may be represented in other clusters"},{"path":"https://docs.ropensci.org/phylotaR/reference/error.html","id":null,"dir":"Reference","previous_headings":"","what":"Write error message to log — error","title":"Write error message to log — error","text":"Inform user error occurred log.txt, halt pipeline.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write error message to log — error","text":"","code":"error(ps, ...)"},{"path":"https://docs.ropensci.org/phylotaR/reference/error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write error message to log — error","text":"ps Parameters list, generated parameters() ... Message elements concatenating","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/fastCheckTreeMan.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if tree is correct, fast! — fastCheckTreeMan","title":"Check if tree is correct, fast! — fastCheckTreeMan","text":"Return T/F tree true TreeMan object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/fastCheckTreeMan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if tree is correct, fast! — fastCheckTreeMan","text":"","code":"fastCheckTreeMan(object)"},{"path":"https://docs.ropensci.org/phylotaR/reference/fastCheckTreeMan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if tree is correct, fast! — fastCheckTreeMan","text":"object TreeMan object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/fastCheckTreeMan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if tree is correct, fast! — fastCheckTreeMan","text":"Whenever tree first initiated check used. detailed checking use checkNdlst.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/gb_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract elements from a raw GenBank record — gb_extract","title":"Extract elements from a raw GenBank record — gb_extract","text":"Returns list elements GenBank record 'organism', 'sequence' features.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/gb_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract elements from a raw GenBank record — gb_extract","text":"","code":"gb_extract(record)"},{"path":"https://docs.ropensci.org/phylotaR/reference/gb_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract elements from a raw GenBank record — gb_extract","text":"record raw GenBank text record","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/gb_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract elements from a raw GenBank record — gb_extract","text":"list GenBank elements","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/gb_extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract elements from a raw GenBank record — gb_extract","text":"Uses restez extract functions. See restez package details.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Get age of tree — getAge","title":"Get age of tree — getAge","text":"Returns age, numeric, tree","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get age of tree — getAge","text":"","code":"getAge(tree, parallel = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get age of tree — getAge","text":"tree TreeMan object parallel logical, make parallel?","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getAge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get age of tree — getAge","text":"Calculates age tree, determined maximum tip root distance.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get age of tree — getAge","text":"","code":"tree <- randTree(10) (getAge(tree)) #> [1] 3.207328"},{"path":"https://docs.ropensci.org/phylotaR/reference/getBiprts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the sets of labels for each bipartition in tree — getBiprts","title":"Get the sets of labels for each bipartition in tree — getBiprts","text":"Returns list tip IDs branch tree. Options allow user act root present use universal code comparing trees.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getBiprts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the sets of labels for each bipartition in tree — getBiprts","text":"","code":"getBiprts(tree, tips = tree@tips, root = TRUE, universal = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getBiprts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the sets of labels for each bipartition in tree — getBiprts","text":"tree TreeMan object tips vector tips IDs use bipartitions root Include root bipartitions? Default TRUE. universal Create code comparing trees","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getBiprts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the sets of labels for each bipartition in tree — getBiprts","text":"Setting root FALSE ignore bipartitions created root. Setting universal TRUE return vector 0s 1s, list tips. codes always begin 1, allow comparison splits trees \"chiralty\", speak.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getBiprts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the sets of labels for each bipartition in tree — getBiprts","text":"","code":"tree <- randTree(10) # get all of the tip IDs for each branch in the rooted tree (getBiprts(tree)) #> $n1 #> $n1[[1]] #>  [1] \"t1\"  \"t10\" \"t2\"  \"t3\"  \"t4\"  \"t5\"  \"t6\"  \"t7\"  \"t8\"  \"t9\"  #>  #> $n1[[2]] #> character(0) #>  #>  #> $n2 #> $n2[[1]] #> [1] \"t10\" \"t2\"  \"t4\"  \"t5\"  \"t7\"  \"t8\"  #>  #> $n2[[2]] #> [1] \"t1\" \"t3\" \"t6\" \"t9\" #>  #>  #> $n3 #> $n3[[1]] #> [1] \"t1\" \"t3\" \"t6\" \"t9\" #>  #> $n3[[2]] #> [1] \"t10\" \"t2\"  \"t4\"  \"t5\"  \"t7\"  \"t8\"  #>  #>  #> $n4 #> $n4[[1]] #> [1] \"t3\" \"t6\" #>  #> $n4[[2]] #> [1] \"t1\"  \"t10\" \"t2\"  \"t4\"  \"t5\"  \"t7\"  \"t8\"  \"t9\"  #>  #>  #> $n5 #> $n5[[1]] #> [1] \"t1\" \"t9\" #>  #> $n5[[2]] #> [1] \"t10\" \"t2\"  \"t3\"  \"t4\"  \"t5\"  \"t6\"  \"t7\"  \"t8\"  #>  #>  #> $n6 #> $n6[[1]] #> [1] \"t2\" \"t4\" \"t7\" \"t8\" #>  #> $n6[[2]] #> [1] \"t1\"  \"t10\" \"t3\"  \"t5\"  \"t6\"  \"t9\"  #>  #>  #> $n7 #> $n7[[1]] #> [1] \"t2\" \"t4\" \"t8\" #>  #> $n7[[2]] #> [1] \"t1\"  \"t10\" \"t3\"  \"t5\"  \"t6\"  \"t7\"  \"t9\"  #>  #>  #> $n8 #> $n8[[1]] #> [1] \"t2\" \"t4\" #>  #> $n8[[2]] #> [1] \"t1\"  \"t10\" \"t3\"  \"t5\"  \"t6\"  \"t7\"  \"t8\"  \"t9\"  #>  #>  #> $n9 #> $n9[[1]] #> [1] \"t10\" \"t5\"  #>  #> $n9[[2]] #> [1] \"t1\" \"t2\" \"t3\" \"t4\" \"t6\" \"t7\" \"t8\" \"t9\" #>  #>  # ignore the root and get bipartitions for unrooted tree (getBiprts(tree, root = FALSE)) #> $n2 #> $n2[[1]] #> [1] \"t10\" \"t2\"  \"t4\"  \"t5\"  \"t7\"  \"t8\"  #>  #> $n2[[2]] #> [1] \"t1\" \"t3\" \"t6\" \"t9\" #>  #>  #> $n3 #> $n3[[1]] #> [1] \"t1\" \"t3\" \"t6\" \"t9\" #>  #> $n3[[2]] #> [1] \"t10\" \"t2\"  \"t4\"  \"t5\"  \"t7\"  \"t8\"  #>  #>  #> $n4 #> $n4[[1]] #> [1] \"t3\" \"t6\" #>  #> $n4[[2]] #> [1] \"t1\"  \"t10\" \"t2\"  \"t4\"  \"t5\"  \"t7\"  \"t8\"  \"t9\"  #>  #>  #> $n5 #> $n5[[1]] #> [1] \"t1\" \"t9\" #>  #> $n5[[2]] #> [1] \"t10\" \"t2\"  \"t3\"  \"t4\"  \"t5\"  \"t6\"  \"t7\"  \"t8\"  #>  #>  #> $n6 #> $n6[[1]] #> [1] \"t2\" \"t4\" \"t7\" \"t8\" #>  #> $n6[[2]] #> [1] \"t1\"  \"t10\" \"t3\"  \"t5\"  \"t6\"  \"t9\"  #>  #>  #> $n7 #> $n7[[1]] #> [1] \"t2\" \"t4\" \"t8\" #>  #> $n7[[2]] #> [1] \"t1\"  \"t10\" \"t3\"  \"t5\"  \"t6\"  \"t7\"  \"t9\"  #>  #>  #> $n8 #> $n8[[1]] #> [1] \"t2\" \"t4\" #>  #> $n8[[2]] #> [1] \"t1\"  \"t10\" \"t3\"  \"t5\"  \"t6\"  \"t7\"  \"t8\"  \"t9\"  #>  #>  #> $n9 #> $n9[[1]] #> [1] \"t10\" \"t5\"  #>  #> $n9[[2]] #> [1] \"t1\" \"t2\" \"t3\" \"t4\" \"t6\" \"t7\" \"t8\" \"t9\" #>  #>  # use the universal code for comparing splits between trees (getBiprts(tree, root = FALSE, universal = TRUE)) #> [1] \"1001001001\" \"1110110111\" \"1000000001\" \"1101011001\" \"1101011101\" #> [6] \"1101011111\" \"1011101111\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getCnnctdNds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all nodes connected by given tips — getCnnctdNds","title":"Get all nodes connected by given tips — getCnnctdNds","text":"Return vector IDs nodes connected tip IDs given.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getCnnctdNds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all nodes connected by given tips — getCnnctdNds","text":"","code":"getCnnctdNds(tree, tids)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getCnnctdNds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all nodes connected by given tips — getCnnctdNds","text":"tree TreeMan object tids vector tip IDs","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getCnnctdNds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all nodes connected by given tips — getCnnctdNds","text":"Returns vector. function basis calcPhyDv(), determines unique set nodes connected set tips.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getCnnctdNds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all nodes connected by given tips — getCnnctdNds","text":"","code":"tree <- randTree(10) cnntdnds <- getCnnctdNds(tree, c(\"t1\", \"t2\"))"},{"path":"https://docs.ropensci.org/phylotaR/reference/getDcsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get extinct tips from a tree — getDcsd","title":"Get extinct tips from a tree — getDcsd","text":"Return extinct tip IDs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getDcsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get extinct tips from a tree — getDcsd","text":"","code":"getDcsd(tree, tol = 1e-08)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getDcsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get extinct tips from a tree — getDcsd","text":"tree TreeMan object tol zero tolerance","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getDcsd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get extinct tips from a tree — getDcsd","text":"Returns vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getDcsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get extinct tips from a tree — getDcsd","text":"","code":"tree <- randTree(10) (getDcsd(tree)) #> [1] \"t1\"  \"t10\" \"t2\"  \"t4\"  \"t5\"  \"t6\"  \"t7\"  \"t8\"  \"t9\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getLvng.html","id":null,"dir":"Reference","previous_headings":"","what":"Get extant tips from a tree — getLvng","title":"Get extant tips from a tree — getLvng","text":"Return extant tip IDs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getLvng.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get extant tips from a tree — getLvng","text":"","code":"getLvng(tree, tol = 1e-08)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getLvng.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get extant tips from a tree — getLvng","text":"tree TreeMan object tol zero tolerance","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getLvng.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get extant tips from a tree — getLvng","text":"Returns vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getLvng.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get extant tips from a tree — getLvng","text":"","code":"tree <- randTree(10) (getLvng(tree)) #> [1] \"t8\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Get age — getNdAge","title":"Get age — getNdAge","text":"Return age id. Requires known age tree provided.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get age — getNdAge","text":"","code":"getNdAge(tree, id, tree_age)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get age — getNdAge","text":"tree TreeMan object id node id tree_age numeric value known age tree","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdAge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get age — getNdAge","text":"Returns numeric.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get age — getNdAge","text":"","code":"data(mammals) # when did apes emerge? # get parent id for all apes prnt_id <- getPrnt(mammals, ids = c(\"Homo_sapiens\", \"Hylobates_concolor\")) # mammal_age <- getAge(mammals)  # ~166.2, needs to be performed when tree is not up-to-date getNdAge(mammals, id = prnt_id, tree_age = 166.2) #> [1] 23.5"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdKids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get children IDs — getNdKids","title":"Get children IDs — getNdKids","text":"Return node ids tips descend node.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdKids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get children IDs — getNdKids","text":"","code":"getNdKids(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdKids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get children IDs — getNdKids","text":"tree TreeMan object id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdKids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get children IDs — getNdKids","text":"Returns vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdKids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get children IDs — getNdKids","text":"","code":"tree <- randTree(10) # everyone descends from root getNdKids(tree, id = tree[\"root\"]) #>  [1] \"t1\"  \"t2\"  \"t3\"  \"t4\"  \"t5\"  \"t6\"  \"t7\"  \"t8\"  \"t9\"  \"t10\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdLng.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lineage — getNdLng","title":"Get lineage — getNdLng","text":"Return unique taxonomic names connecting id root.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdLng.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lineage — getNdLng","text":"","code":"getNdLng(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdLng.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lineage — getNdLng","text":"tree TreeMan object id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdLng.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lineage — getNdLng","text":"Returns vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdLng.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lineage — getNdLng","text":"","code":"data(mammals) # return human lineage getNdLng(mammals, id = \"Homo_sapiens\") #>  [1] \"Mammalia\"         \"Theria\"           \"Eutheria\"         \"Boreoeutheria\"    #>  [5] \"Euarchontoglires\" \"Primates\"         \"Haplorrhini\"      \"Simiiformes\"      #>  [9] \"Catarrhini\"       \"Hominoidea\"       \"Hominidae\"        \"Homininae\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Get phylogenetic diversity of node — getNdPD","title":"Get phylogenetic diversity of node — getNdPD","text":"Return summed value descending spns","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get phylogenetic diversity of node — getNdPD","text":"","code":"getNdPD(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get phylogenetic diversity of node — getNdPD","text":"tree TreeMan object id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get phylogenetic diversity of node — getNdPD","text":"Sums lengths descending branches node.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get phylogenetic diversity of node — getNdPD","text":"","code":"tree <- randTree(10) getNdPD(tree, id = \"n1\") # return PD of n1 which in this case is for the whole tree #> [1] 5.626307"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrdst.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pre-distance — getNdPrdst","title":"Get pre-distance — getNdPrdst","text":"Return root tip distance (prdst) id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrdst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pre-distance — getNdPrdst","text":"","code":"getNdPrdst(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrdst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pre-distance — getNdPrdst","text":"tree TreeMan object id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrdst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get pre-distance — getNdPrdst","text":"Sums lengths branches id root.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrdst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get pre-distance — getNdPrdst","text":"","code":"tree <- randTree(10) getNdPrdst(tree, id = \"t1\") # return the distance to root from t1 #> [1] 3.752139"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pre-nodes to root — getNdPrids","title":"Get pre-nodes to root — getNdPrids","text":"Return node ids connecting id root.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pre-nodes to root — getNdPrids","text":"","code":"getNdPrids(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pre-nodes to root — getNdPrids","text":"tree TreeMan object id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get pre-nodes to root — getNdPrids","text":"Returns vector. IDs returned order node ID root.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPrids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get pre-nodes to root — getNdPrids","text":"","code":"tree <- randTree(10) # get all nodes to root getNdPrids(tree, id = \"t1\") #> [1] \"n6\" \"n5\" \"n3\" \"n2\" \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPtids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get post-nodes to tips — getNdPtids","title":"Get post-nodes to tips — getNdPtids","text":"Return node ids connecting id kids.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPtids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get post-nodes to tips — getNdPtids","text":"","code":"getNdPtids(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPtids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get post-nodes to tips — getNdPtids","text":"tree TreeMan object id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPtids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get post-nodes to tips — getNdPtids","text":"Returns vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdPtids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get post-nodes to tips — getNdPtids","text":"","code":"tree <- randTree(10) # get all nodes from root to tip getNdPtids(tree, id = \"n1\") #>  [1] \"n2\"  \"n3\"  \"n4\"  \"n5\"  \"n6\"  \"n7\"  \"n8\"  \"n9\"  \"t1\"  \"t2\"  \"t3\"  \"t4\"  #> [13] \"t5\"  \"t6\"  \"t7\"  \"t8\"  \"t9\"  \"t10\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSlt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a node slot — getNdSlt","title":"Get a node slot — getNdSlt","text":"Returns value named slot.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSlt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a node slot — getNdSlt","text":"","code":"getNdSlt(tree, slt_nm, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSlt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a node slot — getNdSlt","text":"tree TreeMan object slt_nm slot name id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSlt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a node slot — getNdSlt","text":"Returned object depends name, either character, vector numeric. Default node slots : id, spn, prid, ptid txnym. slot empty, returns NA.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSlt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a node slot — getNdSlt","text":"","code":"tree <- randTree(10) getNdSlt(tree, slt_nm = \"spn\", id = \"t1\") # return span of t1 #> [1] 0.7973574"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSstr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sister id — getNdSstr","title":"Get sister id — getNdSstr","text":"Returns id sister(s) node id given.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSstr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sister id — getNdSstr","text":"","code":"getNdSstr(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSstr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sister id — getNdSstr","text":"tree TreeMan object id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSstr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get sister id — getNdSstr","text":"error raised sister (e.g. root).  can one sister tree polytomous.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdSstr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sister id — getNdSstr","text":"","code":"tree <- randTree(10) getNdSstr(tree, id = \"t1\") #> [1] \"n4\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ages for multiple nodes — getNdsAge","title":"Get ages for multiple nodes — getNdsAge","text":"Return age ids.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ages for multiple nodes — getNdsAge","text":"","code":"getNdsAge(tree, ids, tree_age, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ages for multiple nodes — getNdsAge","text":"tree TreeMan object ids vector node ids tree_age numeric value known age tree parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsAge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get ages for multiple nodes — getNdsAge","text":"Returns vector, parallelizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ages for multiple nodes — getNdsAge","text":"","code":"tree <- randTree(10) getNdsAge(tree, ids = tree[\"nds\"], tree_age = getAge(tree)) #>        n1        n2        n3        n4        n5        n6        n7        n8  #> 2.4037820 2.0855576 2.2690312 1.1422668 1.6715032 0.9465052 0.8283989 1.5896087  #>        n9  #> 0.5606578"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsFrmTxnyms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get IDs for nodes represented txnyms — getNdsFrmTxnyms","title":"Get IDs for nodes represented txnyms — getNdsFrmTxnyms","text":"Return list IDs node contains given txnyms.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsFrmTxnyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get IDs for nodes represented txnyms — getNdsFrmTxnyms","text":"","code":"getNdsFrmTxnyms(tree, txnyms)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsFrmTxnyms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get IDs for nodes represented txnyms — getNdsFrmTxnyms","text":"tree TreeMan object txnyms vector taxonomic group names","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsFrmTxnyms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get IDs for nodes represented txnyms — getNdsFrmTxnyms","text":"Returns list. Txnyms must spelt correctly.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsFrmTxnyms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get IDs for nodes represented txnyms — getNdsFrmTxnyms","text":"","code":"data(mammals) # what ID represents the apes? getNdsFrmTxnyms(mammals, \"Hominoidea\") #> $Hominoidea #> [1] \"n2960\" #>"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsKids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get children IDs for multiple nodes — getNdsKids","title":"Get children IDs for multiple nodes — getNdsKids","text":"Return node ids tips descend node ids.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsKids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get children IDs for multiple nodes — getNdsKids","text":"","code":"getNdsKids(tree, ids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsKids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get children IDs for multiple nodes — getNdsKids","text":"tree TreeMan object ids vector node ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsKids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get children IDs for multiple nodes — getNdsKids","text":"Returns list, parallelizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsKids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get children IDs for multiple nodes — getNdsKids","text":"","code":"tree <- randTree(10) getNdsKids(tree, id = tree[\"nds\"]) #> $n1 #>  [1] \"t1\"  \"t2\"  \"t3\"  \"t4\"  \"t5\"  \"t6\"  \"t7\"  \"t8\"  \"t9\"  \"t10\" #>  #> $n2 #> [1] \"t1\" \"t2\" \"t3\" \"t4\" \"t5\" \"t6\" \"t7\" \"t8\" \"t9\" #>  #> $n3 #> [1] \"t1\" \"t2\" \"t3\" \"t4\" \"t5\" \"t7\" \"t8\" \"t9\" #>  #> $n4 #> [1] \"t2\" \"t3\" \"t5\" \"t7\" \"t8\" \"t9\" #>  #> $n5 #> [1] \"t2\" \"t5\" \"t8\" \"t9\" #>  #> $n6 #> [1] \"t3\" \"t7\" #>  #> $n7 #> [1] \"t2\" \"t5\" \"t9\" #>  #> $n8 #> [1] \"t2\" \"t5\" #>  #> $n9 #> [1] \"t1\" \"t4\" #>"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsLng.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lineage for multiple nodes — getNdsLng","title":"Get lineage for multiple nodes — getNdsLng","text":"Return unique taxonyms connecting ids root.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsLng.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lineage for multiple nodes — getNdsLng","text":"","code":"getNdsLng(tree, ids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsLng.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lineage for multiple nodes — getNdsLng","text":"tree TreeMan object ids vector node ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsLng.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lineage for multiple nodes — getNdsLng","text":"Returns list, parallelizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsLng.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lineage for multiple nodes — getNdsLng","text":"","code":"data(mammals) # return human and gorilla lineages getNdsLng(mammals, id = c(\"Homo_sapiens\", \"Gorilla_gorilla\")) #> $Homo_sapiens #>  [1] \"Mammalia\"         \"Theria\"           \"Eutheria\"         \"Boreoeutheria\"    #>  [5] \"Euarchontoglires\" \"Primates\"         \"Haplorrhini\"      \"Simiiformes\"      #>  [9] \"Catarrhini\"       \"Hominoidea\"       \"Hominidae\"        \"Homininae\"        #>  #> $Gorilla_gorilla #>  [1] \"Mammalia\"         \"Theria\"           \"Eutheria\"         \"Boreoeutheria\"    #>  [5] \"Euarchontoglires\" \"Primates\"         \"Haplorrhini\"      \"Simiiformes\"      #>  [9] \"Catarrhini\"       \"Hominoidea\"       \"Hominidae\"        \"Homininae\"        #>"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Get phylogenetic diversities of nodes — getNdsPD","title":"Get phylogenetic diversities of nodes — getNdsPD","text":"Return summed value descending spns","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get phylogenetic diversities of nodes — getNdsPD","text":"","code":"getNdsPD(tree, ids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get phylogenetic diversities of nodes — getNdsPD","text":"tree TreeMan object ids vector node ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get phylogenetic diversities of nodes — getNdsPD","text":"Sums lengths descending branches node.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get phylogenetic diversities of nodes — getNdsPD","text":"","code":"tree <- randTree(10) getNdsPD(tree, ids = tree[\"all\"]) # return PD of all ids #>        n1        n2        n3        n4        n5        n6        n7        n8  #> 11.107549 10.043449  8.850029  7.977889  6.953430  2.301880  2.916683  1.121731  #>        n9        t1        t2        t3        t4        t5        t6        t7  #>  1.525615  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  #>        t8        t9       t10  #>  0.000000  0.000000  0.000000"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrdst.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pre-distances — getNdsPrdst","title":"Get pre-distances — getNdsPrdst","text":"Return root tip distances (prdst) ids","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrdst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pre-distances — getNdsPrdst","text":"","code":"getNdsPrdst(tree, ids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrdst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pre-distances — getNdsPrdst","text":"tree TreeMan object ids vector node ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrdst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get pre-distances — getNdsPrdst","text":"Sums lengths branches ids root.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrdst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get pre-distances — getNdsPrdst","text":"","code":"tree <- randTree(10) getNdsPrdst(tree, ids = tree[\"tips\"]) # return prdsts for all tips #>       t1      t10       t2       t3       t4       t5       t6       t7  #> 1.014101 1.906025 1.569293 2.024987 2.872199 2.330097 2.032350 1.027848  #>       t8       t9  #> 2.152831 2.508484"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pre-nodes for multiple nodes — getNdsPrids","title":"Get pre-nodes for multiple nodes — getNdsPrids","text":"Return node ids connecting id root.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pre-nodes for multiple nodes — getNdsPrids","text":"","code":"getNdsPrids(tree, ids, ordrd = FALSE, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pre-nodes for multiple nodes — getNdsPrids","text":"tree TreeMan object ids vector node ids ordrd logical, ensure returned prids ordered ID root parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get pre-nodes for multiple nodes — getNdsPrids","text":"Returns list, parallizable. function work faster ordrd FALSE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPrids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get pre-nodes for multiple nodes — getNdsPrids","text":"","code":"tree <- randTree(10) getNdsPrids(tree, ids = tree[\"tips\"]) #> $t1 #> [1] \"n8\" \"n2\" \"n1\" #>  #> $t10 #> [1] \"n4\" \"n3\" \"n2\" \"n1\" #>  #> $t2 #> [1] \"n7\" \"n3\" \"n2\" \"n1\" #>  #> $t3 #> [1] \"n9\" \"n7\" \"n3\" \"n2\" \"n1\" #>  #> $t4 #> [1] \"n9\" \"n7\" \"n3\" \"n2\" \"n1\" #>  #> $t5 #> [1] \"n6\" \"n5\" \"n1\" #>  #> $t6 #> [1] \"n6\" \"n5\" \"n1\" #>  #> $t7 #> [1] \"n8\" \"n2\" \"n1\" #>  #> $t8 #> [1] \"n4\" \"n3\" \"n2\" \"n1\" #>  #> $t9 #> [1] \"n5\" \"n1\" #>"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPtids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get post-nodes to tips for multiple nodes — getNdsPtids","title":"Get post-nodes to tips for multiple nodes — getNdsPtids","text":"Return node ids connecting ids kids.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPtids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get post-nodes to tips for multiple nodes — getNdsPtids","text":"","code":"getNdsPtids(tree, ids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPtids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get post-nodes to tips for multiple nodes — getNdsPtids","text":"tree TreeMan object ids vector node ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPtids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get post-nodes to tips for multiple nodes — getNdsPtids","text":"Returns list, parallizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsPtids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get post-nodes to tips for multiple nodes — getNdsPtids","text":"","code":"tree <- randTree(10) # get all nodes to tip for all nodes getNdsPtids(tree, ids = tree[\"nds\"]) #> $n1 #>  [1] \"n2\"  \"n3\"  \"n4\"  \"n5\"  \"n6\"  \"n7\"  \"n8\"  \"n9\"  \"t1\"  \"t2\"  \"t3\"  \"t4\"  #> [13] \"t5\"  \"t6\"  \"t7\"  \"t8\"  \"t9\"  \"t10\" #>  #> $n2 #>  [1] \"n3\"  \"n4\"  \"n6\"  \"n7\"  \"n9\"  \"t1\"  \"t4\"  \"t5\"  \"t7\"  \"t8\"  \"t9\"  \"t10\" #>  #> $n3 #> [1] \"n4\" \"t5\" \"t8\" \"t9\" #>  #> $n4 #> [1] \"t5\" \"t9\" #>  #> $n5 #> [1] \"n8\" \"t2\" \"t3\" \"t6\" #>  #> $n6 #> [1] \"n7\"  \"n9\"  \"t1\"  \"t4\"  \"t7\"  \"t10\" #>  #> $n7 #> [1] \"t1\" \"t4\" #>  #> $n8 #> [1] \"t2\" \"t3\" #>  #> $n9 #> [1] \"t7\"  \"t10\" #>"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSlt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a node slot for multiple nodes — getNdsSlt","title":"Get a node slot for multiple nodes — getNdsSlt","text":"Returns values named slot vector atomic values, else list.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSlt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a node slot for multiple nodes — getNdsSlt","text":"","code":"getNdsSlt(tree, slt_nm, ids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSlt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a node slot for multiple nodes — getNdsSlt","text":"tree TreeMan object slt_nm slot name ids vector node ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSlt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a node slot for multiple nodes — getNdsSlt","text":"Returned object depends name, either character, vector numeric. Parallelizable. Default node slots : id, spn, prid, ptid txnym.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSlt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a node slot for multiple nodes — getNdsSlt","text":"","code":"tree <- randTree(10) getNdsSlt(tree, slt_nm = \"spn\", ids = tree[\"tips\"]) # return spans of all tips #>           t1          t10           t2           t3           t4           t5  #> 0.5081212099 0.6583406578 0.0002173744 0.4607886851 0.4825757614 0.7221059527  #>           t6           t7           t8           t9  #> 0.6016585629 0.3351444209 0.4105077630 0.7371745745"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSstr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sister id — getNdsSstr","title":"Get sister id — getNdsSstr","text":"Returns ids sister(s) nd ids given.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSstr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sister id — getNdsSstr","text":"","code":"getNdsSstr(tree, ids, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSstr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sister id — getNdsSstr","text":"tree TreeMan object ids nd ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSstr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get sister id — getNdsSstr","text":"error raised sister (e.g. root).  can one sister tree polytomous. Parallelizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getNdsSstr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sister id — getNdsSstr","text":"","code":"tree <- randTree(10) getNdsSstr(tree, ids = tree[\"tips\"]) #>  [1] \"t9\"  \"t3\"  \"t8\"  \"t10\" \"t6\"  \"n8\"  \"t4\"  \"n7\"  \"t2\"  \"t1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getOtgrp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get outgroup — getOtgrp","title":"Get outgroup — getOtgrp","text":"Return outgroup based tree vector IDs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getOtgrp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get outgroup — getOtgrp","text":"","code":"getOtgrp(tree, ids)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getOtgrp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get outgroup — getOtgrp","text":"tree TreeMan object ids vector node ids","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getOtgrp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get outgroup — getOtgrp","text":"Returns id, character. multiple possible outgroups, returns NULL.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getOtgrp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get outgroup — getOtgrp","text":"","code":"data(mammals) # orangutan is an outgroup wrt humans and chimps getOtgrp(mammals, ids = c(\"Homo_sapiens\", \"Pan_troglodytes\", \"Pongo_pygmaeus\")) #> [1] \"Pongo_pygmaeus\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path between nodes — getPath","title":"Get path between nodes — getPath","text":"Return node ids connecting .","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path between nodes — getPath","text":"","code":"getPath(tree, from, to)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path between nodes — getPath","text":"tree TreeMan object starting node id ending node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getPath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get path between nodes — getPath","text":"Returns vector, first id .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getPath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path between nodes — getPath","text":"","code":"data(mammals) # what's the phylogenetic distance from humans to gorillas? ape_id <- getPrnt(mammals, ids = c(\"Homo_sapiens\", \"Hylobates_concolor\")) pth <- getPath(mammals, from = \"Homo_sapiens\", to = \"Gorilla_gorilla\") sum(getNdsSlt(mammals, ids = pth, slt_nm = \"spn\")) #> [1] 32.4"},{"path":"https://docs.ropensci.org/phylotaR/reference/getPrnt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parent — getPrnt","title":"Get parent — getPrnt","text":"Return parental (recent common ancestor) node id ids.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getPrnt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parent — getPrnt","text":"","code":"getPrnt(tree, ids)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getPrnt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parent — getPrnt","text":"tree TreeMan object ids vector node ids","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getPrnt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get parent — getPrnt","text":"Returns character.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getPrnt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parent — getPrnt","text":"","code":"data(mammals) # choosing ids from the two main branches of apes allows to find the parent for all apes ape_id <- getPrnt(mammals, ids = c(\"Homo_sapiens\", \"Hylobates_concolor\"))"},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Get age range — getSpnAge","title":"Get age range — getSpnAge","text":"Return start end ages id first appears splits","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get age range — getSpnAge","text":"","code":"getSpnAge(tree, id, tree_age)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get age range — getSpnAge","text":"tree TreeMan object id node id tree_age numeric value known age tree","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnAge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get age range — getSpnAge","text":"Returns dataframe.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get age range — getSpnAge","text":"","code":"data(mammals) # mammal_age <- getAge(mammals)  # ~166.2, needs to be performed when tree is not up-to-date getSpnAge(mammals, id = \"Homo_sapiens\", tree_age = 166.2) #>            spn start end #> 1 Homo_sapiens   9.7   0"},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnsAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Get age ranges for multiple nodes — getSpnsAge","title":"Get age ranges for multiple nodes — getSpnsAge","text":"Return start end ages ids first appear split","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnsAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get age ranges for multiple nodes — getSpnsAge","text":"","code":"getSpnsAge(tree, ids, tree_age, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnsAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get age ranges for multiple nodes — getSpnsAge","text":"tree TreeMan object ids vector node ids tree_age numeric value known age tree parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnsAge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get age ranges for multiple nodes — getSpnsAge","text":"Returns dataframe, parallelizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getSpnsAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get age ranges for multiple nodes — getSpnsAge","text":"","code":"tree <- randTree(10) # all nodes but root ids <- tree[\"nds\"][tree[\"nds\"] != tree[\"root\"]] getSpnsAge(tree, ids = ids, tree_age = getAge(tree)) #>   spn    start       end #> 1  n2 3.171887 2.1793670 #> 2  n3 3.171887 2.4629002 #> 3  n4 2.179367 1.4259549 #> 4  n5 2.462900 1.9475839 #> 5  n6 2.462900 1.8489569 #> 6  n7 1.848957 1.7952116 #> 7  n8 1.425955 0.9799168 #> 8  n9 1.795212 1.6482859"},{"path":"https://docs.ropensci.org/phylotaR/reference/getSubtree.html","id":null,"dir":"Reference","previous_headings":"","what":"Get subtree — getSubtree","title":"Get subtree — getSubtree","text":"Return tree descending id.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getSubtree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get subtree — getSubtree","text":"","code":"getSubtree(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getSubtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get subtree — getSubtree","text":"tree TreeMan object id node id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getSubtree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get subtree — getSubtree","text":"Returns TreeMan, parallelizable. id must internal node.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getSubtree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get subtree — getSubtree","text":"","code":"data(mammals) # get tree of apes ape_id <- getPrnt(mammals, ids = c(\"Homo_sapiens\", \"Hylobates_concolor\")) apes <- getSubtree(mammals, id = ape_id) summary(apes) #> Tree (TreeMan Object): #>   + 16 tips #>   + 12 internal nodes #>   + With taxonomic names #>   + Polytomous #>   + PD 153 #>   + Root node is \"n2960\""},{"path":"https://docs.ropensci.org/phylotaR/reference/getUnqNds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique nodes represented by tips — getUnqNds","title":"Get unique nodes represented by tips — getUnqNds","text":"Return list IDs node represented tip IDs given.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getUnqNds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique nodes represented by tips — getUnqNds","text":"","code":"getUnqNds(tree, tids)"},{"path":"https://docs.ropensci.org/phylotaR/reference/getUnqNds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique nodes represented by tips — getUnqNds","text":"tree TreeMan object tids vector tip IDs","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/getUnqNds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get unique nodes represented by tips — getUnqNds","text":"Returns vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/getUnqNds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get unique nodes represented by tips — getUnqNds","text":"","code":"tree <- randTree(10) unqnds <- getUnqNds(tree, c(\"t1\", \"t2\"))"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_clstr_slot.html","id":null,"dir":"Reference","previous_headings":"","what":"Get slot data for each cluster record — get_clstr_slot","title":"Get slot data for each cluster record — get_clstr_slot","text":"Get slot data cluster(s)","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_clstr_slot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get slot data for each cluster record — get_clstr_slot","text":"","code":"get_clstr_slot(phylota, cid, slt_nm = list_clstrrec_slots())"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_clstr_slot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get slot data for each cluster record — get_clstr_slot","text":"phylota Phylota object cid Cluster ID slt_nm Slot name","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_clstr_slot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get slot data for each cluster record — get_clstr_slot","text":"vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/get_clstr_slot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get slot data for each cluster record — get_clstr_slot","text":"","code":"data('aotus') random_cid <- sample(aotus@cids, 1) (get_clstr_slot(phylota = aotus, cid = random_cid, slt_nm = 'seed')) #>           14  #> \"JQ932794.1\"  # see list_clstrrec_slots() for available slots (list_clstrrec_slots()) #> [1] \"id\"   \"nsqs\" \"ntx\"  \"typ\"  \"prnt\" \"seed\""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_nsqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of sequences — get_nsqs","title":"Count number of sequences — get_nsqs","text":"Count number sequences cluster(s).","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_nsqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of sequences — get_nsqs","text":"","code":"get_nsqs(phylota, cid)"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_nsqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of sequences — get_nsqs","text":"phylota Phylota object cid Cluster ID(s)","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_nsqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of sequences — get_nsqs","text":"vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/get_nsqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count number of sequences — get_nsqs","text":"","code":"data(\"cycads\") # count seqs for a random 10 clusters random_cids <- sample(cycads@cids, 10) nsqs <- get_nsqs(phylota = cycads, cid = random_cids)"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_ntaxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of unique taxa — get_ntaxa","title":"Count number of unique taxa — get_ntaxa","text":"Count number unique taxa represented cluster(s) sequences phylota table Use rnk specify taxonomic level count. NULL counts made lowest level reported NCBI.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_ntaxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of unique taxa — get_ntaxa","text":"","code":"get_ntaxa(phylota, cid = NULL, sid = NULL, rnk = NULL, keep_higher = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_ntaxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of unique taxa — get_ntaxa","text":"phylota Phylota object cid Cluster ID(s) sid Sequence ID(s) rnk Taxonomic rank keep_higher Keep higher taxonomic ranks?","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_ntaxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of unique taxa — get_ntaxa","text":"vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/get_ntaxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count number of unique taxa — get_ntaxa","text":"","code":"data('bromeliads') # how many species are there? (get_ntaxa(phylota = bromeliads, cid = '0', rnk = 'species')) #>    0  #> 1050  # how many genera are there? (get_ntaxa(phylota = bromeliads, cid = '0', rnk = 'genus')) #>  0  #> 76  # how many families are there? (get_ntaxa(phylota = bromeliads, cid = '0', rnk = 'family')) #> 0  #> 1  # use list_ncbi_ranks() to see available rank names (list_ncbi_ranks()) #>  [1] \"superkingdom\" \"kingdom\"      \"phylum\"       \"subphylum\"    \"class\"        #>  [6] \"superorder\"   \"order\"        \"suborder\"     \"infraorder\"   \"parvorder\"    #> [11] \"family\"       \"genus\"        \"species\"      \"subspecies\""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_sq_slot.html","id":null,"dir":"Reference","previous_headings":"","what":"Get slot data for each sequence — get_sq_slot","title":"Get slot data for each sequence — get_sq_slot","text":"Get slot data either sequences cluster vector sequence IDs. Use list_seqrec_slots() list available slots.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_sq_slot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get slot data for each sequence — get_sq_slot","text":"","code":"get_sq_slot(phylota, cid = NULL, sid = NULL, slt_nm = list_seqrec_slots())"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_sq_slot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get slot data for each sequence — get_sq_slot","text":"phylota Phylota object cid Cluster ID sid Sequence ID(s) slt_nm Slot name","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_sq_slot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get slot data for each sequence — get_sq_slot","text":"vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/get_sq_slot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get slot data for each sequence — get_sq_slot","text":"","code":"data('aotus') random_sid <- sample(aotus@sids, 1) (get_sq_slot(phylota = aotus, sid = random_sid, slt_nm = 'dfln')) #>                                                                                AF333723.1  #> \"Aotus nancymaae clone 11192.15 T-cell receptor gamma chain V-J region mRNA, partial cds\"  # see list_seqrec_slots() for available slots (list_seqrec_slots()) #>  [1] \"id\"      \"nm\"      \"accssn\"  \"vrsn\"    \"url\"     \"txid\"    \"orgnsm\"  #>  [8] \"dfln\"    \"ml_typ\"  \"rec_typ\" \"nncltds\" \"nambgs\"  \"pambgs\"  \"gcr\"     #> [15] \"age\""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_stage_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Get run times for different stages — get_stage_times","title":"Get run times for different stages — get_stage_times","text":"Get slot data taxa(s)","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_stage_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get run times for different stages — get_stage_times","text":"","code":"get_stage_times(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_stage_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get run times for different stages — get_stage_times","text":"wd Working directory","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_stage_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get run times for different stages — get_stage_times","text":"list runtimes minutes","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/get_stage_times.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get run times for different stages — get_stage_times","text":"","code":"if (FALSE) {      # Note, this example requires a wd with a completed phylotaR run   # return a named list of the time take in minutes for each stage   get_stage_times(wd = wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_tx_slot.html","id":null,"dir":"Reference","previous_headings":"","what":"Get slot data for each taxon record — get_tx_slot","title":"Get slot data for each taxon record — get_tx_slot","text":"Get slot data taxa(s)","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_tx_slot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get slot data for each taxon record — get_tx_slot","text":"","code":"get_tx_slot(phylota, txid, slt_nm = list_taxrec_slots())"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_tx_slot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get slot data for each taxon record — get_tx_slot","text":"phylota Phylota object txid Taxonomic ID slt_nm Slot name","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_tx_slot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get slot data for each taxon record — get_tx_slot","text":"vector list","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/get_tx_slot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get slot data for each taxon record — get_tx_slot","text":"","code":"data('aotus') random_txid <- sample(aotus@txids, 1) (get_tx_slot(phylota = aotus, txid = random_txid, slt_nm = 'scnm')) #>                   867331  #> \"Aotus azarai infulatus\"  # see list_taxrec_slots() for available slots (list_taxrec_slots()) #> [1] \"id\"   \"scnm\" \"cmnm\" \"rnk\"  \"prnt\""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_txids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxonomic IDs by rank — get_txids","title":"Get taxonomic IDs by rank — get_txids","text":"Return taxonomic IDs vector sequence IDs sequences cluster. User can specify rank IDs returned. NULL, lowest level returned.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_txids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxonomic IDs by rank — get_txids","text":"","code":"get_txids(   phylota,   cid = NULL,   sid = NULL,   txids = NULL,   rnk = NULL,   keep_higher = FALSE )"},{"path":"https://docs.ropensci.org/phylotaR/reference/get_txids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxonomic IDs by rank — get_txids","text":"phylota Phylota object cid Cluster ID sid Sequence ID(s) txids Vector txids rnk Taxonomic rank keep_higher Keep higher taxonomic IDs?","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_txids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxonomic IDs by rank — get_txids","text":"vector","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/get_txids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get taxonomic IDs by rank — get_txids","text":"txids can either provided user can determined vector sids cid. keep_higher TRUE, sequence identity higher given rank returned. FALSE, sequences return ''.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/get_txids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get taxonomic IDs by rank — get_txids","text":"","code":"data('bromeliads') # get all the genus IDs and names genus_ids <- get_txids(phylota = bromeliads, txids = bromeliads@txids,                        rnk = 'genus') genus_ids <- unique(genus_ids) # drop empty IDs -- this happens if a given lineage has no ID for specified rank genus_ids <- genus_ids[genus_ids != ''] # get names (get_tx_slot(phylota = bromeliads, txid = genus_ids, slt_nm = 'scnm')) #>              100680             2815862             2815856             2707094  #>      \"Cottendorfia\"          \"Karawata\"  \"Pseudaraeococcus\"        \"Wittmackia\"  #>             2184980             2184933             2184932             2184931  #>          \"Forzzaea\"         \"Sincoraea\"       \"Rokautskyia\"  \"Hoplocryptanthus\"  #>             1387303             1349361              796805              713961  #>         \"Lapanthus\"      \"Canistropsis\"      \"Disteganthus\"         \"Eduandrea\"  #>              326799              326795              326788              213064  #>            \"Portea\"   \"Hohenbergiopsis\"          \"Fernseea\"          \"Edmundoa\"  #>              106462              106458              106452              106447  #>         \"Ochagavia\"      \"Neoglaziovia\"           \"Greigia\"      \"Fascicularia\"  #>              106440              106438              106430              106424  #>      \"Deinacanthon\"        \"Chevaliera\"        \"Androlepis\"    \"Acanthostachys\"  #>               49536               49531               49529               49522  #>        \"Wittrockia\"        \"Ronnbergia\"         \"Quesnelia\"       \"Orthophytum\"  #>               49520               49512               49496               49493  #>        \"Nidularium\"           \"Lymania\"       \"Cryptanthus\"         \"Canistrum\"  #>               49491               49476               15119               15114  #>       \"Hohenbergia\"       \"Araeococcus\"        \"Billbergia\"           \"Aechmea\"  #>                4616                4614               15164              100682  #>          \"Bromelia\"            \"Ananas\"              \"Puya\"     \"Deuterocohnia\"  #>               49487               49526               49483               49485  #>        \"Fosterella\"        \"Pitcairnia\"            \"Dyckia\"       \"Encholirium\"  #>               49516              222987               15141             2821261  #>             \"Navia\"         \"Brewcaria\"           \"Hechtia\"        \"Bakerantha\"  #>             2821262              261216               49479              106432  #>     \"Mesoamerantha\"         \"Lindmania\"        \"Brocchinia\"           \"Ayensua\"  #>               49534               49518              213045             1908703  #>           \"Vriesea\"        \"Neoregelia\"          \"Werauhia\"          \"Lutheria\"  #>               49514              106428             1908700             1908698  #>      \"Mezobromelia\"        \"Alcantarea\"         \"Jagrantia\"           \"Goudaea\"  #>             1908705             2969759             1908706             1908701  #>       \"Stigmatodon\"        \"Hylaeaicum\"           \"Zizkaea\"         \"Josemania\"  #>             2002971               15170              294096               49489  #>         \"Waltillia\"        \"Tillandsia\"        \"Viridantha\"          \"Guzmania\"  #>              106471             1908553             1908702             1908697  #>          \"Racinaea\"          \"Wallisia\"        \"Lemeltonia\"         \"Barfussia\"  #>             1908704             1908699               15123               15137  #>   \"Pseudalcantarea\"       \"Gregbrownia\"          \"Catopsis\" \"Glomeropitcairnia\""},{"path":"https://docs.ropensci.org/phylotaR/reference/hierarchic_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchically get sequences for a txid — hierarchic_download","title":"Hierarchically get sequences for a txid — hierarchic_download","text":"Looks downloads sequences taxonomic ID.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/hierarchic_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchically get sequences for a txid — hierarchic_download","text":"","code":"hierarchic_download(txid, txdct, ps, lvl = 0)"},{"path":"https://docs.ropensci.org/phylotaR/reference/hierarchic_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchically get sequences for a txid — hierarchic_download","text":"txid Taxonomic node ID, numeric txdct Taxonomic dictionary ps Parameters list, generated parameters() lvl Integer, number message indentations indicating code depth.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/hierarchic_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchically get sequences for a txid — hierarchic_download","text":"Vector SeqRecs","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/info.html","id":null,"dir":"Reference","previous_headings":"","what":"Write info message to log — info","title":"Write info message to log — info","text":"Inform user via log.txt pipeline progress.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write info message to log — info","text":"","code":"info(lvl, ps, ...)"},{"path":"https://docs.ropensci.org/phylotaR/reference/info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write info message to log — info","text":"lvl Integer, number message indentations indicating code depth. ps Parameters list, generated parameters() ... Message elements concatenating","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/isUltrmtrc.html","id":null,"dir":"Reference","previous_headings":"","what":"Is tree ultrametric? — isUltrmtrc","title":"Is tree ultrametric? — isUltrmtrc","text":"Return TRUE tips end 0, else FALSE.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/isUltrmtrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is tree ultrametric? — isUltrmtrc","text":"","code":"isUltrmtrc(tree, tol = 1e-08)"},{"path":"https://docs.ropensci.org/phylotaR/reference/isUltrmtrc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is tree ultrametric? — isUltrmtrc","text":"tree TreeMan object tol zero tolerance","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/isUltrmtrc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is tree ultrametric? — isUltrmtrc","text":"Returns boolean. function works background ['ultr'] slot TreeMan object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/isUltrmtrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is tree ultrametric? — isUltrmtrc","text":"","code":"tree <- randTree(10) (isUltrmtrc(tree)) #> [1] FALSE"},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_clstr.html","id":null,"dir":"Reference","previous_headings":"","what":"Is txid in cluster? — is_txid_in_clstr","title":"Is txid in cluster? — is_txid_in_clstr","text":"Checks given txid represented sequences cluster searching sequence search organism lineages.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_clstr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is txid in cluster? — is_txid_in_clstr","text":"","code":"is_txid_in_clstr(phylota, txid, cid)"},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_clstr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is txid in cluster? — is_txid_in_clstr","text":"phylota Phylota txid Taxonomic ID cid Cluster ID","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_clstr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is txid in cluster? — is_txid_in_clstr","text":"boolean","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_clstr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is txid in cluster? — is_txid_in_clstr","text":"","code":"data(tinamous) cid <- tinamous@cids[[1]] clstr <- tinamous[[cid]] sq <- tinamous[[clstr@sids[[1]]]] txid <- sq@txid # expect true is_txid_in_clstr(phylota = tinamous, txid = txid, cid = cid) #> [1] TRUE"},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_sq.html","id":null,"dir":"Reference","previous_headings":"","what":"Is txid in sequence? — is_txid_in_sq","title":"Is txid in sequence? — is_txid_in_sq","text":"Checks given txid represented sequence looking sequence source organism's lineage.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_sq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is txid in sequence? — is_txid_in_sq","text":"","code":"is_txid_in_sq(phylota, txid, sid)"},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_sq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is txid in sequence? — is_txid_in_sq","text":"phylota Phylota txid Taxonomic ID sid Sequence ID","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_sq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is txid in sequence? — is_txid_in_sq","text":"boolean","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/is_txid_in_sq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is txid in sequence? — is_txid_in_sq","text":"","code":"data(tinamous) sid <- tinamous@sids[[1]] sq <- tinamous[[sid]] txid <- sq@txid # expect true is_txid_in_sq(phylota = tinamous, txid = txid, sid = sid) #> [1] TRUE"},{"path":"https://docs.ropensci.org/phylotaR/reference/list-to-TreeMen.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert list to a TreeMen — list-to-TreeMen","title":"Convert list to a TreeMen — list-to-TreeMen","text":"Return TreeMen object list TreeMans","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/list-to-TreeMen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert list to a TreeMen — list-to-TreeMen","text":"","code":"trees <- list(\"tree_1\" = randTree(10), \"tree_2\" = randTree(10)) trees <- as(trees, \"TreeMen\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/list_clstrrec_slots.html","id":null,"dir":"Reference","previous_headings":"","what":"List all ClstrRec slots — list_clstrrec_slots","title":"List all ClstrRec slots — list_clstrrec_slots","text":"Returns vector available ClstrRec slots type character, integer numeric.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/list_clstrrec_slots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all ClstrRec slots — list_clstrrec_slots","text":"","code":"list_clstrrec_slots()"},{"path":"https://docs.ropensci.org/phylotaR/reference/list_clstrrec_slots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all ClstrRec slots — list_clstrrec_slots","text":"vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/list_ncbi_ranks.html","id":null,"dir":"Reference","previous_headings":"","what":"List all NCBI Ranks — list_ncbi_ranks","title":"List all NCBI Ranks — list_ncbi_ranks","text":"Returns vector NCBI taxonomic ranks descending order.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/list_ncbi_ranks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all NCBI Ranks — list_ncbi_ranks","text":"","code":"list_ncbi_ranks()"},{"path":"https://docs.ropensci.org/phylotaR/reference/list_ncbi_ranks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all NCBI Ranks — list_ncbi_ranks","text":"vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/list_seqrec_slots.html","id":null,"dir":"Reference","previous_headings":"","what":"List all SeqRec slots — list_seqrec_slots","title":"List all SeqRec slots — list_seqrec_slots","text":"Returns vector available SeqRec slots type character, integer numeric.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/list_seqrec_slots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all SeqRec slots — list_seqrec_slots","text":"","code":"list_seqrec_slots()"},{"path":"https://docs.ropensci.org/phylotaR/reference/list_seqrec_slots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all SeqRec slots — list_seqrec_slots","text":"vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/list_taxrec_slots.html","id":null,"dir":"Reference","previous_headings":"","what":"List all TaxRec slots — list_taxrec_slots","title":"List all TaxRec slots — list_taxrec_slots","text":"Returns vector available TaxRec slots type character, integer numeric.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/list_taxrec_slots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all TaxRec slots — list_taxrec_slots","text":"","code":"list_taxrec_slots()"},{"path":"https://docs.ropensci.org/phylotaR/reference/list_taxrec_slots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all TaxRec slots — list_taxrec_slots","text":"vector","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/loadTreeMan.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a TreeMan object in serialization format — loadTreeMan","title":"Load a TreeMan object in serialization format — loadTreeMan","text":"TreeMan equivalent load() able handle node matrices.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/loadTreeMan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a TreeMan object in serialization format — loadTreeMan","text":"","code":"loadTreeMan(file)"},{"path":"https://docs.ropensci.org/phylotaR/reference/loadTreeMan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a TreeMan object in serialization format — loadTreeMan","text":"file file path","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/loadTreeMan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load a TreeMan object in serialization format — loadTreeMan","text":"possible use save() TreeMan objects node matrices. Node matrices bigmemory matrices therefore outside R environment, see bigmemory documentation information. Saving loading bigmemory matrix may cause memory issues R cause R crash. function can safely read TreeMan object without node matrix. saveTreeMan() function stores tree using serialization format node matrix hidden .csv. parts tree can reloaded R environment loadTreeMan(). hidden node matrix filename based file argument: file + _ndmtrx Reading writing trees saveTreeMan() loadTreeMan faster read write functions.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/loadTreeMan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a TreeMan object in serialization format — loadTreeMan","text":"","code":"tree <- randTree(100, wndmtrx = TRUE) #> Note, trees with `ndmtrx` cannot be saved and loaded using `save()` or `savehistory()`. Loading from these files may cause unusual behaviour. saveTreeMan(tree, file = \"test.RData\") rm(tree) tree <- loadTreeMan(file = \"test.RData\") file.remove(\"test.RData\", \"testRData_ndmtrx\") #> [1] TRUE TRUE"},{"path":"https://docs.ropensci.org/phylotaR/reference/mammals.html","id":null,"dir":"Reference","previous_headings":"","what":"mammals — mammals","title":"mammals — mammals","text":"mammals","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/mammals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mammals — mammals","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/mammals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mammals — mammals","text":"","code":"data(\"mammals\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/mk_txid_in_sq_mtrx.html","id":null,"dir":"Reference","previous_headings":"","what":"Return matrix of txid in sequence — mk_txid_in_sq_mtrx","title":"Return matrix of txid in sequence — mk_txid_in_sq_mtrx","text":"Searches lineages sequences' source organisms determine whether txid represented sequence.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/mk_txid_in_sq_mtrx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return matrix of txid in sequence — mk_txid_in_sq_mtrx","text":"","code":"mk_txid_in_sq_mtrx(phylota, txids, sids = phylota@sids)"},{"path":"https://docs.ropensci.org/phylotaR/reference/mk_txid_in_sq_mtrx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return matrix of txid in sequence — mk_txid_in_sq_mtrx","text":"phylota Phylota txids Taxonomic IDs sids Sequence IDs","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/mk_txid_in_sq_mtrx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return matrix of txid in sequence — mk_txid_in_sq_mtrx","text":"matrix","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/multiPhylo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"multiPhylo class — multiPhylo-class","title":"multiPhylo class — multiPhylo-class","text":"multiPhylo class","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/multiPhylo-to-TreeMen.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert multiPhylo to TreeMen — multiPhylo-to-TreeMen","title":"Convert multiPhylo to TreeMen — multiPhylo-to-TreeMen","text":"Return TreeMen ape's mutlPhylo","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/multiPhylo-to-TreeMen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert multiPhylo to TreeMen — multiPhylo-to-TreeMen","text":"","code":"library(ape) trees <- c(rtree(10), rtree(10), rtree(10)) trees <- as(trees, \"TreeMen\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/ncbicache_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve cached NCBI query — ncbicache_load","title":"Retrieve cached NCBI query — ncbicache_load","text":"Run function load cached NCBI queries.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/ncbicache_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve cached NCBI query — ncbicache_load","text":"","code":"ncbicache_load(fnm, args, wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/ncbicache_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve cached NCBI query — ncbicache_load","text":"fnm NCBI Entrez function name args Args used function wd Working directory","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/ncbicache_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve cached NCBI query — ncbicache_load","text":"rentrez result","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/ncbicache_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save NCBI query result to cache — ncbicache_save","title":"Save NCBI query result to cache — ncbicache_save","text":"Run whenever NCBI queries made save results cache case pipeline run .","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/ncbicache_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save NCBI query result to cache — ncbicache_save","text":"","code":"ncbicache_save(fnm, args, wd, obj)"},{"path":"https://docs.ropensci.org/phylotaR/reference/ncbicache_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save NCBI query result to cache — ncbicache_save","text":"fnm NCBI Entrez function name args Args used function wd Working directory obj NCBI query result","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object exists — obj_check","title":"Check if an object exists — obj_check","text":"Check object exists cache.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object exists — obj_check","text":"","code":"obj_check(wd, nm)"},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object exists — obj_check","text":"wd Working directory nm Object name","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object exists — obj_check","text":"T/F","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a named object from the cache — obj_load","title":"Load a named object from the cache — obj_load","text":"Loads object cache stored obj_save.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a named object from the cache — obj_load","text":"","code":"obj_load(wd, nm)"},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a named object from the cache — obj_load","text":"wd Working directory nm Object name","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a named object from the cache — obj_load","text":"object, multiple formats possible","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a named object in the cache — obj_save","title":"Save a named object in the cache — obj_save","text":"Save object cache can loaded obj_load.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a named object in the cache — obj_save","text":"","code":"obj_save(wd, obj, nm)"},{"path":"https://docs.ropensci.org/phylotaR/reference/obj_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a named object in the cache — obj_save","text":"wd Working directory obj Object nm Object name","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/outfmt_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine 'outformat' format — outfmt_get","title":"Determine 'outformat' format — outfmt_get","text":"Depending operating system, BLAST may may require \"\" around outfmt. function run micro BLAST analysis test. return outfmt use blastn_run.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/outfmt_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine 'outformat' format — outfmt_get","text":"","code":"outfmt_get(ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/outfmt_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine 'outformat' format — outfmt_get","text":"ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/outfmt_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine 'outformat' format — outfmt_get","text":"character","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Default parameters — parameters","title":"Default parameters — parameters","text":"Returns parameter list default parameter values.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default parameters — parameters","text":"","code":"parameters(   wd = \".\",   txid = character(),   mkblstdb = \"\",   blstn = \"\",   v = FALSE,   ncps = 1,   mxnds = 1e+05,   mdlthrs = 3000,   mnsql = 250,   mxsql = 2000,   mxrtry = 100,   mxsqs = 50000,   mxevl = 1e-10,   mncvrg = 51,   btchsz = 100,   db_only = FALSE,   outsider = FALSE,   srch_trm = paste0(\"NOT predicted[TI] \", \"NOT \\\"whole genome shotgun\\\"[TI] \",     \"NOT unverified[TI] \", \"NOT \\\"synthetic construct\\\"[Organism] \",     \"NOT refseq[filter] NOT TSA[Keyword]\"),   date = Sys.Date() )"},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default parameters — parameters","text":"wd working directory output files saved. txid Taxonomic group interest, allows vectors. mkblstdb File path makeblastdb blstn File path blastn v Print progress statements console? Statements always printed log.txt. ncps number threads use local-alignment search tool. mxnds maximum number nodes descending taxonomic group. number, nodes lower taxonomic level analysed. mdlthrs 'Model organism threshold'. Taxa sequences number considered model organisms random mdlthrs subset sequences downloaded. mnsql minimum length sequence nucleotide base pairs download. mxsql maximum length sequence nucleotide base pairs download. longer sequences ignored. mxrtry maximum number attempts make downloading. mxsqs maximum number sequences BLAST -vs-searches. sequences node, BLAST performed lower taxonomic level. mxevl maximum E-value successful BLAST. mncvrg maximum percentile coverage defining overlapping BLAST hit. Sequences BLAST matches lower values considered orthologous. btchsz Batch size querying NCBI db_only Take sequences restez library? TRUE/FALSE. TRUE, internet still required (taxonomic look-) restez need set . outsider Use om..blast? TRUE/FALSE. TRUE, module running blastn installed BLAST commands run . outsider package required. srch_trm Sequence NCBI search term modifier. Use parameter change default search term options. Default: avoid predicted, WGS, unverified, synthetic, RefSeq Transcriptome Shotgun Assembly sequences. date Date pipeline initiated","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default parameters — parameters","text":"list","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default parameters — parameters","text":"function used change parameters folder. Use parameters_reset() instead. purpose function describe paramaters present default values.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load parameters from cache — parameters_load","title":"Load parameters from cache — parameters_load","text":"Parameters held cache, use function load parameters set wd.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load parameters from cache — parameters_load","text":"","code":"parameters_load(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load parameters from cache — parameters_load","text":"wd Working directory","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load parameters from cache — parameters_load","text":"Parameters list","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Change parameters in a working directory — parameters_reset","title":"Change parameters in a working directory — parameters_reset","text":"Reset parameters running setup().","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change parameters in a working directory — parameters_reset","text":"","code":"parameters_reset(wd, parameters, values)"},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change parameters in a working directory — parameters_reset","text":"wd Working directory parameters Parameters changed, vector. values New values parameter, vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_reset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change parameters in a working directory — parameters_reset","text":"","code":"if (FALSE) {      # Note: this example requires BLAST and internet to run.      # example with temp folder   wd <- file.path(tempdir(), 'aotus')   # setup for aotus, make sure aotus/ folder already exists   if (!dir.exists(wd)) {     dir.create(wd)   }   ncbi_dr <- '[SET BLAST+ BIN PATH HERE]'   setup(wd = wd, txid = 9504, ncbi_dr = ncbi_dr)  # txid for Aotus primate genus   # run   # run(wd = wd) # not running in test   # use ctrl+c or Esc to kill   # change parameters, e.g. min and max sequence lengths   parameters_reset(wd = 'aotus', parameters = c('mnsql', 'mxsql'),                    values = c(300, 1500))   # see ?parameters   # restart   restart(wd = wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Up Parameters — parameters_setup","title":"Set Up Parameters — parameters_setup","text":"Initiates cache parameters.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Up Parameters — parameters_setup","text":"","code":"parameters_setup(wd, ncbi_execs, overwrite = FALSE, ...)"},{"path":"https://docs.ropensci.org/phylotaR/reference/parameters_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Up Parameters — parameters_setup","text":"wd Working directory ncbi_execs File directories NCBI tools, see blast_setup() overwrite Overwrite existing cache? ... Set parameters, see parameters()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/parent_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxonomic parent — parent_get","title":"Get taxonomic parent — parent_get","text":"Look-MRCA taxonomic id(s) taxonomic dictionary","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parent_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxonomic parent — parent_get","text":"","code":"parent_get(id, txdct)"},{"path":"https://docs.ropensci.org/phylotaR/reference/parent_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxonomic parent — parent_get","text":"id txid(s) txdct TaxDict","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/parent_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxonomic parent — parent_get","text":"Character","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/phylo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"phylo class — phylo-class","title":"phylo class — phylo-class","text":"phylo class","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/phylo-to-TreeMan.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert phylo to TreeMan — phylo-to-TreeMan","title":"Convert phylo to TreeMan — phylo-to-TreeMan","text":"Return TreeMan ape's phylo. preserve node labels, alphanumeric.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/phylo-to-TreeMan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert phylo to TreeMan — phylo-to-TreeMan","text":"","code":"library(ape) tree <- compute.brlen(rtree(10)) tree <- as(tree, \"TreeMan\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/pinTips.html","id":null,"dir":"Reference","previous_headings":"","what":"Pin tips to a tree — pinTips","title":"Pin tips to a tree — pinTips","text":"Returns tree new tips added based given lineages time points","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/pinTips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pin tips to a tree — pinTips","text":"","code":"pinTips(tree, tids, lngs, end_ages, tree_age)"},{"path":"https://docs.ropensci.org/phylotaR/reference/pinTips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pin tips to a tree — pinTips","text":"tree TreeMan object tids new tip ids lngs list vectors lineages tid (ordered high low rank) end_ages end time points tid tree_age age tree","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/pinTips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pin tips to a tree — pinTips","text":"User must provide vector new tip IDs, list ranked lineages IDs (ascending order) vector end time points new ID (0s extant tips). function expects given tree taxonomically informed; txnym slot every node taxonomic label. function takes lineage tries randomly add new tip lowest point taxonomic rank end time point. Note, returned tree node matrix.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/pinTips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pin tips to a tree — pinTips","text":"","code":"# see https://github.com/DomBennett/treeman/wiki/Pinning-tips for a detailed example"},{"path":"https://docs.ropensci.org/phylotaR/reference/plants.html","id":null,"dir":"Reference","previous_headings":"","what":"plants — plants","title":"plants — plants","text":"plants","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/plants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"plants — plants","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/plants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plants — plants","text":"","code":"data(\"plants\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_pa.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot presence/absence matrix — plot_phylota_pa","title":"Plot presence/absence matrix — plot_phylota_pa","text":"Plot presence/absence taxa cluster phylota object.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_pa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot presence/absence matrix — plot_phylota_pa","text":"","code":"plot_phylota_pa(phylota, cids, txids, cnms = cids, txnms = txids)"},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_pa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot presence/absence matrix — plot_phylota_pa","text":"phylota Phylota object cids Vector cluster IDs txids Vector taxonomic IDs cnms Cluster names txnms Taxonomic names","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_pa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot presence/absence matrix — plot_phylota_pa","text":"geom_object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_pa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot presence/absence matrix — plot_phylota_pa","text":"Cluster names taxonomic names can given function, default IDs used.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_pa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot presence/absence matrix — plot_phylota_pa","text":"","code":"library(phylotaR) data(cycads) # drop all but first ten cycads <- drop_clstrs(cycads, cycads@cids[1:10]) # plot all p <- plot_phylota_pa(phylota = cycads, cids = cycads@cids, txids = cycads@txids) print(p)  # lots of information, difficult to interpret  # get genus-level taxonomic names genus_txids <- get_txids(cycads, txids = cycads@txids, rnk = 'genus') genus_txids <- unique(genus_txids) # dropping missing genus_txids <- genus_txids[genus_txids !=  ''] genus_nms <- get_tx_slot(cycads, genus_txids, slt_nm = 'scnm') # make alphabetical for plotting genus_nms <- sort(genus_nms, decreasing = TRUE) # generate geom_object p <- plot_phylota_pa(phylota = cycads, cids = cycads@cids, txids = genus_txids,                      txnms = genus_nms) # plot print(p)  # easier to interpret"},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_treemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot treemap of Phylota object — plot_phylota_treemap","title":"Plot treemap of Phylota object — plot_phylota_treemap","text":"Treemaps show relative size boxes. user can explore taxa clusters represented either sequence cluster number. cluster IDs provided, plot made clusters. taxonomic IDs provided, plot made taxa.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_treemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot treemap of Phylota object — plot_phylota_treemap","text":"","code":"plot_phylota_treemap(   phylota,   cids = NULL,   txids = NULL,   cnms = cids,   txnms = txids,   with_labels = TRUE,   area = c(\"ntx\", \"nsq\", \"ncl\"),   fill = c(\"NULL\", \"typ\", \"ntx\", \"nsq\", \"ncl\") )"},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_treemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot treemap of Phylota object — plot_phylota_treemap","text":"phylota Phylota object cids Cluster IDs txids Taxonomic IDs cnms Cluster names txnms Taxonomic names with_labels Show names per box? area determines size per box? fill determines coloured fill per box?","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_treemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot treemap of Phylota object — plot_phylota_treemap","text":"geom_object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_treemap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot treemap of Phylota object — plot_phylota_treemap","text":"function can take long time run large Phylota objects many taxonomic IDs searches made across lineages. idea function assess data dominance specific clusters taxa.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/plot_phylota_treemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot treemap of Phylota object — plot_phylota_treemap","text":"","code":"data(\"tinamous\") # Plot clusters, size by n. sq, fill by n. tx p <- plot_phylota_treemap(phylota = tinamous, cids = tinamous@cids,                           area = 'nsq', fill = 'ntx') print(p)  # Plot taxa, size by n. sq, fill by ncl txids <- get_txids(tinamous, txids = tinamous@txids, rnk = 'genus') txids <- txids[txids !=  ''] txids <- unique(txids) txnms <- get_tx_slot(tinamous, txids, slt_nm = 'scnm') p <- plot_phylota_treemap(phylota = tinamous, txids = txids, txnms = txnms,                           area = 'nsq', fill = 'ncl') print(p)"},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise progress list in cache — progress_init","title":"Initialise progress list in cache — progress_init","text":"Creates progress list recording stage run cache.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise progress list in cache — progress_init","text":"","code":"progress_init(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise progress list in cache — progress_init","text":"wd Working directory","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the progress from cache — progress_read","title":"Read the progress from cache — progress_read","text":"Return last completed stage using cache.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the progress from cache — progress_read","text":"","code":"progress_read(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the progress from cache — progress_read","text":"wd Working directory","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the progress from cache — progress_read","text":"stage name, character, NA complete","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset progress — progress_reset","title":"Reset progress — progress_reset","text":"Reset progress earlier completed stage.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset progress — progress_reset","text":"","code":"progress_reset(wd, stg)"},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset progress — progress_reset","text":"wd Working directory stg Stage pipeline reset","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_reset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reset progress — progress_reset","text":"example, resetting progress 'download' mark stages 'download', 'cluster' 'cluster2' un-run.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save current progress — progress_save","title":"Save current progress — progress_save","text":"Stores pipeline progress cache.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save current progress — progress_save","text":"","code":"progress_save(wd, stg)"},{"path":"https://docs.ropensci.org/phylotaR/reference/progress_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save current progress — progress_save","text":"wd Working directory stg Stage","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/pstMnp.html","id":null,"dir":"Reference","previous_headings":"","what":"Update prinds and tinds — pstMnp","title":"Update prinds and tinds — pstMnp","text":"Return tree updated slots.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/pstMnp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update prinds and tinds — pstMnp","text":"","code":"pstMnp(tree)"},{"path":"https://docs.ropensci.org/phylotaR/reference/pstMnp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update prinds and tinds — pstMnp","text":"tree TreeMan object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/pstMnp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update prinds and tinds — pstMnp","text":"function automatically run. run, creating yor functions add remove elements ndlst.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/randTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random tree — randTree","title":"Generate a random tree — randTree","text":"Returns random TreeMan tree n tips.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/randTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random tree — randTree","text":"","code":"randTree(n, wndmtrx = FALSE, parallel = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/randTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random tree — randTree","text":"n number tips, integer, must 3 greater wndmtrx T/F add node matrix? Default FALSE. parallel T/F run parallel? Default FALSE.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/randTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a random tree — randTree","text":"Equivalent ape's rtree() returns TreeMan tree. Tree always rooted bifurcating.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/randTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random tree — randTree","text":"","code":"tree <- randTree(5)"},{"path":"https://docs.ropensci.org/phylotaR/reference/rank_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get rank — rank_get","title":"Get rank — rank_get","text":"Look-taxonomic rank dictionary.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rank_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get rank — rank_get","text":"","code":"rank_get(txid, txdct)"},{"path":"https://docs.ropensci.org/phylotaR/reference/rank_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get rank — rank_get","text":"txid txid txdct TaxDict","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rank_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get rank — rank_get","text":"character","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/rawseqrec_breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Breakdown a sequence record into its features — rawseqrec_breakdown","title":"Breakdown a sequence record into its features — rawseqrec_breakdown","text":"Takes GenBank record's elements returns SeqRec. sequences lots features, sequence broken features provided right size. Sequences either returned features whole sequence records, never .","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rawseqrec_breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breakdown a sequence record into its features — rawseqrec_breakdown","text":"","code":"rawseqrec_breakdown(record_parts, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/rawseqrec_breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breakdown a sequence record into its features — rawseqrec_breakdown","text":"record_parts list record elements GenBank record ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rawseqrec_breakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Breakdown a sequence record into its features — rawseqrec_breakdown","text":"list SeqRecs","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/readTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Newick tree — readTree","title":"Read a Newick tree — readTree","text":"Return TreeMan TreeMen object Newick treefile","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/readTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Newick tree — readTree","text":"","code":"readTree(   file = NULL,   text = NULL,   spcl_slt_nm = \"Unknown\",   wndmtrx = FALSE,   parallel = FALSE,   progress = \"none\" )"},{"path":"https://docs.ropensci.org/phylotaR/reference/readTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Newick tree — readTree","text":"file file path text Newick character string spcl_slt_nm name special slot internal node labels, default 'Unknown'. wndmtrx T/F add node matrix? Default FALSE. parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/readTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a Newick tree — readTree","text":"Read single multiple trees file, text string. Parallelizable reading multiple trees. function add internal node labels Newick tree user-defined data slots. name slot defined spcl_slt_nm. data can accessed/manipulated `getNdsSlt()` function. Trees always read rooted. (Unrooted trees polytomous root nodes.)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/readTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Newick tree — readTree","text":"","code":"# tree string with internal node labels as bootstrap results tree <- readTree(   text = \"((A:1.0,B:1.0)0.9:1.0,(C:1.0,D:1.0)0.8:1.0)0.7:1.0;\",   spcl_slt_nm = \"bootstrap\" ) # retrieve bootstrap values by node tree[\"bootstrap\"] #>     A     B    n3     C     D    n6    n7  #>    NA    NA \"0.9\"    NA    NA \"0.8\" \"0.7\""},{"path":"https://docs.ropensci.org/phylotaR/reference/readTrmn.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a .trmn tree — readTrmn","title":"Read a .trmn tree — readTrmn","text":"Return TreeMan TreeMen object .trmn treefile","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/readTrmn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a .trmn tree — readTrmn","text":"","code":"readTrmn(file, wndmtrx = FALSE, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/readTrmn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a .trmn tree — readTrmn","text":"file file path wndmtrx T/F add node matrix? Default FALSE. parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/readTrmn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a .trmn tree — readTrmn","text":"Read tree(s) file using .trmn format. faster read write tree files using treeman .trmn file format. addition possible encode information possible Newick, e.g. taxonomic information additional slot names added tree recorded file.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/readTrmn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a .trmn tree — readTrmn","text":"","code":"tree <- randTree(10) writeTrmn(tree, file = \"test.trmn\") tree <- readTrmn(\"test.trmn\") file.remove(\"test.trmn\") #> [1] TRUE"},{"path":"https://docs.ropensci.org/phylotaR/reference/read_phylota.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Phylota object in R — read_phylota","title":"Generate a Phylota object in R — read_phylota","text":"Creates Phylota object containing information clusters, sequences taxonomy working directory completed pipeline.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/read_phylota.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Phylota object in R — read_phylota","text":"","code":"read_phylota(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/read_phylota.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Phylota object in R — read_phylota","text":"wd Working directory","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/read_phylota.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Phylota object in R — read_phylota","text":"Phylota","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/read_phylota.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Phylota object in R — read_phylota","text":"","code":"if (FALSE) {      # Note, this example requires a wd with a completed phylotaR run   phylota <- read_phylota(wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a phylotaR pipeline run — reset","title":"Reset a phylotaR pipeline run — reset","text":"Resets pipeline specified stage.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a phylotaR pipeline run — reset","text":"","code":"reset(wd, stage, hard = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a phylotaR pipeline run — reset","text":"wd Working directory stage Name stage pipeline reset hard T/F, delete cached data?","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/reset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a phylotaR pipeline run — reset","text":"","code":"if (FALSE) {      # Note: this example requires BLAST and internet to run.      # example with temp folder   wd <- file.path(tempdir(), 'aotus')   # setup for aotus, make sure aotus/ folder already exists   if (!dir.exists(wd)) {     dir.create(wd)   }   ncbi_dr <- '[SET BLAST+ BIN PATH HERE]'   setup(wd = wd, txid = 9504, ncbi_dr = ncbi_dr)  # txid for Aotus primate genus   # individually run taxise   taxise_run(wd = wd)   # reset back to taxise as if it has not been run   reset(wd = 'aotus', stage = 'taxise')   # run taxise again ....   taxise_run(wd = wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/restart.html","id":null,"dir":"Reference","previous_headings":"","what":"Restart a phylotaR pipeline run — restart","title":"Restart a phylotaR pipeline run — restart","text":"Restarts running pipeline started run.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/restart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restart a phylotaR pipeline run — restart","text":"","code":"restart(wd, nstages = 4)"},{"path":"https://docs.ropensci.org/phylotaR/reference/restart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restart a phylotaR pipeline run — restart","text":"wd Working directory nstages Number total stages run, max 4.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/restart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restart a phylotaR pipeline run — restart","text":"","code":"if (FALSE) {      # Note: this example requires BLAST and internet to run.      # example with temp folder   wd <- file.path(tempdir(), 'aotus')   # setup for aotus, make sure aotus/ folder already exists   if (!dir.exists(wd)) {     dir.create(wd)   }   ncbi_dr <- '[SET BLAST+ BIN PATH HERE]'   setup(wd = wd, txid = 9504, ncbi_dr = ncbi_dr)  # txid for Aotus primate genus   # run and stop after 10 seconds   R.utils::withTimeout(expr = {     run(wd = wd)   }, timeout = 10)   # use ctrl+c or Esc to kill without a timelimit   # and restart with ....   restart(wd = wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/rmClade.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a clade from a tree — rmClade","title":"Remove a clade from a tree — rmClade","text":"Returns tree clade removed","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmClade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a clade from a tree — rmClade","text":"","code":"rmClade(tree, id)"},{"path":"https://docs.ropensci.org/phylotaR/reference/rmClade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a clade from a tree — rmClade","text":"tree TreeMan object id node ID parent clade removed","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmClade.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove a clade from a tree — rmClade","text":"Inverse function getSubtree(). Takes tree removes clade based internal node specified. Node specified id, descending nodes tips removed. resulting tree replace missing clade tip id.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/rmClade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a clade from a tree — rmClade","text":"","code":"t1 <- randTree(100) # remove a clade t2 <- rmClade(t1, \"n2\") summary(t1) #> Tree (TreeMan Object): #>   + 100 tips #>   + 99 internal nodes #>   + Binary #>   + PD 102 #>   + Root node is \"n1\" summary(t2) #> Tree (TreeMan Object): #>   + 36 tips #>   + 35 internal nodes #>   + Binary #>   + PD 35.3 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNdmtrx.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove node matrix — rmNdmtrx","title":"Remove node matrix — rmNdmtrx","text":"Return tree memory heavy node matrix removed.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNdmtrx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove node matrix — rmNdmtrx","text":"","code":"rmNdmtrx(tree)"},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNdmtrx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove node matrix — rmNdmtrx","text":"tree TreeMan object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNdmtrx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove node matrix — rmNdmtrx","text":"Potential uses: reduce memory load tree, save tree using serialization methods.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNdmtrx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove node matrix — rmNdmtrx","text":"","code":"# tree <- randTree(10) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 9.44 #>   + Root node is \"n1\" tree <- rmNdmtrx(tree) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 9.44 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove nodes from a tree — rmNodes","title":"Remove nodes from a tree — rmNodes","text":"Returns tree node ID(s) removed","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove nodes from a tree — rmNodes","text":"","code":"rmNodes(tree, nids, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove nodes from a tree — rmNodes","text":"tree TreeMan object nids internal node IDs progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove nodes from a tree — rmNodes","text":"Removes nodes tree. Joins nodes following nodes preceding node removed. Creates polytomies. Warning: use function remove tip nodes, create corrupted tree.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/rmNodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove nodes from a tree — rmNodes","text":"","code":"tree <- randTree(10) tree <- rmNodes(tree, \"n3\") summary(tree) # tree is now polytmous #> Tree (TreeMan Object): #>   + 10 tips #>   + 8 internal nodes #>   + Polytomous #>   + PD 10.2 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmOtherSlt.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a user-defined slot — rmOtherSlt","title":"Remove a user-defined slot — rmOtherSlt","text":"Returns tree user-defined tree slot removed.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmOtherSlt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a user-defined slot — rmOtherSlt","text":"","code":"rmOtherSlt(tree, slt_nm)"},{"path":"https://docs.ropensci.org/phylotaR/reference/rmOtherSlt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a user-defined slot — rmOtherSlt","text":"tree TreeMan object slt_nm name slot removed","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmOtherSlt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove a user-defined slot — rmOtherSlt","text":"user can specify new slot using setNdSlt() function upon reading tree. can removed using function specifying name slot removed.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/rmOtherSlt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a user-defined slot — rmOtherSlt","text":"","code":"tree <- randTree(10) vals <- runif(min = 0, max = 1, n = tree[\"nall\"]) tree <- setNdsOther(tree, tree[\"all\"], vals, \"confidence\") tree <- updateSlts(tree) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 9.01 #>   + Root node is \"n1\" #>   + With additional node slots: #>     [confidence] tree <- rmOtherSlt(tree, \"confidence\") tree <- updateSlts(tree) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 9.01 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmTips.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove tips from a tree — rmTips","title":"Remove tips from a tree — rmTips","text":"Returns tree tip ID(s) removed","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmTips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove tips from a tree — rmTips","text":"","code":"rmTips(tree, tids, drp_intrnl = TRUE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/rmTips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove tips from a tree — rmTips","text":"tree TreeMan object tids tip IDs drp_intrnl Boolean, drop internal branches, default FALSE progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/rmTips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove tips from a tree — rmTips","text":"Removes tips tree. Set drp_intrnl FALSE convert internal nodes new tips. Warning: use function remove internal nodes, create corrupted tree.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/rmTips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove tips from a tree — rmTips","text":"","code":"tree <- randTree(10) tree <- rmTips(tree, \"t1\") summary(tree) #> Tree (TreeMan Object): #>   + 9 tips #>   + 8 internal nodes #>   + Binary #>   + PD 8.39 #>   + Root node is \"n1\" # running the function using an internal # node will create a corrupted tree tree <- rmTips(tree, \"n3\") # run summary() to make sure a change has # not created a corruption # summary(tree)"},{"path":"https://docs.ropensci.org/phylotaR/reference/run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run phylotaR pipeline — run","title":"Run phylotaR pipeline — run","text":"Run entire phylotaR pipeline. generated files stored wd. process can stopped anytime  restarted restart. nstages must numeric value representing number stages run. Stages run following order: 1 - taxise, 2 - download, 3 - cluster 4 - cluster2. example, specifying nstages = 3, run taxise, download cluster. Stages can also run individually, see linked functions .","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run phylotaR pipeline — run","text":"","code":"run(wd, nstages = 4)"},{"path":"https://docs.ropensci.org/phylotaR/reference/run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run phylotaR pipeline — run","text":"wd Working directory nstages Number total stages run, max 4.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run phylotaR pipeline — run","text":"","code":"if (FALSE) {      # Note: this example requires BLAST and internet to run.      # example with temp folder   wd <- file.path(tempdir(), 'aotus')   # setup for aotus, make sure aotus/ folder already exists   if (!dir.exists(wd)) {     dir.create(wd)   }   ncbi_dr <- '[SET BLAST+ BIN PATH HERE]'   # e.g. \"/usr/local/ncbi/blast/bin/\"   setup(wd = wd, txid = 9504, ncbi_dr = ncbi_dr)  # txid for Aotus primate genus   run(wd = wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/safely_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely run rentrez function — safely_connect","title":"Safely run rentrez function — safely_connect","text":"Safely run rentrez function. query fails, function retry.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/safely_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely run rentrez function — safely_connect","text":"","code":"safely_connect(func, args, fnm, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/safely_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely run rentrez function — safely_connect","text":"func rentrez function args rentrez function arguments, list fnm rentrez function name ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/safely_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely run rentrez function — safely_connect","text":"rentrez function results","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/saveTreeMan.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a TreeMan object in serialization format — saveTreeMan","title":"Save a TreeMan object in serialization format — saveTreeMan","text":"TreeMan equivalent save() able handle node matrices.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/saveTreeMan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a TreeMan object in serialization format — saveTreeMan","text":"","code":"saveTreeMan(tree, file)"},{"path":"https://docs.ropensci.org/phylotaR/reference/saveTreeMan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a TreeMan object in serialization format — saveTreeMan","text":"tree TreeMan object file file path","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/saveTreeMan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save a TreeMan object in serialization format — saveTreeMan","text":"possible use save() TreeMan objects node matrices. Node matrices bigmemory matrices therefore outside R environment, see bigmemory documentation information. Saving loading bigmemory matrix may cause memory issues R cause R crash. function can safely store TreeMan object without node matrix. function stores tree using serialization format node matrix hidden .csv. parts tree can reloaded R environment loadTreeMan(). hidden node matrix filename based file argument: file + _ndmtrx Reading writing trees saveTreeMan() loadTreeMan faster read write functions.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/saveTreeMan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a TreeMan object in serialization format — saveTreeMan","text":"","code":"tree <- randTree(100, wndmtrx = TRUE) #> Note, trees with `ndmtrx` cannot be saved and loaded using `save()` or `savehistory()`. Loading from these files may cause unusual behaviour. saveTreeMan(tree, file = \"test.RData\") rm(tree) tree <- loadTreeMan(file = \"test.RData\") file.remove(\"test.RData\", \"testRData_ndmtrx\") #> [1] TRUE TRUE"},{"path":"https://docs.ropensci.org/phylotaR/reference/searchTxnyms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get node labels based on online taxonomic database — searchTxnyms","title":"Get node labels based on online taxonomic database — searchTxnyms","text":"Return names node tree based searching tip labels  Global Names Resolver http://resolver.globalnames.org/ NCBI.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/searchTxnyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get node labels based on online taxonomic database — searchTxnyms","text":"","code":"searchTxnyms(tree, cache = FALSE, parent = NULL, clean = TRUE, infer = TRUE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/searchTxnyms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get node labels based on online taxonomic database — searchTxnyms","text":"tree TreeMan object cache T/F, create local cache downloaded names? parent specify parent names prevent false names clean T/F, ensure returned names contain special characters? infer T/F, infer taxonyms unfound nodes?","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/searchTxnyms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get node labels based on online taxonomic database — searchTxnyms","text":"node, descendants searched, taxonomic lineages returned searched find lowest shared name. tip labels searched specified taxonomic database GNR NCBI. (far tested NCBI database.) Use infer argument ensure taxonym returned nodes. infer true, nodes without identifed taxonym adopt taxonym parent. raise warning connection fails return NULL.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/searchTxnyms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get node labels based on online taxonomic database — searchTxnyms","text":"","code":"tree <- randTree(8) new_tids <- c(   \"Gallus_gallus\", \"Aileuropoda_melanoleucha\", \"Ailurus_fulgens\",   \"Rattus_rattus\", \"Mus_musculus\", \"Gorilla_gorilla\", \"Pan_trogoldytes\", \"Homo_sapiens\" ) tree <- setNdsID(tree, tree[\"tips\"], new_tids) nd_labels <- searchTxnyms(tree) print(nd_labels) #>                       n1                       n2                       n3  #>                \"Amniota\"                \"Amniota\"                \"Amniota\"  #>                       n4                       n5                       n6  #>          \"Boreoeutheria\"          \"Boreoeutheria\"                \"Amniota\"  #>                       n7            Gallus_gallus Aileuropoda_melanoleucha  #>          \"Boreoeutheria\"                 \"Gallus\"            \"Aileuropoda\"  #>          Ailurus_fulgens            Rattus_rattus             Mus_musculus  #>                \"Ailurus\"                 \"Rattus\"                    \"Mus\"  #>          Gorilla_gorilla          Pan_trogoldytes             Homo_sapiens  #>                \"Gorilla\"                    \"Pan\"                   \"Homo\""},{"path":"https://docs.ropensci.org/phylotaR/reference/search_and_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Run rentrez function and cache results — search_and_cache","title":"Run rentrez function and cache results — search_and_cache","text":"Safely run rentrez function. query fails, function retry. query results cached. remove cached data use hard reset.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/search_and_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run rentrez function and cache results — search_and_cache","text":"","code":"search_and_cache(func, args, fnm, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/search_and_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run rentrez function and cache results — search_and_cache","text":"func rentrez function args rentrez function arguments, list fnm rentrez function name ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/search_and_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run rentrez function and cache results — search_and_cache","text":"rentrez function results","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/searchterm_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct GenBank Search Term — searchterm_gen","title":"Construct GenBank Search Term — searchterm_gen","text":"Construct search term searching GenBank's nucleotide database. Limits maximum size sequences, avoids whole genome shotguns, predicted, unverified synthetic sequences.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/searchterm_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct GenBank Search Term — searchterm_gen","text":"","code":"searchterm_gen(txid, ps, direct = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/searchterm_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct GenBank Search Term — searchterm_gen","text":"txid Taxonomic ID ps Parameters list, generated parameters() direct Node-level subtree well? Default FALSE.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/searchterm_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct GenBank Search Term — searchterm_gen","text":"character, search term","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/seeds_blast.html","id":null,"dir":"Reference","previous_headings":"","what":"BLAST seed sequences — seeds_blast","title":"BLAST seed sequences — seeds_blast","text":"Runs -v-blast seed sequences.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seeds_blast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BLAST seed sequences — seeds_blast","text":"","code":"seeds_blast(sqs, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/seeds_blast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BLAST seed sequences — seeds_blast","text":"sqs seed sequences BLASTed ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seeds_blast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BLAST seed sequences — seeds_blast","text":"blast res data.frame","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/seq_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download sequences for txids — seq_download","title":"Download sequences for txids — seq_download","text":"Look download sequences given taxonomic IDs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seq_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download sequences for txids — seq_download","text":"","code":"seq_download(txids, txdct, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/seq_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download sequences for txids — seq_download","text":"txids Taxonomic node IDs, numeric vector txdct Taxonomic dictionary ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seq_download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download sequences for txids — seq_download","text":"Sequence downloads cached.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/seqarc_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sequence archive — seqarc_gen","title":"Generate sequence archive — seqarc_gen","text":"Creates S4 SeqArc list SeqRecs","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqarc_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sequence archive — seqarc_gen","text":"","code":"seqarc_gen(seqrecs)"},{"path":"https://docs.ropensci.org/phylotaR/reference/seqarc_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sequence archive — seqarc_gen","text":"seqrecs List SeqRecs","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqarc_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate sequence archive — seqarc_gen","text":"SeqArc","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment sequence records list — seqrec_augment","title":"Augment sequence records list — seqrec_augment","text":"Add taxids records convert archive.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment sequence records list — seqrec_augment","text":"","code":"seqrec_augment(sqs, txdct)"},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment sequence records list — seqrec_augment","text":"sqs List SeqRecs txdct Taxonomic Dictionary","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment sequence records list — seqrec_augment","text":"SeqArc","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw Entrez gb text record to SeqRecs — seqrec_convert","title":"Convert raw Entrez gb text record to SeqRecs — seqrec_convert","text":"Parses returned sequences features Entrez, returns one SeqRec objects raw record.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw Entrez gb text record to SeqRecs — seqrec_convert","text":"","code":"seqrec_convert(raw_recs, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw Entrez gb text record to SeqRecs — seqrec_convert","text":"raw_recs Raw text records returned Entrez fetch ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw Entrez gb text record to SeqRecs — seqrec_convert","text":"SeqRecs","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sequence record — seqrec_gen","title":"Generate sequence record — seqrec_gen","text":"Creates S4 SeqRec","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sequence record — seqrec_gen","text":"","code":"seqrec_gen(   accssn,   nm,   txid,   sq,   dfln,   orgnsm,   ml_typ,   rec_typ,   vrsn,   age,   lctn = NULL )"},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sequence record — seqrec_gen","text":"accssn Accession ID nm Sequence name txid Taxonomic ID source organism sq Sequence dfln Definition line orgnsm Source organism name ml_typ Molecule type rec_typ Sequence record type vrsn Accession version age Number days since upload lctn Location numbers features, e.g. '1..200'","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate sequence record — seqrec_gen","text":"SeqRec","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_get.html","id":null,"dir":"Reference","previous_headings":"","what":"seqrec_get — seqrec_get","title":"seqrec_get — seqrec_get","text":"Downloads sequences GenBank batches.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"seqrec_get — seqrec_get","text":"","code":"seqrec_get(txid, ps, direct = FALSE, lvl = 0)"},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"seqrec_get — seqrec_get","text":"txid NCBI taxonomic ID ps Parameters list, generated parameters() direct Node-level subtree well? Default FALSE. lvl Integer, number message indentations indicating code depth.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"seqrec_get — seqrec_get","text":"Vector sequence records","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/seqrec_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"seqrec_get — seqrec_get","text":"restez database available number sequences retrieve less 'btchsz', function look sequences database rather download.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the age of a tree — setAge","title":"Set the age of a tree — setAge","text":"Return tree age altered.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the age of a tree — setAge","text":"","code":"setAge(tree, val)"},{"path":"https://docs.ropensci.org/phylotaR/reference/setAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the age of a tree — setAge","text":"tree TreeMan object val new age","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setAge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the age of a tree — setAge","text":"Use function change age tree. example, might want convert tree age equals 1. function achieve modiyfing every branch, maintaining relative lengths.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the age of a tree — setAge","text":"","code":"tree <- randTree(10) tree <- setAge(tree, val = 1) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 2.56 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdID.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the ID of a node — setNdID","title":"Set the ID of a node — setNdID","text":"Return tree ID node altered.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the ID of a node — setNdID","text":"","code":"setNdID(tree, id, val)"},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the ID of a node — setNdID","text":"tree TreeMan object id id changed val new id","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdID.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the ID of a node — setNdID","text":"IDs changed directly TreeMan class. change ID use function. Warning: IDs must unique, avoid spaces IDs use letters, numbers underscores. Use updateSlts running.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the ID of a node — setNdID","text":"","code":"tree <- randTree(10) tree <- setNdID(tree, \"t1\", \"heffalump\") tree <- updateSlts(tree)"},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdOther.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a user defined slot — setNdOther","title":"Set a user defined slot — setNdOther","text":"Return tree user defined slot node ID.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdOther.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a user defined slot — setNdOther","text":"","code":"setNdOther(tree, id, val, slt_nm)"},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdOther.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a user defined slot — setNdOther","text":"tree TreeMan object id id node val data slot slt_nm slot name","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdOther.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set a user defined slot — setNdOther","text":"user can specify new slots tree. Add new slot function providing node ID, value new slot unique new slot name. Slot names must default TreeMan names. new value can data type.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdOther.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a user defined slot — setNdOther","text":"","code":"tree <- randTree(10) tree <- setNdOther(tree, \"t1\", 1, \"binary_val\") tree <- updateSlts(tree) (getNdSlt(tree, id = \"t1\", slt_nm = \"binary_val\")) #> [1] 1"},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdSpn.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the branch length of a specific node — setNdSpn","title":"Set the branch length of a specific node — setNdSpn","text":"Return tree span node altered.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdSpn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the branch length of a specific node — setNdSpn","text":"","code":"setNdSpn(tree, id, val)"},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdSpn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the branch length of a specific node — setNdSpn","text":"tree TreeMan object id id node whose preceding edge changed val new span","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdSpn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the branch length of a specific node — setNdSpn","text":"Takes tree, node ID new value node's preceding branch length (span).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdSpn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the branch length of a specific node — setNdSpn","text":"","code":"tree <- randTree(10) tree <- setNdSpn(tree, id = \"t1\", val = 100) tree <- updateSlts(tree) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 107 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsID.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the IDs of multiple nodes — setNdsID","title":"Set the IDs of multiple nodes — setNdsID","text":"Return tree IDs nodes altered.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the IDs of multiple nodes — setNdsID","text":"","code":"setNdsID(tree, ids, vals, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the IDs of multiple nodes — setNdsID","text":"tree TreeMan object ids ids changed vals new ids parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsID.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the IDs of multiple nodes — setNdsID","text":"Runs setNdID() multiple nodes. Warning: IDs must unique, avoid spaces IDs, use numbers, letters underscores. Parellizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the IDs of multiple nodes — setNdsID","text":"","code":"tree <- randTree(10) new_ids <- paste0(\"heffalump_\", 1:tree[\"ntips\"]) tree <- setNdsID(tree, tree[\"tips\"], new_ids) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 9.79 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsOther.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a user defined slot for multiple nodes — setNdsOther","title":"Set a user defined slot for multiple nodes — setNdsOther","text":"Return tree user defined slot node IDs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsOther.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a user defined slot for multiple nodes — setNdsOther","text":"","code":"setNdsOther(tree, ids, vals, slt_nm, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsOther.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a user defined slot for multiple nodes — setNdsOther","text":"tree TreeMan object ids id sof nodes vals data slot slt_nm slot name parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsOther.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set a user defined slot for multiple nodes — setNdsOther","text":"Runs setNdOther() multiple nodes. Parellizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsOther.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a user defined slot for multiple nodes — setNdsOther","text":"","code":"tree <- randTree(10) # e.g. confidences for nodes vals <- runif(min = 0, max = 1, n = tree[\"nall\"]) tree <- setNdsOther(tree, tree[\"all\"], vals, \"confidence\") tree <- updateSlts(tree) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 10.2 #>   + Root node is \"n1\" #>   + With additional node slots: #>     [confidence] (getNdsSlt(tree, ids = tree[\"all\"], slt_nm = \"confidence\")) #>        n1        n2        n3        n4        n5        n6        n7        n8  #> 0.4809234 0.8587359 0.9239257 0.7437844 0.7743736 0.4510006 0.8044644 0.1762576  #>        n9        t1        t2        t3        t4        t5        t6        t7  #> 0.7152410 0.9353107 0.2404478 0.4693941 0.1605854 0.3557688 0.9645920 0.7278199  #>        t8        t9       t10  #> 0.1427215 0.9365869 0.4791499"},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsSpn.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the branch lengths of specific nodes — setNdsSpn","title":"Set the branch lengths of specific nodes — setNdsSpn","text":"Return tree spans nodes altered.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsSpn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the branch lengths of specific nodes — setNdsSpn","text":"","code":"setNdsSpn(tree, ids, vals, parallel = FALSE, progress = \"none\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsSpn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the branch lengths of specific nodes — setNdsSpn","text":"tree TreeMan object ids ids nodes whose preceding edges changed vals new spans parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsSpn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the branch lengths of specific nodes — setNdsSpn","text":"Runs setNdSpn multiple nodes. Parallelizable.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setNdsSpn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the branch lengths of specific nodes — setNdsSpn","text":"","code":"tree <- randTree(10) # make tree taxonomic tree <- setNdsSpn(tree, ids = tree[\"all\"], vals = 1) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 19 #>   + Root node is \"n1\" # remove spns by setting all to 0 tree <- setNdsSpn(tree, ids = tree[\"all\"], vals = 0) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + Without node spans #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/setPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the phylogenetic diversity — setPD","title":"Set the phylogenetic diversity — setPD","text":"Return tree phylogenetic diversity altered.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setPD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the phylogenetic diversity — setPD","text":"","code":"setPD(tree, val)"},{"path":"https://docs.ropensci.org/phylotaR/reference/setPD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the phylogenetic diversity — setPD","text":"tree TreeMan object val new phylogenetic diversity","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setPD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the phylogenetic diversity — setPD","text":"Use function convert phylogenetic diversity tree. example, might want convert tree sum branches 1. function achieve modiyfing every branch, maintaining relative lengths.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setPD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the phylogenetic diversity — setPD","text":"","code":"tree <- randTree(10) tree <- setPD(tree, val = 1) summary(tree) #> Tree (TreeMan Object): #>   + 10 tips #>   + 9 internal nodes #>   + Binary #>   + PD 1 #>   + Root node is \"n1\""},{"path":"https://docs.ropensci.org/phylotaR/reference/setTxnyms.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the txnym slots in a tree — setTxnyms","title":"Set the txnym slots in a tree — setTxnyms","text":"Return tree txnyms added specified nodes","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setTxnyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the txnym slots in a tree — setTxnyms","text":"","code":"setTxnyms(tree, txnyms)"},{"path":"https://docs.ropensci.org/phylotaR/reference/setTxnyms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the txnym slots in a tree — setTxnyms","text":"tree TreeMan object txnyms named vector list","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setTxnyms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the txnym slots in a tree — setTxnyms","text":"Returns tree. Specify taxonomic groups nodes tree providing vector list named node IDs. Takes output searchTxnyms. letters, numbers underscores allowed. remove special characters use regular expressions, e.g. gsub(['-zA-Z0-9_'], '', txnym)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setTxnyms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the txnym slots in a tree — setTxnyms","text":"","code":"data(mammals) # let's change the txnym for humans # what's its summary before we change anything? summary(mammals[[\"Homo_sapiens\"]]) #> Node (tip node): #>   + ID: \"Homo_sapiens\" #>   + txnym: \"Homo\" #>   + prid: \"n2938\" #>   + spn: 9.7 #>   + predist: 170 #>   + pd: 0 # now let's add Hominini new_txnym <- list(\"Homo_sapiens\" = c(\"Hominini\", \"Homo\")) mammals <- setTxnyms(mammals, new_txnym) summary(mammals[[\"Homo_sapiens\"]]) #> Node (tip node): #>   + ID: \"Homo_sapiens\" #>   + txnym: \"Hominini\", \"Homo\" #>   + prid: \"n2938\" #>   + spn: 9.7 #>   + predist: 170 #>   + pd: 0"},{"path":"https://docs.ropensci.org/phylotaR/reference/setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Set-up parameters — setup","title":"Set-up parameters — setup","text":"Set working directory parameters.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set-up parameters — setup","text":"","code":"setup(   wd,   txid,   ncbi_dr = \".\",   v = FALSE,   overwrite = FALSE,   outsider = FALSE,   ... )"},{"path":"https://docs.ropensci.org/phylotaR/reference/setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set-up parameters — setup","text":"wd Working directory txid Root taxonomic ID(s), vector numeric ncbi_dr Directory NCBI BLAST tools, default '.' v Verbose, T/F overwrite Overwrite existing cache? outsider Run outsider? T/F ... Additional parameters","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set-up parameters — setup","text":"See parameters() description parameters defaults. can change parameters folder set parameters_reset().","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set-up parameters — setup","text":"","code":"if (FALSE) {      # Note: this example requires BLAST to run.      # example with temp folder   wd <- file.path(tempdir(), 'aotus')   # setup for aotus, make sure aotus/ folder already exists   if (!dir.exists(wd)) {     dir.create(wd)   }   ncbi_dr <- '[SET BLAST+ BIN PATH HERE]'   # e.g. \"/usr/local/ncbi/blast/bin/\"   setup(wd = wd, txid = 9504, ncbi_dr = ncbi_dr)  # txid for Aotus primate genus   # see ?parameters for all available parameter options }"},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if sids exist — sids_check","title":"Check if sids exist — sids_check","text":"Check sids already downloaded txid.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if sids exist — sids_check","text":"","code":"sids_check(wd, txid)"},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if sids exist — sids_check","text":"wd Working directory txid Taxonomic ID, numeric","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if sids exist — sids_check","text":"T/F","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if sids exist — sids_check","text":"#' @name sqs_load #' @title Load sequences cache #' @description Load sequences downloaded dwnld function. #' @param wd Working directory #' @param txid Taxonomic ID, numeric #' @family run-private #' @return SeqArc sqs_load <- function(wd, txid)    d <- file.path(wd, 'cache')   (!file.exists(d))      stop('Cache exist.')  d <- file.path(d, 'sqs')   (!file.exists(d))      stop('`sqs` cache. run download stage?')  fl <- file.path(d, paste0(txid, '.RData'))   (!file.exists(fl))      stop(paste0('[', txid, '] `sqs` cache.'))  sqs <- try(readRDS(file = fl), silent = TRUE)   (inherits(sqs, 'try-error'))      file.remove(fl)  sqs","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Return random set of sequence IDs — sids_get","title":"Return random set of sequence IDs — sids_get","text":"given txid return random set sequences associated.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return random set of sequence IDs — sids_get","text":"","code":"sids_get(txid, direct, ps, retmax = 100, hrdmx = 1e+05)"},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return random set of sequence IDs — sids_get","text":"txid NCBI taxon identifier direct Node-level subtree well? Default FALSE. ps Parameters list, generated parameters() retmax Maximum number sequences querying model organisms. smaller random, larger faster. hrdmx Absolute maximum number sequence IDs download single query.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return random set of sequence IDs — sids_get","text":"vector IDs","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return random set of sequence IDs — sids_get","text":"model organisms downloading IDs can take long time even cause xml parsing error. search hrdmx sequences, function run multiple small searches downloading retmax seq IDs time different retstart values generate semi-random vector sequence IDs. searches, IDs retrieved. Note, makes sense mdlthrs parameters greater hrdmx function.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load sids from cache — sids_load","title":"Load sids from cache — sids_load","text":"Load sids downloaded sids_get function.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load sids from cache — sids_load","text":"","code":"sids_load(wd, txid)"},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load sids from cache — sids_load","text":"wd Working directory txid Taxonomic ID, numeric","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load sids from cache — sids_load","text":"vector sids","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save sids to cache — sids_save","title":"Save sids to cache — sids_save","text":"Saves sids downloaded","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save sids to cache — sids_save","text":"","code":"sids_save(wd, txid, sids)"},{"path":"https://docs.ropensci.org/phylotaR/reference/sids_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save sids to cache — sids_save","text":"wd Working directory txid Taxonomic ID, numeric sids sids","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/sqs_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of sequences for txid — sqs_count","title":"Count number of sequences for txid — sqs_count","text":"Return number sequences associated taxonomic ID NCBI GenBank.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sqs_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of sequences for txid — sqs_count","text":"","code":"sqs_count(txid, ps, direct = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/sqs_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of sequences for txid — sqs_count","text":"txid Taxonomic ID ps Parameters list, generated parameters() direct Node-level subtree well? Default FALSE.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sqs_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of sequences for txid — sqs_count","text":"integer","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/sqs_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save sequences to cache — sqs_save","title":"Save sequences to cache — sqs_save","text":"Saves sequences downloaded","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sqs_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save sequences to cache — sqs_save","text":"","code":"sqs_save(wd, txid, sqs)"},{"path":"https://docs.ropensci.org/phylotaR/reference/sqs_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save sequences to cache — sqs_save","text":"wd Working directory txid Taxonomic ID, numeric sqs Sequences","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sqs_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save sequences to cache — sqs_save","text":"Used within dwnld function. Saves sequence data txid cache.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/stage_args_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check stage arguments — stage_args_check","title":"Check stage arguments — stage_args_check","text":"Ensures stage arguments valid, raises error .","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/stage_args_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check stage arguments — stage_args_check","text":"","code":"stage_args_check(to, frm)"},{"path":"https://docs.ropensci.org/phylotaR/reference/stage_args_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check stage arguments — stage_args_check","text":"ending stage frm starting stage","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/stage_args_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check stage arguments — stage_args_check","text":"character, stage message","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/stages_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequentially run each stage — stages_run","title":"Sequentially run each stage — stages_run","text":"Runs stages frm . Records stage progress cache.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/stages_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequentially run each stage — stages_run","text":"","code":"stages_run(wd, to, frm, stgs_msg, rstrt = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/stages_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequentially run each stage — stages_run","text":"wd Working directory Total number stages run frm Starting stage run stgs_msg Printout stage message log rstrt Restarting, T/F","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/sturgeons.html","id":null,"dir":"Reference","previous_headings":"","what":"sturgeons — sturgeons","title":"sturgeons — sturgeons","text":"sturgeons","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sturgeons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"sturgeons — sturgeons","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/sturgeons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sturgeons — sturgeons","text":"","code":"data(\"sturgeons\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/summary_phylota.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise clusters in Phylota Table — summary_phylota","title":"Summarise clusters in Phylota Table — summary_phylota","text":"Generates summary data.frame clusters Phylota object.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/summary_phylota.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise clusters in Phylota Table — summary_phylota","text":"","code":"summary_phylota(phylota)"},{"path":"https://docs.ropensci.org/phylotaR/reference/summary_phylota.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise clusters in Phylota Table — summary_phylota","text":"phylota Phylota object","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/tardigrades.html","id":null,"dir":"Reference","previous_headings":"","what":"tardigrades — tardigrades","title":"tardigrades — tardigrades","text":"tardigrades","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/tardigrades.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"tardigrades — tardigrades","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/tardigrades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tardigrades — tardigrades","text":"","code":"data(\"tardigrades\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/tax_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download taxonomic records — tax_download","title":"Download taxonomic records — tax_download","text":"Downloads one batch taxonomic records.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/tax_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download taxonomic records — tax_download","text":"","code":"tax_download(ids, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/tax_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download taxonomic records — tax_download","text":"ids Vector taxonomic IDs ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/tax_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download taxonomic records — tax_download","text":"list list","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/taxaResolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve taxonmic names online — taxaResolve","title":"Resolve taxonmic names online — taxaResolve","text":"Resolve taxonomic names via Global Names Resolver.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/taxaResolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve taxonmic names online — taxaResolve","text":"","code":"taxaResolve(   nms,   batch = 100,   datasource = 4,   genus = TRUE,   cache = FALSE,   parent = NULL )"},{"path":"https://docs.ropensci.org/phylotaR/reference/taxaResolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve taxonmic names online — taxaResolve","text":"nms vector names batch size batches queried datasource ID number datasource genus boolean, true search GNR just genus name names failed resolve using full species name cache T/F, create local cache downloaded names? parent specify parent names prevent false names","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/taxaResolve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resolve taxonmic names online — taxaResolve","text":"Returns dataframe containing GNR metadata name wames resolved returned NA. Various datasources available, see http://resolver.globalnames.org/data_sources list IDs. Default 4 NCBI. raise warning connection fails return NULL.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/taxaResolve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve taxonmic names online — taxaResolve","text":"","code":"my_lovely_names <- c(   \"Gallus gallus\", \"Pongo pingu\", \"Homo sapiens\",   \"Arabidopsis thaliana\", \"Macaca thibetana\", \"Bacillus subtilis\" ) res <- taxaResolve(nms = my_lovely_names) length(colnames(res)) # 10 different metadata for returned names including original search name #> [1] 10 # let's look at the lineages lineages <- strsplit(as.vector(res$lineage), \"\\\\|\") print(lineages[[6]]) # the bacteria has far fewer taxonomic levels #>  [1] \"\"                  \"Bacteria\"          \"Terrabacteria\"     #>  [4] \"Bacillota\"         \"Bacilli\"           \"Bacillales\"        #>  [7] \"Bacillaceae\"       \"Bacillus\"          \"Bacillus subtilis\" #> [10] \"Bacillus subtilis\""},{"path":"https://docs.ropensci.org/phylotaR/reference/taxdict_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate taxonomic dictionary — taxdict_gen","title":"Generate taxonomic dictionary — taxdict_gen","text":"Takes vector txids list taxonomic records returns taxonomic dictionary.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/taxdict_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate taxonomic dictionary — taxdict_gen","text":"","code":"taxdict_gen(txids, recs, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/taxdict_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate taxonomic dictionary — taxdict_gen","text":"txids Vector taxonomic IDs recs List taxonomic records ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/taxdict_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate taxonomic dictionary — taxdict_gen","text":"TaxDict","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/taxise_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run taxise stage — taxise_run","title":"Run taxise stage — taxise_run","text":"Run first stage phylotaR, taxise. looks descendant taxonomic nodes given taxonomic ID. looks relevant taxonomic information generates taxonomic dictionary user interaction phylotaR completed.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/taxise_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run taxise stage — taxise_run","text":"","code":"taxise_run(wd)"},{"path":"https://docs.ropensci.org/phylotaR/reference/taxise_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run taxise stage — taxise_run","text":"wd Working directory","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/taxise_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run taxise stage — taxise_run","text":"Objects cached.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/taxise_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run taxise stage — taxise_run","text":"","code":"if (FALSE) {      # Note: this example requires BLAST and internet to run.      # example with temp folder   wd <- file.path(tempdir(), 'aotus')   # setup for aotus, make sure aotus/ folder already exists   if (!dir.exists(wd)) {     dir.create(wd)   }   ncbi_dr <- '[SET BLAST+ BIN PATH HERE]'   setup(wd = wd, txid = 9504, ncbi_dr = ncbi_dr)  # txid for Aotus primate genus   # individually run stages   taxise_run(wd = wd) }"},{"path":"https://docs.ropensci.org/phylotaR/reference/taxtree_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate taxonomic tree — taxtree_gen","title":"Generate taxonomic tree — taxtree_gen","text":"Generate taxonomic tree easy look taxonomic parents descendants.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/taxtree_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate taxonomic tree — taxtree_gen","text":"","code":"taxtree_gen(prinds, ids, root, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/taxtree_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate taxonomic tree — taxtree_gen","text":"prinds Vector integers indicating preceding node. ids Vector taxonomic IDs root ID root taxon ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/taxtree_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate taxonomic tree — taxtree_gen","text":"TreeMan TreeMan class","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/tinamous.html","id":null,"dir":"Reference","previous_headings":"","what":"tinamous — tinamous","title":"tinamous — tinamous","text":"tinamous","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/tinamous.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"tinamous — tinamous","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/tinamous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tinamous — tinamous","text":"","code":"data(\"tinamous\")"},{"path":"https://docs.ropensci.org/phylotaR/reference/twoer.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a tree of two tips — twoer","title":"Generate a tree of two tips — twoer","text":"Returns TreeMan tree two tips root.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/twoer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a tree of two tips — twoer","text":"","code":"twoer(tids = c(\"t1\", \"t2\"), spns = c(1, 1), rid = \"root\", root_spn = 0)"},{"path":"https://docs.ropensci.org/phylotaR/reference/twoer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a tree of two tips — twoer","text":"tids tip IDs spns tip spans rid root ID root_spn root span","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/twoer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a tree of two tips — twoer","text":"Useful building larger trees addClade(). Note, node matrix added tree two tips.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/twoer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a tree of two tips — twoer","text":"","code":"tree <- twoer()"},{"path":"https://docs.ropensci.org/phylotaR/reference/txids_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches for descendant taxonomic IDs — txids_get","title":"Searches for descendant taxonomic IDs — txids_get","text":"Searches NCBI taxonomy descendant taxonomic nodes.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/txids_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches for descendant taxonomic IDs — txids_get","text":"","code":"txids_get(ps, retmax = 10000)"},{"path":"https://docs.ropensci.org/phylotaR/reference/txids_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches for descendant taxonomic IDs — txids_get","text":"ps Parameters list, generated parameters() retmax integer, maximum number IDs return per query","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/txids_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches for descendant taxonomic IDs — txids_get","text":"Vector txids vector ids","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/txnds_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of descending taxonomic nodes — txnds_count","title":"Count number of descending taxonomic nodes — txnds_count","text":"Searches NCBI taxonomy returns number descendants taxonomic nodes (species, genera ...) ID.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/txnds_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of descending taxonomic nodes — txnds_count","text":"","code":"txnds_count(txid, ps)"},{"path":"https://docs.ropensci.org/phylotaR/reference/txnds_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of descending taxonomic nodes — txnds_count","text":"txid Taxonomic ID ps Parameters list, generated parameters()","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/txnds_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of descending taxonomic nodes — txnds_count","text":"integer","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/ultrTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Make tree ultrametric — ultrTree","title":"Make tree ultrametric — ultrTree","text":"Returns tree tips ending time 0","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/ultrTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make tree ultrametric — ultrTree","text":"","code":"ultrTree(tree)"},{"path":"https://docs.ropensci.org/phylotaR/reference/ultrTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make tree ultrametric — ultrTree","text":"tree TreeMan object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/ultrTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make tree ultrametric — ultrTree","text":"Re-calculates branch lengths tree tips brought time point: species extant.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/ultrTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make tree ultrametric — ultrTree","text":"","code":"tree <- randTree(10) (getDcsd(tree)) # list all extinct tips #> [1] \"t1\"  \"t10\" \"t2\"  \"t3\"  \"t4\"  \"t5\"  \"t6\"  \"t7\"  \"t9\"  tree <- ultrTree(tree) (getDcsd(tree)) # list all extinct tips #> character(0)"},{"path":"https://docs.ropensci.org/phylotaR/reference/unblncdTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an unbalanced tree — unblncdTree","title":"Generate an unbalanced tree — unblncdTree","text":"Returns unbalanced TreeMan tree n tips.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/unblncdTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an unbalanced tree — unblncdTree","text":"","code":"unblncdTree(n, wndmtrx = FALSE, parallel = FALSE)"},{"path":"https://docs.ropensci.org/phylotaR/reference/unblncdTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an unbalanced tree — unblncdTree","text":"n number tips, integer, must 3 greater wndmtrx T/F add node matrix? Default FALSE. parallel T/F run parallel? Default FALSE.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/unblncdTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate an unbalanced tree — unblncdTree","text":"Equivalent ape's stree(type='left') returns TreeMan tree. Tree always rooted bifurcating.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/unblncdTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an unbalanced tree — unblncdTree","text":"","code":"tree <- unblncdTree(5)"},{"path":"https://docs.ropensci.org/phylotaR/reference/updateSlts.html","id":null,"dir":"Reference","previous_headings":"","what":"Update tree slots after manipulation — updateSlts","title":"Update tree slots after manipulation — updateSlts","text":"Return tree updated slots.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/updateSlts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update tree slots after manipulation — updateSlts","text":"","code":"updateSlts(tree)"},{"path":"https://docs.ropensci.org/phylotaR/reference/updateSlts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update tree slots after manipulation — updateSlts","text":"tree TreeMan object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/updateSlts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update tree slots after manipulation — updateSlts","text":"Tree slots TreeMan object usually automatically updated. certain single node manipulations . Run function update slots.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/update_phylota.html","id":null,"dir":"Reference","previous_headings":"","what":"Update slots — update_phylota","title":"Update slots — update_phylota","text":"change, run update slots.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/update_phylota.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update slots — update_phylota","text":"","code":"update_phylota(phylota)"},{"path":"https://docs.ropensci.org/phylotaR/reference/update_phylota.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update slots — update_phylota","text":"phylota Phylota","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/update_phylota.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update slots — update_phylota","text":"Phylota","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/warn.html","id":null,"dir":"Reference","previous_headings":"","what":"Write warning message to log — warn","title":"Write warning message to log — warn","text":"Inform user potential error occurred log.txt.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/warn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write warning message to log — warn","text":"","code":"warn(ps, ...)"},{"path":"https://docs.ropensci.org/phylotaR/reference/warn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write warning message to log — warn","text":"ps Parameters list, generated parameters() ... Message elements concatenating","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Newick tree — writeTree","title":"Write a Newick tree — writeTree","text":"Creates Newick tree TreeMan object.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Newick tree — writeTree","text":"","code":"writeTree(   tree,   file,   append = FALSE,   ndLabels = function(nd) {      return(NULL)  },   parallel = FALSE,   progress = \"none\" )"},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Newick tree — writeTree","text":"tree TreeMan object file file path append T/F append tree already existing file ndLabels node label function parallel logical, make parallel? progress name progress bar use, see create_progress_bar","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a Newick tree — writeTree","text":"ndLabels argument can used add user defined node label Newick tree. take 1 argument, nd, node represented list. return single character value can added newick string.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a Newick tree — writeTree","text":"","code":"tree <- randTree(10) # write out the tree with node labels as IDs ndLabels <- function(n) {   n[[\"id\"]] } writeTree(tree, file = \"example.tre\", ndLabels = ndLabels) #> NULL file.remove(\"example.tre\") #> [1] TRUE"},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTrmn.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a .trmn tree — writeTrmn","title":"Write a .trmn tree — writeTrmn","text":"Write disk TreeMan TreeMan object using .trmn treefile","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTrmn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a .trmn tree — writeTrmn","text":"","code":"writeTrmn(tree, file)"},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTrmn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a .trmn tree — writeTrmn","text":"tree TreeMan object TreeMen object file file path","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTrmn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a .trmn tree — writeTrmn","text":"Write tree(s) file using .trmn format. faster read write tree files using treeman .trmn file format. addition possible encode information possible Newick, e.g. taxonomic information additional slot names added tree recorded file.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/writeTrmn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a .trmn tree — writeTrmn","text":"","code":"tree <- randTree(10) writeTrmn(tree, file = \"test.trmn\") tree <- readTrmn(\"test.trmn\") file.remove(\"test.trmn\") #> [1] TRUE"},{"path":"https://docs.ropensci.org/phylotaR/reference/write_sqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write out sequences — write_sqs","title":"Write out sequences — write_sqs","text":"Write sequences, .fasta, given vector IDs.","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/write_sqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write out sequences — write_sqs","text":"","code":"write_sqs(phylota, outfile, sid, sq_nm = sid, width = 80)"},{"path":"https://docs.ropensci.org/phylotaR/reference/write_sqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write out sequences — write_sqs","text":"phylota Phylota outfile Output file sid Sequence ID(s) sq_nm Sequence name(s) width Maximum number characters line, integer","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/write_sqs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write out sequences — write_sqs","text":"user can control output definition lines sequences using sq_nm. default sequences IDs used. Note, ensure sq_nm order sid.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/reference/write_sqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write out sequences — write_sqs","text":"","code":"data('aotus') # get sequences for a cluster and write out random_cid <- sample(aotus@cids, 1) sids <- aotus[[random_cid]]@sids write_sqs(phylota = aotus, outfile = file.path(tempdir(), 'test.fasta'),           sq_nm = 'my_gene', sid = sids)"},{"path":"https://docs.ropensci.org/phylotaR/reference/yeasts.html","id":null,"dir":"Reference","previous_headings":"","what":"yeasts — yeasts","title":"yeasts — yeasts","text":"yeasts","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/yeasts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"yeasts — yeasts","text":"TreeMan Phylota object","code":""},{"path":"https://docs.ropensci.org/phylotaR/reference/yeasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"yeasts — yeasts","text":"","code":"data(\"yeasts\")"},{"path":"https://docs.ropensci.org/phylotaR/news/index.html","id":"phylotar-130","dir":"Changelog","previous_headings":"","what":"phylotaR 1.3.0","title":"phylotaR 1.3.0","text":"Included code treeman package package. Wrapped outsider package archived. Updated fixed dependency restez. lot CRAN submission problems pointed Victoria Wimmer patience handle , able release CRAN.","code":"Please add \\value to .Rd files regarding exported methods and explain  the functions results in the documentation. Please write about the  structure of the output (class) and also what the output means. (If a  function does not return a value, please document that too, e.g.  \\value{No return value, called for side effects} or similar) Missing Rd-tags in up to 93 .Rd files, e.g.:       addClade.Rd: \\value       addNdmtrx.Rd: \\value       addTip.Rd: \\value       blncdTree.Rd: \\value       calcDstBLD.Rd: \\value       calcDstMtrx.Rd: \\value       ...  You write information messages to the console that cannot be easily  suppressed. It is more R like to generate objects that can be used to  extract the information a user is interested in, and then print() that  object. Instead of print()/cat() rather use message()/warning()  or  if(verbose)cat(..) (or maybe stop()) if you really have to write text to  the console. (except for print, summary, interactive functions)  Please do not modify the global environment (e.g. by using <<-) in your  functions. This is not allowed by the CRAN policies.  Please fix and resubmit."},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/news/index.html","id":"outsider-integration-1-2-0","dir":"Changelog","previous_headings":"","what":"outsider integration","title":"phylotaR 1.2.0","text":"Now work outsider, reduing user need install BLAST+ New parameter: db_only, avoid downloads fetching exclusively restez database Excluding Transcriptome Shotgun Assembly sequences, making downloading faster","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/news/index.html","id":"minor-fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"Minor fixes","title":"phylotaR 1.1.1","text":"Validity check SeqRec","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phylotaR/news/index.html","id":"restez-integration-1-1-0","dir":"Changelog","previous_headings":"","what":"restez integration","title":"phylotaR 1.1.0","text":"Now works restez Multiple IDs txid argument Fancy new colours Easier process killing","code":""},{"path":"https://docs.ropensci.org/phylotaR/news/index.html","id":"phylotar-100","dir":"Changelog","previous_headings":"","what":"phylotaR 1.0.0","title":"phylotaR 1.0.0","text":"CRAN release: 2018-07-31","code":""}]
